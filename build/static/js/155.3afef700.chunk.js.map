{"version":3,"file":"static/js/155.3afef700.chunk.js","mappings":"+KAUA,MAAMA,UAAwBC,EAAAA,UAC1BC,uBAAAA,CAAwBC,GACpB,MAAMC,EAAUC,KAAKC,MAAMC,SAASC,QACpC,GAAIJ,GAAWD,EAAUM,YAAcJ,KAAKC,MAAMG,UAAW,CACzD,MAAMC,EAAOL,KAAKC,MAAMK,QAAQH,QAChCE,EAAKE,OAASR,EAAQS,cAAgB,EACtCH,EAAKI,MAAQV,EAAQW,aAAe,EACpCL,EAAKM,IAAMZ,EAAQa,UACnBP,EAAKQ,KAAOd,EAAQe,UACxB,CACA,OAAO,IACX,CAIAC,kBAAAA,GAAuB,CACvBC,MAAAA,GACI,OAAOhB,KAAKC,MAAMgB,QACtB,EAEJ,SAASC,EAAQC,GAA0B,IAAzB,SAAEF,EAAQ,UAAEb,GAAWe,EACrC,MAAMC,GAAKC,EAAAA,EAAAA,SACLC,GAAMC,EAAAA,EAAAA,QAAO,MACblB,GAAOkB,EAAAA,EAAAA,QAAO,CAChBd,MAAO,EACPF,OAAQ,EACRI,IAAK,EACLE,KAAM,KAEJ,MAAEW,IAAUC,EAAAA,EAAAA,YAAWC,EAAAA,GAkC7B,OAxBAC,EAAAA,EAAAA,qBAAmB,KACf,MAAM,MAAElB,EAAK,OAAEF,EAAM,IAAEI,EAAG,KAAEE,GAASR,EAAKF,QAC1C,GAAIC,IAAckB,EAAInB,UAAYM,IAAUF,EACxC,OACJe,EAAInB,QAAQyB,QAAQC,YAAcT,EAClC,MAAMU,EAAQC,SAASC,cAAc,SAerC,OAdIR,IACAM,EAAMN,MAAQA,GAClBO,SAASE,KAAKC,YAAYJ,GACtBA,EAAMK,OACNL,EAAMK,MAAMC,WAAW,oCAADC,OACDjB,EAAE,yEAAAiB,OAEd5B,EAAK,wCAAA4B,OACJ9B,EAAM,qCAAA8B,OACT1B,EAAG,sCAAA0B,OACFxB,EAAI,0CAIT,KACHkB,SAASE,KAAKK,YAAYR,EAAM,CACnC,GACF,CAAC1B,KACImC,EAAAA,EAAAA,KAAI5C,EAAiB,CAAES,UAAWA,EAAWF,SAAUoB,EAAKhB,QAASD,EAAMY,SAAUrB,EAAAA,aAAmBqB,EAAU,CAAEK,SAChI,CClEA,MAAMkB,EAAgBrB,IAA4F,IAA3F,SAAEF,EAAQ,QAAEwB,EAAO,UAAErC,EAAS,eAAEsC,EAAc,OAAEC,EAAM,sBAAEC,EAAqB,KAAEC,GAAO1B,EACzG,MAAM2B,GAAmBC,EAAAA,EAAAA,GAAYC,GAC/B5B,GAAKC,EAAAA,EAAAA,SACL4B,GAAyBC,EAAAA,EAAAA,cAAaC,IACxCL,EAAiBM,IAAID,GAAS,GAC9B,IAAK,MAAME,KAAcP,EAAiBQ,SACtC,IAAKD,EACD,OAERX,GAAkBA,GAAgB,GACnC,CAACI,EAAkBJ,IAChBa,GAAUC,EAAAA,EAAAA,UAAQ,KAAM,CAC1BpC,KACAqB,UACArC,YACAuC,SACAD,eAAgBO,EAChBQ,SAAWN,IACPL,EAAiBM,IAAID,GAAS,GACvB,IAAML,EAAiBY,OAAOP,OAQ7CP,EACM,CAACe,KAAKC,SAAUX,GAChB,CAAC7C,EAAW6C,IAiBlB,OAhBAO,EAAAA,EAAAA,UAAQ,KACJV,EAAiBe,SAAQ,CAACC,EAAGC,IAAQjB,EAAiBM,IAAIW,GAAK,IAAO,GACvE,CAAC3D,IAKJR,EAAAA,WAAgB,MACXQ,IACI0C,EAAiBzC,MAClBqC,GACAA,GAAgB,GACrB,CAACtC,IACS,cAATyC,IACA5B,GAAWsB,EAAAA,EAAAA,KAAIrB,EAAU,CAAEd,UAAWA,EAAWa,SAAUA,MAEvDsB,EAAAA,EAAAA,KAAIyB,EAAAA,EAAgBC,SAAU,CAAEC,MAAOX,EAAStC,SAAUA,GAAW,EAEjF,SAAS+B,IACL,OAAO,IAAImB,GACf,C,cCxDA,MAAMC,EAAeC,GAAUA,EAAMN,KAAO,GAC5C,SAASO,EAAarD,GAClB,MAAMsD,EAAW,GAMjB,OAJAC,EAAAA,SAASX,QAAQ5C,GAAWoD,KACpBI,EAAAA,EAAAA,gBAAeJ,IACfE,EAASG,KAAKL,EAAM,IAErBE,CACX,C,aCgCA,MAAMI,EAAkBxD,IAA2H,IAA1H,SAAEF,EAAQ,OAAE0B,EAAM,QAAEF,GAAU,EAAI,eAAEC,EAAc,sBAAEE,GAAwB,EAAI,KAAEC,EAAO,OAAM,UAAE+B,GAAY,GAAQzD,EAC1I,MAAO0D,EAAiBC,IAAgBC,EAAAA,EAAAA,IAAYH,GAK9CI,GAAkBxB,EAAAA,EAAAA,UAAQ,IAAMc,EAAarD,IAAW,CAACA,IAKzDgE,EAAcL,IAAcC,EAAkB,GAAKG,EAAgBE,IAAId,GAIvEe,GAAkB5D,EAAAA,EAAAA,SAAO,GAMzB6D,GAAyB7D,EAAAA,EAAAA,QAAOyD,GAIhCK,GAAetC,EAAAA,EAAAA,IAAY,IAAM,IAAIoB,OAKpCmB,EAAgBC,IAAqBC,EAAAA,EAAAA,UAASR,IAC9CS,EAAkBC,IAAuBF,EAAAA,EAAAA,UAASR,IACzDW,EAAAA,EAAAA,IAA0B,KACtBR,EAAgBhF,SAAU,EAC1BiF,EAAuBjF,QAAU6E,EAIjC,IAAK,IAAIY,EAAI,EAAGA,EAAIH,EAAiBI,OAAQD,IAAK,CAC9C,MAAM7B,EAAMK,EAAYqB,EAAiBG,IACpCX,EAAYa,SAAS/B,GAMtBsB,EAAa3B,OAAOK,IALU,IAA1BsB,EAAaU,IAAIhC,IACjBsB,EAAajC,IAAIW,GAAK,EAMlC,IACD,CAAC0B,EAAkBR,EAAYY,OAAQZ,EAAYe,KAAK,OAC3D,MAAMC,EAAkB,GACxB,GAAIjB,IAAoBM,EAAgB,CACpC,IAAIY,EAAe,IAAIlB,GAKvB,IAAK,IAAIY,EAAI,EAAGA,EAAIH,EAAiBI,OAAQD,IAAK,CAC9C,MAAMvB,EAAQoB,EAAiBG,GACzB7B,EAAMK,EAAYC,GACnBY,EAAYa,SAAS/B,KACtBmC,EAAaC,OAAOP,EAAG,EAAGvB,GAC1B4B,EAAgBvB,KAAKL,GAE7B,CAcA,MATa,SAATxB,GAAmBoD,EAAgBJ,SACnCK,EAAeD,GAEnBP,EAAoBpB,EAAa4B,SACjCX,EAAkBP,EAMtB,CAWA,MAAM,YAAEoB,IAAgB3E,EAAAA,EAAAA,YAAW4E,EAAAA,GACnC,OAAQ9D,EAAAA,EAAAA,KAAI+D,EAAAA,SAAU,CAAErF,SAAUwE,EAAiBP,KAAKb,IAChD,MAAMN,EAAMK,EAAYC,GAClBjE,IAAYwE,IAAcC,KAE1BG,IAAoBS,GAClBR,EAAYa,SAAS/B,IAoB7B,OAAQxB,EAAAA,EAAAA,KAAIC,EAAe,CAAEpC,UAAWA,EAAWqC,UAAU0C,EAAgBhF,UAAWsC,SAC9E8D,EACO5D,OAAQvC,OAAYmG,EAAY5D,EAAQC,sBAAuBA,EAAuBC,KAAMA,EAAMH,eAAgBtC,OAAYmG,EArBhIC,KACX,IAAInB,EAAaoB,IAAI1C,GAIjB,OAHAsB,EAAajC,IAAIW,GAAK,GAK1B,IAAI2C,GAAsB,EAC1BrB,EAAaxB,SAAS8C,IACbA,IACDD,GAAsB,EAAK,IAE/BA,IACgB,OAAhBN,QAAwC,IAAhBA,GAAkCA,IAC1DV,EAAoBN,EAAuBjF,SAC3CyE,IAA+B,OAAjBE,QAA0C,IAAjBA,GAAmCA,KAC1EpC,GAAkBA,IACtB,EAI+JzB,SAAUoD,GAASN,EAAI,KACzL,C,2DCxIb,SAASgB,IAA8B,IAAlB6B,IAASC,UAAAhB,OAAA,QAAAU,IAAAM,UAAA,KAAAA,UAAA,GAC1B,MAAMtD,GAAU9B,EAAAA,EAAAA,YAAWuC,EAAAA,GAC3B,GAAgB,OAAZT,EACA,MAAO,EAAC,EAAM,MAClB,MAAM,UAAEnD,EAAS,eAAEsC,EAAc,SAAEe,GAAaF,EAG1CnC,GAAKC,EAAAA,EAAAA,UACXyF,EAAAA,EAAAA,YAAU,KACFF,GACAnD,EAASrC,EAAG,GACjB,CAACwF,IACJ,MAAM9B,GAAe5B,EAAAA,EAAAA,cAAY,IAAM0D,GAAalE,GAAkBA,EAAetB,IAAK,CAACA,EAAIsB,EAAgBkE,IAC/G,OAAQxG,GAAasC,EAAiB,EAAC,EAAOoC,GAAgB,EAAC,EACnE,C,kCCrCA,MAAMuB,GAAqBU,E,QAAAA,eAAc,CAAC,E,kCCG1C,MAAMrF,GAAsBqF,E,QAAAA,eAAc,CACtCC,mBAAqBC,GAAMA,EAC3BC,UAAU,EACVC,cAAe,S,kCCHnB,MAAMnD,GAAkB+C,E,QAAAA,eAAc,K,iBCJtC,SAASK,EAA8BC,GACnC,GAAqB,qBAAVC,MACP,OAAOD,EAMX,MAAME,EAAiB,IAAIpD,IAO3B,OAAO,IAAImD,OANuB,WAI9B,OAAOD,KAAiBR,UAC5B,GAC4C,CAMxCd,IAAKA,CAACyB,EAASzD,IACC,WAARA,EACOsD,GAINE,EAAed,IAAI1C,IACpBwD,EAAenE,IAAIW,EAAKsD,EAAiBtD,IAEtCwD,EAAexB,IAAIhC,KAGtC,C,gCCnCA,SAAS0D,EAAoBC,GACzB,OAAc,OAANA,GACS,kBAANA,GACY,oBAAZA,EAAEC,KACjB,C,YCJA,MAAMC,EAAqBF,GAChBG,MAAMC,QAAQJ,GCDzB,SAASK,EAAeC,EAAMC,GAC1B,IAAKJ,MAAMC,QAAQG,GACf,OAAO,EACX,MAAMC,EAAaD,EAAKpC,OACxB,GAAIqC,IAAeF,EAAKnC,OACpB,OAAO,EACX,IAAK,IAAID,EAAI,EAAGA,EAAIsC,EAAYtC,IAC5B,GAAIqC,EAAKrC,KAAOoC,EAAKpC,GACjB,OAAO,EAEf,OAAO,CACX,CCRA,SAASuC,EAAeT,GACpB,MAAoB,kBAANA,GAAkBG,MAAMC,QAAQJ,EAClD,CCLA,SAASU,EAAcC,GACnB,MAAMC,EAAQ,CAAC,CAAC,EAAG,CAAC,GAKpB,OAJkB,OAAlBD,QAA4C,IAAlBA,GAAoCA,EAAc/E,OAAOO,SAAQ,CAACK,EAAOH,KAC/FuE,EAAM,GAAGvE,GAAOG,EAAM6B,MACtBuC,EAAM,GAAGvE,GAAOG,EAAMqE,aAAa,IAEhCD,CACX,CACA,SAASE,EAAwBvI,EAAOwI,EAAY9F,EAAQ0F,GAIxD,GAA0B,oBAAfI,EAA2B,CAClC,MAAOtI,EAASuI,GAAYN,EAAcC,GAC1CI,EAAaA,OAAsBlC,IAAX5D,EAAuBA,EAAS1C,EAAM0C,OAAQxC,EAASuI,EACnF,CAaA,GAR0B,kBAAfD,IACPA,EAAaxI,EAAM0I,UAAY1I,EAAM0I,SAASF,IAOxB,oBAAfA,EAA2B,CAClC,MAAOtI,EAASuI,GAAYN,EAAcC,GAC1CI,EAAaA,OAAsBlC,IAAX5D,EAAuBA,EAAS1C,EAAM0C,OAAQxC,EAASuI,EACnF,CACA,OAAOD,CACX,CC/BA,SAASG,EAAeP,EAAeI,EAAY9F,GAC/C,MAAM1C,EAAQoI,EAAcQ,WAC5B,OAAOL,EAAwBvI,EAAOwI,OAAuBlC,IAAX5D,EAAuBA,EAAS1C,EAAM0C,OAAQ0F,EACpG,CCLA,MAAMS,EAAuB,CACzB,UACA,cACA,aACA,aACA,WACA,YACA,QAEEC,EAAe,CAAC,aAAcD,GCRpC,SAASE,EAAKC,GACV,IAAIC,EACJ,MAAO,UACY3C,IAAX2C,IACAA,EAASD,KACNC,EAEf,CCNA,MAAMC,EAAyBH,GAAK,SAAgCzC,IAA1B6C,OAAOC,iBCAjD,MAAMC,EACFC,WAAAA,CAAYC,GAERxJ,KAAKyJ,KAAO,IAAMzJ,KAAK0J,OAAO,QAC9B1J,KAAKwJ,WAAaA,EAAWG,OAAOC,QACxC,CACA,YAAIC,GAEA,OAAOC,QAAQC,IAAI/J,KAAKwJ,WAAWtE,KAAK8E,GAAc,aAAcA,EAAYA,EAAUH,SAAWG,IACzG,CAIAC,MAAAA,CAAOC,GACH,OAAOlK,KAAKwJ,WAAW,GAAGU,EAC9B,CACAC,MAAAA,CAAOD,EAAUE,GACb,IAAK,IAAIxE,EAAI,EAAGA,EAAI5F,KAAKwJ,WAAW3D,OAAQD,IACxC5F,KAAKwJ,WAAW5D,GAAGsE,GAAYE,CAEvC,CACAC,cAAAA,CAAeC,EAAUC,GACrB,MAAMC,EAAgBxK,KAAKwJ,WAAWtE,KAAK8E,GACnCb,KAA4Ba,EAAUK,eAC/BL,EAAUK,eAAeC,GAEP,oBAAbC,EACLA,EAASP,QADf,IAIT,MAAO,KACHQ,EAAc3G,SAAQ,CAAC4G,EAAQ7E,KAC3B6E,GAAUA,IACVzK,KAAKwJ,WAAW5D,GAAG6D,MAAM,GAC3B,CAEV,CACA,QAAIiB,GACA,OAAO1K,KAAKiK,OAAO,OACvB,CACA,QAAIS,CAAKA,GACL1K,KAAKmK,OAAO,OAAQO,EACxB,CACA,SAAIC,GACA,OAAO3K,KAAKiK,OAAO,QACvB,CACA,SAAIU,CAAMA,GACN3K,KAAKmK,OAAO,QAASQ,EACzB,CACA,aAAIC,GACA,OAAO5K,KAAKiK,OAAO,YACvB,CACA,YAAIY,GACA,IAAIC,EAAM,EACV,IAAK,IAAIlF,EAAI,EAAGA,EAAI5F,KAAKwJ,WAAW3D,OAAQD,IACxCkF,EAAMnH,KAAKmH,IAAIA,EAAK9K,KAAKwJ,WAAW5D,GAAGiF,UAE3C,OAAOC,CACX,CACApB,MAAAA,CAAOqB,GACH/K,KAAKwJ,WAAW3F,SAASmH,GAAaA,EAASD,MACnD,CACAE,OAAAA,GACIjL,KAAK0J,OAAO,UAChB,CACAwB,IAAAA,GACIlL,KAAK0J,OAAO,OAChB,CACAyB,KAAAA,GACInL,KAAK0J,OAAO,QAChB,CACAe,MAAAA,GACIzK,KAAK0J,OAAO,SAChB,CACA0B,QAAAA,GACIpL,KAAK0J,OAAO,WAChB,ECxEJ,MAAM2B,UAA8B/B,EAChCgC,IAAAA,CAAKC,EAAWC,GACZ,OAAO1B,QAAQC,IAAI/J,KAAKwJ,YAAY8B,KAAKC,GAAWE,MAAMD,EAC9D,ECTJ,SAASE,EAAmBC,EAAY5H,GACpC,OAAO4H,EACDA,EAAW5H,IACT4H,EAAoB,SACpBA,OACFpF,CACV,CCFA,MAAMqF,EAAuB,IAC7B,SAASC,EAAsBC,GAC3B,IAAIjB,EAAW,EAEf,IAAIvC,EAAQwD,EAAU9D,KAAK6C,GAC3B,MAAQvC,EAAMyD,MAAQlB,EAAWe,GAC7Bf,GAHa,GAIbvC,EAAQwD,EAAU9D,KAAK6C,GAE3B,OAAOA,GAAYe,EAAuBI,IAAWnB,CACzD,CCdA,SAASoB,EAAYC,GACjB,MAAuB,oBAATA,CAClB,CCFA,SAAS7B,EAAeL,EAAWM,GAC/BN,EAAUM,SAAWA,EACrBN,EAAUmC,SAAW,IACzB,CCHA,MAAMC,EAAsBC,GAAWxE,MAAMC,QAAQuE,IAAgC,kBAAdA,EAAO,GCIxEC,EAAgB,CAClBC,kBAAchG,GCFlB,SAASiG,EAAavD,EAAUwD,GAC5B,MAAMC,EAAW1D,EAAKC,GACtB,MAAO,KAAQ,IAAI0D,EAAI,OAA8C,QAAtCA,EAAKL,EAAcG,UAAkC,IAAPE,EAAgBA,EAAKD,GAAU,CAChH,CCJA,MAAME,EAAqCJ,GAAa,KACpD,IACIzK,SACKC,cAAc,OACd6K,QAAQ,CAAEC,QAAS,GAAK,CAAET,OAAQ,gBAC3C,CACA,MAAOU,GACH,OAAO,CACX,CACA,OAAO,CAAI,GACZ,gBCCGC,EAAWA,CAACC,EAAMC,EAAIhJ,KACxB,MAAMiJ,EAAmBD,EAAKD,EAC9B,OAA4B,IAArBE,EAAyB,GAAKjJ,EAAQ+I,GAAQE,CAAgB,ECbnEC,EAAuB,SAACf,EAAQxB,GAEjC,IADLwC,EAAUxG,UAAAhB,OAAA,QAAAU,IAAAM,UAAA,GAAAA,UAAA,GAAG,GAELyG,EAAS,GACb,MAAMC,EAAY5J,KAAKmH,IAAInH,KAAK6J,MAAM3C,EAAWwC,GAAa,GAC9D,IAAK,IAAIzH,EAAI,EAAGA,EAAI2H,EAAW3H,IAC3B0H,GAAUjB,EAAOW,EAAS,EAAGO,EAAY,EAAG3H,IAAM,KAEtD,MAAO,UAAPvD,OAAiBiL,EAAOG,UAAU,EAAGH,EAAOzH,OAAS,GAAE,IAC3D,ECPA,SAAS6H,EAAuBrB,GAC5B,OAAOzC,QAA2B,oBAAXyC,GAAyBO,MAC3CP,GACkB,kBAAXA,IACHA,KAAUsB,GAAwBf,MACvCR,EAAmBC,IAClBxE,MAAMC,QAAQuE,IAAWA,EAAOuB,MAAMF,GAC/C,CACA,MAAMG,EAAsB1M,IAAA,IAAE2M,EAAGC,EAAGC,EAAGC,GAAE9M,EAAA,sBAAAkB,OAAqByL,EAAC,MAAAzL,OAAK0L,EAAC,MAAA1L,OAAK2L,EAAC,MAAA3L,OAAK4L,EAAC,MAC3EN,EAAuB,CACzBO,OAAQ,SACRC,KAAM,OACNC,OAAQ,UACRC,QAAS,WACTC,UAAW,cACXC,OAAsBV,EAAoB,CAAC,EAAG,IAAM,IAAM,IAC1DW,QAAuBX,EAAoB,CAAC,IAAM,EAAG,EAAG,MACxDY,OAAsBZ,EAAoB,CAAC,IAAM,IAAM,KAAO,MAC9Da,QAAuBb,EAAoB,CAAC,IAAM,KAAM,IAAM,OAElE,SAASc,EAAwBtC,EAAQxB,GACrC,OAAKwB,EAGsB,oBAAXA,GAAyBO,IAC9BQ,EAAqBf,EAAQxB,GAE/BuB,EAAmBC,GACjBwB,EAAoBxB,GAEtBxE,MAAMC,QAAQuE,GACZA,EAAOnH,KAAK0J,GAAkBD,EAAwBC,EAAe/D,IACxE8C,EAAqBU,UAGlBV,EAAqBtB,QAb5B,CAeR,CCzCA,MAAMwC,EAAa,CACfC,GAAG,EACHC,GAAG,GAEP,SAASC,IACL,OAAOH,EAAWC,GAAKD,EAAWE,CACtC,CCJA,SAASE,EAAaC,EAAmBC,GACrC,MAAMC,ECHV,SAAyBF,EAAmBG,EAAOC,GAC/C,IAAI3C,EACJ,GAAIuC,aAA6BK,QAC7B,MAAO,CAACL,GAEP,GAAiC,kBAAtBA,EAAgC,CAC5C,IAAIM,EAAOzN,SACPsN,IAMAG,EAAOH,EAAMlP,SAEjB,MAAMiP,EAAqH,QAAzGzC,EAAuB,OAAlB2C,QAA4C,IAAlBA,OAA2B,EAASA,EAAcJ,UAAuC,IAAPvC,EAAgBA,EAAK6C,EAAKC,iBAAiBP,GAC9K,OAAOE,EAAWvH,MAAMoF,KAAKmC,GAAY,EAC7C,CACA,OAAOvH,MAAMoF,KAAKiC,EACtB,CDhBqBQ,CAAgBR,GAC3BS,EAAyB,IAAIC,gBAOnC,MAAO,CAACR,GANUS,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACdC,SAAS,GACNX,GAAO,IACVY,OAAQJ,EAAuBI,SAEpBtF,IAAMkF,EAAuBK,QAEhD,CELA,SAASC,EAAahH,GAClB,OAAQiH,IACsB,UAAtBA,EAAMC,aAA2BnB,KAErC/F,EAASiH,EAAM,CAEvB,CCNA,MAAME,EAAgBA,CAACC,EAAQhM,MACtBA,IAGIgM,IAAWhM,GAIT+L,EAAcC,EAAQhM,EAAMiM,gBCfrCC,EAAoBL,GACI,UAAtBA,EAAMC,YACyB,kBAAjBD,EAAMM,QAAuBN,EAAMM,QAAU,GAWhC,IAApBN,EAAMO,UCbfC,EAAoB,IAAIC,IAAI,CAC9B,SACA,QACA,SACA,WACA,MCLJ,MAAMC,EAAa,IAAIC,QCKvB,SAASZ,EAAahH,GAClB,OAAQiH,IACc,UAAdA,EAAMnM,KAEVkF,EAASiH,EAAM,CAEvB,CACA,SAASY,EAAiBC,EAAQ7E,GAC9B6E,EAAOC,cAAc,IAAIC,aAAa,UAAY/E,EAAM,CAAEuE,WAAW,EAAMS,SAAS,IACxF,CCFA,SAASC,EAAkBjB,GACvB,OAAOK,EAAiBL,KAAWlB,GACvC,CAoBA,SAASoC,EAAMlC,EAAmBmC,GAA4B,IAAdlC,EAAOtI,UAAAhB,OAAA,QAAAU,IAAAM,UAAA,GAAAA,UAAA,GAAG,CAAC,EACvD,MAAOuI,EAAUkC,EAAcC,GAAgBtC,EAAaC,EAAmBC,GACzEqC,EAAcC,IAChB,MAAM1R,EAAU0R,EAAWC,cAC3B,IAAKP,EAAkBM,IAAeb,EAAWnK,IAAI1G,GACjD,OACJ6Q,EAAWe,IAAI5R,GACf,MAAM6R,EAAaP,EAAaI,GAC1BI,EAAeA,CAACC,EAAUC,KAC5B3I,OAAO4I,oBAAoB,YAAaC,GACxC7I,OAAO4I,oBAAoB,gBAAiBE,GACvCf,EAAkBW,IAAclB,EAAWnK,IAAI1G,KAGpD6Q,EAAWlN,OAAO3D,GACQ,oBAAf6R,GACPA,EAAWE,EAAU,CAAEC,YAC3B,EAEEE,EAAeE,IACjBN,EAAaM,EAAShD,EAAQiD,iBAC1BhC,EAAcrQ,EAASoS,EAAQpB,QAAQ,EAEzCmB,EAAmBG,IACrBR,EAAaQ,GAAa,EAAM,EAEpCjJ,OAAOkJ,iBAAiB,YAAaL,EAAaX,GAClDlI,OAAOkJ,iBAAiB,gBAAiBJ,EAAiBZ,EAAa,EAW3E,OATAlC,EAASvL,SAAS9D,KHxDtB,SAAqCA,GACjC,OAAQ2Q,EAAkBjK,IAAI1G,EAAQwS,WACZ,IAAtBxS,EAAQyS,QAChB,EGsDaC,CAA4B1S,IACQ,OAArCA,EAAQ2S,aAAa,cACrB3S,EAAQyS,SAAW,IAERrD,EAAQiD,gBAAkBhJ,OAASrJ,GAC3CuS,iBAAiB,cAAed,EAAYF,GACnDvR,EAAQuS,iBAAiB,SAAUpC,GDvDfyC,EAACC,EAAYtB,KACrC,MAAMvR,EAAU6S,EAAWlB,cAC3B,IAAK3R,EACD,OACJ,MAAM8S,EAAgB5C,GAAa,KAC/B,GAAIW,EAAWnK,IAAI1G,GACf,OACJ+Q,EAAiB/Q,EAAS,QAC1B,MAAM+S,EAAc7C,GAAa,KAC7Ba,EAAiB/Q,EAAS,KAAK,IAGnCA,EAAQuS,iBAAiB,QAASQ,EAAaxB,GAC/CvR,EAAQuS,iBAAiB,QAFNS,IAAMjC,EAAiB/Q,EAAS,WAENuR,EAAa,IAE9DvR,EAAQuS,iBAAiB,UAAWO,EAAevB,GAInDvR,EAAQuS,iBAAiB,QAAQ,IAAMvS,EAAQiS,oBAAoB,UAAWa,IAAgBvB,EAAa,ECoC1DqB,CAAoBzC,EAAOoB,IAAeA,EAAa,IAEjGC,CACX,CClEA,MAAMyB,EAAyBC,GAAsB,IAAVA,EAErCC,EAAyBC,GAAiBA,EAAe,ICRzDC,EAAQC,GAAQA,ECEtB,MAAMC,EAAqB,CACvB,uBACA,IACA,IACA,IACA,aACA,aACA,aACA,QACA,SACA,SACA,SACA,UACA,UACA,UACA,OACA,QACA,SAKEC,EAAiB,IAAI5C,IAAI2C,GCvBzBE,EAAiB,IAAI7C,IAAI,CAC3B,QACA,SACA,MACA,OACA,QACA,YACG2C,ICTDG,GACc,EADdA,GAEe,ECCrB,MAAMC,GAAa,CACf,OACA,mBACA,SACA,YACA,SACA,cAGJ,SAASC,GAAoBC,EAAmBC,GAC5C,IAAIC,GAAe,EACfC,GAAoB,EACxB,MAAMzL,EAAQ,CACV0L,MAAO,EACPC,UAAW,EACXC,cAAc,GAEZC,EAAmBA,IAAOL,GAAe,EACzCM,EAAQV,GAAWW,QAAO,CAACC,EAAKvQ,KAClCuQ,EAAIvQ,GCtBZ,SAA0B+P,GAKtB,IAAIS,EAAY,IAAI5D,IAChB6D,EAAY,IAAI7D,IAKhBuD,GAAe,EACfO,GAAiB,EAIrB,MAAMC,EAAc,IAAI7D,QACxB,IAAI8D,EAAkB,CAClBX,MAAO,EACPC,UAAW,EACXC,cAAc,GAElB,SAASU,EAAgB3L,GACjByL,EAAYjO,IAAIwC,KAChB4L,EAAKC,SAAS7L,GACd6K,KAEJ7K,EAAS0L,EACb,CACA,MAAME,EAAO,CAITC,SAAU,SAAC7L,GACP,MACM8L,EAFuClO,UAAAhB,OAAA,QAAAU,IAAAM,UAAA,IAAAA,UAAA,IACNqN,EACLK,EAAYC,EAK9C,OAP0B3N,UAAAhB,OAAA,QAAAU,IAAAM,UAAA,IAAAA,UAAA,IAItB6N,EAAY/C,IAAI1I,GACf8L,EAAMtO,IAAIwC,IACX8L,EAAMpD,IAAI1I,GACPA,CACX,EAIAwB,OAASxB,IACLuL,EAAU9Q,OAAOuF,GACjByL,EAAYhR,OAAOuF,EAAS,EAKhC+L,QAAUC,IACNN,EAAkBM,EAMdf,EACAO,GAAiB,GAGrBP,GAAe,GACdK,EAAWC,GAAa,CAACA,EAAWD,GAErCA,EAAU1Q,QAAQ+Q,GAGlBL,EAAUW,QACVhB,GAAe,EACXO,IACAA,GAAiB,EACjBI,EAAKG,QAAQC,IACjB,GAGR,OAAOJ,CACX,CDxDmBM,CAAiBhB,GACrBG,IACR,CAAC,IACE,KAAEc,EAAI,iBAAEC,EAAgB,OAAEC,EAAM,UAAEC,EAAS,OAAEvU,EAAM,WAAEwU,GAAepB,EACpEqB,EAAeA,KACjB,MAAMxB,EAAYR,EACZnL,EAAM2L,UACNyB,YAAYC,MAClB7B,GAAe,EACfxL,EAAM0L,MAAQD,EACR,IAAO,GACPpQ,KAAKmH,IAAInH,KAAKiS,IAAI3B,EAAY3L,EAAM2L,UAtB/B,IAsBuD,GAClE3L,EAAM2L,UAAYA,EAClB3L,EAAM4L,cAAe,EAErBkB,EAAKJ,QAAQ1M,GACb+M,EAAiBL,QAAQ1M,GACzBgN,EAAON,QAAQ1M,GACfiN,EAAUP,QAAQ1M,GAClBtH,EAAOgU,QAAQ1M,GACfkN,EAAWR,QAAQ1M,GACnBA,EAAM4L,cAAe,EACjBJ,GAAgBD,IAChBE,GAAoB,EACpBH,EAAkB6B,GACtB,EASEX,EAAWpB,GAAWW,QAAO,CAACC,EAAKvQ,KACrC,MAAM8Q,EAAOT,EAAMrQ,GAMnB,OALAuQ,EAAIvQ,GAAO,SAACiR,GAAkD,IAAzCa,EAAShP,UAAAhB,OAAA,QAAAU,IAAAM,UAAA,IAAAA,UAAA,GAAUiP,EAASjP,UAAAhB,OAAA,QAAAU,IAAAM,UAAA,IAAAA,UAAA,GAG7C,OAFKiN,IATTA,GAAe,EACfC,GAAoB,EACfzL,EAAM4L,cACPN,EAAkB6B,IAQXZ,EAAKC,SAASE,EAASa,EAAWC,EAC7C,EACOxB,CAAG,GACX,CAAC,GAMJ,MAAO,CAAEQ,WAAUrK,OALHuK,IACZ,IAAK,IAAIpP,EAAI,EAAGA,EAAI8N,GAAW7N,OAAQD,IACnCwO,EAAMV,GAAW9N,IAAI6E,OAAOuK,EAChC,EAEuB1M,QAAO8L,QACtC,CEpEA,MAAQU,SAAUiB,GAAOtL,OAAQuL,GAAa1N,MAAO2M,GAAWb,MAAO6B,IAAgBtC,GAAqD,qBAA1BuC,sBAAwCA,sBAAwB9C,GAAM,GCAxL,IAAIuC,GACJ,SAASQ,KACLR,QAAMpP,CACV,CASA,MAAMmE,GAAO,CACTiL,IAAKA,UACWpP,IAARoP,IACAjL,GAAKtH,IAAI6R,GAAUf,cAAgBT,EAC7BwB,GAAUhB,UACVyB,YAAYC,OAEfA,IAEXvS,IAAMgT,IACFT,GAAMS,EACNC,eAAeF,GAAU,GC1BjC,SAASG,GAAcC,EAAKC,IACG,IAAvBD,EAAIE,QAAQD,IACZD,EAAI7R,KAAK8R,EACjB,CACA,SAASE,GAAWH,EAAKC,GACrB,MAAMG,EAAQJ,EAAIE,QAAQD,GACtBG,GAAS,GACTJ,EAAIpQ,OAAOwQ,EAAO,EAC1B,CCNA,MAAMC,GACFrN,WAAAA,GACIvJ,KAAKwK,cAAgB,EACzB,CACAmH,GAAAA,CAAIkF,GAEA,OADAP,GAActW,KAAKwK,cAAeqM,GAC3B,IAAMH,GAAW1W,KAAKwK,cAAeqM,EAChD,CACAC,MAAAA,CAAOhJ,EAAGC,EAAGC,GACT,MAAM+I,EAAmB/W,KAAKwK,cAAc3E,OAC5C,GAAKkR,EAEL,GAAyB,IAArBA,EAIA/W,KAAKwK,cAAc,GAAGsD,EAAGC,EAAGC,QAG5B,IAAK,IAAIpI,EAAI,EAAGA,EAAImR,EAAkBnR,IAAK,CAKvC,MAAMiR,EAAU7W,KAAKwK,cAAc5E,GACnCiR,GAAWA,EAAQ/I,EAAGC,EAAGC,EAC7B,CAER,CACAgJ,OAAAA,GACI,OAAOhX,KAAKwK,cAAc3E,MAC9B,CACAqP,KAAAA,GACIlV,KAAKwK,cAAc3E,OAAS,CAChC,EC9BJ,SAASoR,GAAkBvO,EAAUwO,GACjC,OAAOA,EAAgBxO,GAAY,IAAOwO,GAAiB,CAC/D,CCEA,MAIMC,GAAsB,CACxBhX,aAASoG,GAOb,MAAM6Q,GASF7N,WAAAA,CAAY8N,GAAoB,IAAAC,EAAA,SAAdnI,EAAOtI,UAAAhB,OAAA,QAAAU,IAAAM,UAAA,GAAAA,UAAA,GAAG,CAAC,EAKzB7G,KAAKuX,QAAU,UAQfvX,KAAKwX,iBAAmB,KAIxBxX,KAAKyX,OAAS,CAAC,EACfzX,KAAK0X,gBAAkB,SAAChQ,GAAqB,IAAlB1G,IAAM6F,UAAAhB,OAAA,QAAAU,IAAAM,UAAA,KAAAA,UAAA,GAC7B,MAAM8Q,EAAcjN,GAAKiL,MAMrB2B,EAAKM,YAAcD,GACnBL,EAAKO,oBAETP,EAAKrP,KAAOqP,EAAKnX,QACjBmX,EAAKQ,WAAWpQ,GAEZ4P,EAAKnX,UAAYmX,EAAKrP,MAAQqP,EAAKG,OAAOM,QAC1CT,EAAKG,OAAOM,OAAOjB,OAAOQ,EAAKnX,SAG/Ba,GAAUsW,EAAKG,OAAOO,eACtBV,EAAKG,OAAOO,cAAclB,OAAOQ,EAAKnX,QAE9C,EACAH,KAAKiY,aAAc,EACnBjY,KAAK8X,WAAWT,GAChBrX,KAAKkY,MAAQ/I,EAAQ+I,KACzB,CACAJ,UAAAA,CAAW3X,GA/DE+D,MAgETlE,KAAKG,QAAUA,EACfH,KAAK4X,UAAYlN,GAAKiL,MACQ,OAA1B3V,KAAKwX,uBAAyCjR,IAAZpG,IAClCH,KAAKwX,kBAnEAtT,EAmE2BlE,KAAKG,SAlErCgY,MAAMC,WAAWlU,KAoEzB,CACA2T,iBAAAA,GAAiD,IAA/BQ,EAAcxR,UAAAhB,OAAA,QAAAU,IAAAM,UAAA,GAAAA,UAAA,GAAG7G,KAAKG,QACpCH,KAAKqY,eAAiBA,EACtBrY,KAAKsY,cAAgBtY,KAAK4X,SAC9B,CAyCAW,QAAAA,CAASC,GAIL,OAAOxY,KAAKyY,GAAG,SAAUD,EAC7B,CACAC,EAAAA,CAAGC,EAAWzP,GACLjJ,KAAKyX,OAAOiB,KACb1Y,KAAKyX,OAAOiB,GAAa,IAAI9B,IAEjC,MAAM+B,EAAc3Y,KAAKyX,OAAOiB,GAAW/G,IAAI1I,GAC/C,MAAkB,WAAdyP,EACO,KACHC,IAKA5C,GAAMX,MAAK,KACFpV,KAAKyX,OAAOM,OAAOf,WACpBhX,KAAKyJ,MACT,GACF,EAGHkP,CACX,CACAC,cAAAA,GACI,IAAK,MAAMC,KAAiB7Y,KAAKyX,OAC7BzX,KAAKyX,OAAOoB,GAAe3D,OAEnC,CAMA4D,MAAAA,CAAOC,EAAeC,GAClBhZ,KAAK+Y,cAAgBA,EACrB/Y,KAAKgZ,kBAAoBA,CAC7B,CAgBA5V,GAAAA,CAAIsE,GAAkB,IAAf1G,IAAM6F,UAAAhB,OAAA,QAAAU,IAAAM,UAAA,KAAAA,UAAA,GACJ7F,GAAWhB,KAAK+Y,cAIjB/Y,KAAK+Y,cAAcrR,EAAG1H,KAAK0X,iBAH3B1X,KAAK0X,gBAAgBhQ,EAAG1G,EAKhC,CACAiY,eAAAA,CAAgBhR,EAAM9H,EAAS6T,GAC3BhU,KAAKoD,IAAIjD,GACTH,KAAKiI,UAAO1B,EACZvG,KAAKqY,eAAiBpQ,EACtBjI,KAAKsY,cAAgBtY,KAAK4X,UAAY5D,CAC1C,CAKAkF,IAAAA,CAAKxR,GAAwB,IAArByR,IAAYtS,UAAAhB,OAAA,QAAAU,IAAAM,UAAA,KAAAA,UAAA,GAChB7G,KAAK0X,gBAAgBhQ,GACrB1H,KAAKiI,KAAOP,EACZ1H,KAAKsY,cAAgBtY,KAAKqY,oBAAiB9R,EAC3C4S,GAAgBnZ,KAAKyJ,OACjBzJ,KAAKgZ,mBACLhZ,KAAKgZ,mBACb,CAQAjT,GAAAA,GAII,OAHIoR,GAAoBhX,SACpBgX,GAAoBhX,QAAQuE,KAAK1E,MAE9BA,KAAKG,OAChB,CAIAiZ,WAAAA,GACI,OAAOpZ,KAAKiI,IAChB,CAQAM,WAAAA,GACI,MAAMoP,EAAcjN,GAAKiL,MACzB,IAAK3V,KAAKwX,uBACkBjR,IAAxBvG,KAAKqY,gBACLV,EAAc3X,KAAK4X,UAnOJ,GAoOf,OAAO,EAEX,MAAM5D,EAAQrQ,KAAKiS,IAAI5V,KAAK4X,UAAY5X,KAAKsY,cAtO1B,IAwOnB,OAAOrB,GAAkBmB,WAAWpY,KAAKG,SACrCiY,WAAWpY,KAAKqY,gBAAiBrE,EACzC,CAaArM,KAAAA,CAAM0R,GAEF,OADArZ,KAAKyJ,OACE,IAAIK,SAASwP,IAChBtZ,KAAKiY,aAAc,EACnBjY,KAAKgK,UAAYqP,EAAeC,GAC5BtZ,KAAKyX,OAAO8B,gBACZvZ,KAAKyX,OAAO8B,eAAezC,QAC/B,IACDxL,MAAK,KACAtL,KAAKyX,OAAO+B,mBACZxZ,KAAKyX,OAAO+B,kBAAkB1C,SAElC9W,KAAKyZ,gBAAgB,GAE7B,CAMAhQ,IAAAA,GACQzJ,KAAKgK,YACLhK,KAAKgK,UAAUP,OACXzJ,KAAKyX,OAAOiC,iBACZ1Z,KAAKyX,OAAOiC,gBAAgB5C,UAGpC9W,KAAKyZ,gBACT,CAMAE,WAAAA,GACI,QAAS3Z,KAAKgK,SAClB,CACAyP,cAAAA,UACWzZ,KAAKgK,SAChB,CAUA4P,OAAAA,GACI5Z,KAAK4Y,iBACL5Y,KAAKyJ,OACDzJ,KAAKgZ,mBACLhZ,KAAKgZ,mBAEb,EAEJ,SAASa,GAAYxC,EAAMlI,GACvB,OAAO,IAAIiI,GAAYC,EAAMlI,EACjC,C,wCCpTA,SAAS2K,GAAezR,EAAetE,EAAKG,GACpCmE,EAAc0R,SAAShW,GACvBsE,EAAc2R,SAASjW,GAAKX,IAAIc,GAGhCmE,EAAc4R,SAASlW,EAAK8V,GAAY3V,GAEhD,CCfA,MAAMgW,GAAiBhW,GAAU0F,QAAQ1F,GAASA,EAAMqE,aCExD,SAAS4R,GAAqB9R,EAAetE,GACzC,MAAMqW,EAAa/R,EAAc2R,SAAS,cAK1C,GCN6B9V,EDMDkW,ECLrBxQ,QAAQsQ,GAAchW,IAAUA,EAAMyN,KDMzC,OAAOyI,EAAWzI,IAAI5N,GCP9B,IAAiCG,CDSjC,CERA,MAAMmW,GAAeC,GAAQA,EAAIC,QAAQ,kBAAoB,SAASC,cCAhEC,GAA+B,QAAUJ,GADjB,kBCA9B,SAASK,GAAqBrS,GAC1B,OAAOA,EAAcpI,MAAMwa,GAC/B,CCJA,MAAME,IACO,ECmBPC,GAAaA,CAACC,EAAGC,EAAIC,OAAU,EAAM,EAAMA,EAAK,EAAMD,GAAMD,GAAK,EAAME,EAAK,EAAMD,IAAOD,EAAI,EAAMC,GACrGD,EAoBJ,SAASG,GAAYC,EAAKC,EAAKC,EAAKC,GAEhC,GAAIH,IAAQC,GAAOC,IAAQC,EACvB,OAAOhI,EACX,MAAMiI,EAAYC,GArBtB,SAAyBxM,EAAGyM,EAAYC,EAAYP,EAAKE,GACrD,IAAIM,EACAC,EACA9V,EAAI,EACR,GACI8V,EAAWH,GAAcC,EAAaD,GAAc,EACpDE,EAAWb,GAAWc,EAAUT,EAAKE,GAAOrM,EACxC2M,EAAW,EACXD,EAAaE,EAGbH,EAAaG,QAEZ/X,KAAKgY,IAAIF,GAfO,QAgBnB7V,EAfuB,IAgB7B,OAAO8V,CACX,CAK6BE,CAAgBN,EAAI,EAAG,EAAGL,EAAKE,GAExD,OAAQN,GAAY,IAANA,GAAiB,IAANA,EAAUA,EAAID,GAAWS,EAASR,GAAIK,EAAKE,EACxE,CC9CA,MAAMS,GAAgBxP,GAAYpF,GAAMA,GAAK,GAAMoF,EAAO,EAAIpF,GAAK,GAAK,EAAIoF,EAAO,GAAK,EAAIpF,KAAO,ECA7F6U,GAAiBzP,GAAYpF,GAAM,EAAIoF,EAAO,EAAIpF,GCElDyH,GAAwBsM,GAAY,IAAM,KAAM,IAAM,KACtDvM,GAAuBqN,GAAcpN,IACrCqN,GAA0BF,GAAapN,ICJvCuN,GAAc/U,IAAOA,GAAK,GAAK,EAAI,GAAMwH,GAAOxH,GAAK,IAAO,EAAItD,KAAKsY,IAAI,GAAI,IAAMhV,EAAI,KCCvFsH,GAAUtH,GAAM,EAAItD,KAAKuY,IAAIvY,KAAKwY,KAAKlV,IACvCuH,GAAUsN,GAAcvN,IACxB6N,GAAYP,GAAatN,ICFzB8N,GAAqB3U,GAAM,qQAAc4U,KAAK5U,GCHpD,MAAM6U,GAAQA,CAAC3G,EAAK9K,EAAKpD,IACjBA,EAAIoD,EACGA,EACPpD,EAAIkO,EACGA,EACJlO,ECHL8U,GAAS,CACXF,KAAO5U,GAAmB,kBAANA,EACpB+U,MAAOrE,WACPsE,UAAYhV,GAAMA,GAEhBiV,IAAK9M,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACJ2M,IAAM,IACTE,UAAYhV,GAAM6U,GAAM,EAAG,EAAG7U,KAE5BkV,IAAK/M,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACJ2M,IAAM,IACTK,QAAS,ICXPC,GAAYpV,GAAM/D,KAAK6J,MAAU,IAAJ9F,GAAc,ICF3CqV,GAAa,sCCAnB,MAAMC,GAAmB,6UCQnBC,GAAgBA,CAAC/Q,EAAMgR,IAAcxV,GAChCkC,QAAsB,kBAANlC,GACnBsV,GAAiBV,KAAK5U,IACtBA,EAAEyV,WAAWjR,IACZgR,ICZT,SAAmBxV,GACf,OAAY,MAALA,CACX,CDWa0V,CAAU1V,IACX2V,OAAOC,UAAUC,eAAeC,KAAK9V,EAAGwV,IAE9CO,GAAaA,CAACC,EAAOC,EAAOC,IAAWlW,IACzC,GAAiB,kBAANA,EACP,OAAOA,EACX,MAAOoG,EAAGC,EAAGC,EAAG2O,GAASjV,EAAEmW,MAAMd,IACjC,MAAO,CACH,CAACW,GAAQtF,WAAWtK,GACpB,CAAC6P,GAAQvF,WAAWrK,GACpB,CAAC6P,GAAQxF,WAAWpK,GACpB2O,WAAiBpW,IAAVoW,EAAsBvE,WAAWuE,GAAS,EACpD,EEnBCmB,IAAOjO,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACN2M,IAAM,IACTE,UAAYhV,GAAM/D,KAAK6J,MAHL9F,IAAM6U,GAAM,EAAG,IAAK7U,GAGTqW,CAAarW,MAExCsW,GAAO,CACT1B,KAAoBW,GAAc,MAAO,OACzCR,MAAqBgB,GAAW,MAAO,QAAS,QAChDf,UAAWvb,IAAA,IAAC,IAAE8c,EAAG,MAAEC,EAAK,KAAEC,EAAMxB,MAAOyB,EAAU,GAAGjd,EAAA,MAAK,QACrD2c,GAAQpB,UAAUuB,GAClB,KACAH,GAAQpB,UAAUwB,GAClB,KACAJ,GAAQpB,UAAUyB,GAClB,KACArB,GAASH,GAAMD,UAAU0B,IACzB,GAAG,GCYX,MAAMC,GAAM,CACR/B,KAAoBW,GAAc,KAClCR,MAhCJ,SAAkB/U,GACd,IAAI4W,EAAI,GACJC,EAAI,GACJxQ,EAAI,GACJD,EAAI,GAmBR,OAjBIpG,EAAE7B,OAAS,GACXyY,EAAI5W,EAAE+F,UAAU,EAAG,GACnB8Q,EAAI7W,EAAE+F,UAAU,EAAG,GACnBM,EAAIrG,EAAE+F,UAAU,EAAG,GACnBK,EAAIpG,EAAE+F,UAAU,EAAG,KAInB6Q,EAAI5W,EAAE+F,UAAU,EAAG,GACnB8Q,EAAI7W,EAAE+F,UAAU,EAAG,GACnBM,EAAIrG,EAAE+F,UAAU,EAAG,GACnBK,EAAIpG,EAAE+F,UAAU,EAAG,GACnB6Q,GAAKA,EACLC,GAAKA,EACLxQ,GAAKA,EACLD,GAAKA,GAEF,CACHmQ,IAAKO,SAASF,EAAG,IACjBJ,MAAOM,SAASD,EAAG,IACnBJ,KAAMK,SAASzQ,EAAG,IAClB4O,MAAO7O,EAAI0Q,SAAS1Q,EAAG,IAAM,IAAM,EAE3C,EAII4O,UAAWsB,GAAKtB,WCpCd+B,GAAkBC,IAAI,CACxBpC,KAAO5U,GAAmB,kBAANA,GAAkBA,EAAEiX,SAASD,IAAiC,IAAxBhX,EAAEkX,MAAM,KAAK/Y,OACvE4W,MAAOrE,WACPsE,UAAYhV,GAAC,GAAArF,OAAQqF,GAACrF,OAAGqc,KAEvBG,GAAwBJ,GAAe,OACvCK,GAAwBL,GAAe,KACvCM,GAAmBN,GAAe,MAClCO,GAAmBP,GAAe,MAClCQ,GAAmBR,GAAe,MAClCS,IAAkBrP,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACjBiP,IAAO,IACVrC,MAAQ/U,GAAMoX,GAAQrC,MAAM/U,GAAK,IACjCgV,UAAYhV,GAAMoX,GAAQpC,UAAc,IAAJhV,KCRlCyX,GAAO,CACT7C,KAAoBW,GAAc,MAAO,OACzCR,MAAqBgB,GAAW,MAAO,aAAc,aACrDf,UAAWvb,IAAwD,IAAvD,IAAEie,EAAG,WAAEC,EAAU,UAAEC,EAAW3C,MAAOyB,EAAU,GAAGjd,EAC1D,MAAQ,QACJwC,KAAK6J,MAAM4R,GACX,KACAN,GAAQpC,UAAUI,GAASuC,IAC3B,KACAP,GAAQpC,UAAUI,GAASwC,IAC3B,KACAxC,GAASH,GAAMD,UAAU0B,IACzB,GAAG,GCbTmB,GAAQ,CACVjD,KAAO5U,GAAMsW,GAAK1B,KAAK5U,IAAM2W,GAAI/B,KAAK5U,IAAMyX,GAAK7C,KAAK5U,GACtD+U,MAAQ/U,GACAsW,GAAK1B,KAAK5U,GACHsW,GAAKvB,MAAM/U,GAEbyX,GAAK7C,KAAK5U,GACRyX,GAAK1C,MAAM/U,GAGX2W,GAAI5B,MAAM/U,GAGzBgV,UAAYhV,GACY,kBAANA,EACRA,EACAA,EAAE6V,eAAe,OACbS,GAAKtB,UAAUhV,GACfyX,GAAKzC,UAAUhV,ICtB3B8X,GAAa,4UCanB,MAAMC,GAAe,SACfC,GAAc,QAKdC,GAAe,8pCACrB,SAASC,GAAoB1b,GACzB,MAAM2b,EAAgB3b,EAAM4b,WACtBxc,EAAS,GACTyc,EAAU,CACZR,MAAO,GACP/C,OAAQ,GACRwD,IAAK,IAEHC,EAAQ,GACd,IAAIra,EAAI,EACR,MAmBMgZ,EAnBYiB,EAActF,QAAQoF,IAAeO,IAC/CX,GAAMjD,KAAK4D,IACXH,EAAQR,MAAM7a,KAAKkB,GACnBqa,EAAMvb,KAAKgb,IACXpc,EAAOoB,KAAK6a,GAAM9C,MAAMyD,KAEnBA,EAAY/C,WApBF,SAqBf4C,EAAQC,IAAItb,KAAKkB,GACjBqa,EAAMvb,KAvBA,OAwBNpB,EAAOoB,KAAKwb,KAGZH,EAAQvD,OAAO9X,KAAKkB,GACpBqa,EAAMvb,KAAK+a,IACXnc,EAAOoB,KAAK0T,WAAW8H,OAEzBta,EA7BU,SAgCQgZ,MAhCR,OAiChB,MAAO,CAAEtb,SAAQsb,QAAOmB,UAASE,QACrC,CACA,SAASE,GAAkBzY,GACvB,OAAOkY,GAAoBlY,GAAGpE,MAClC,CACA,SAAS8c,GAAkBC,GACvB,MAAM,MAAEzB,EAAK,MAAEqB,GAAUL,GAAoBS,GACvCC,EAAc1B,EAAM/Y,OAC1B,OAAQ6B,IACJ,IAAI6Y,EAAS,GACb,IAAK,IAAI3a,EAAI,EAAGA,EAAI0a,EAAa1a,IAE7B,GADA2a,GAAU3B,EAAMhZ,QACHW,IAATmB,EAAE9B,GAAkB,CACpB,MAAMsG,EAAO+T,EAAMra,GAEf2a,GADArU,IAASuT,GACC3C,GAASpV,EAAE9B,IAEhBsG,IAASwT,GACJH,GAAM7C,UAAUhV,EAAE9B,IAGlB8B,EAAE9B,EAEpB,CAEJ,OAAO2a,CAAM,CAErB,CACA,MAAMC,GAAwB9Y,GAAmB,kBAANA,EAAiB,EAAIA,EAMhE,MAAM+Y,GAAU,CACZnE,KAhFJ,SAAc5U,GACV,IAAIiF,EAAI+T,EACR,OAAQvI,MAAMzQ,IACG,kBAANA,KAC0B,QAA9BiF,EAAKjF,EAAEmW,MAAMd,WAAgC,IAAPpQ,OAAgB,EAASA,EAAG9G,SAAW,KAC3C,QAA9B6a,EAAKhZ,EAAEmW,MAAM2B,WAAgC,IAAPkB,OAAgB,EAASA,EAAG7a,SAAW,GAChF,CACZ,EA0EI4W,MAAO0D,GACPC,qBACAO,kBATJ,SAA2BjZ,GACvB,MAAMkZ,EAAST,GAAkBzY,GAEjC,OADoB0Y,GAAkB1Y,EAC/BmZ,CAAYD,EAAO1b,IAAIsb,IAClC,GC7EMM,GAAc,IAAInQ,IAAI,CAAC,aAAc,WAAY,WAAY,YACnE,SAASoQ,GAAmBrZ,GACxB,MAAOsZ,EAAM9c,GAASwD,EAAEuZ,MAAM,GAAI,GAAGrC,MAAM,KAC3C,GAAa,gBAAToC,EACA,OAAOtZ,EACX,MAAO8U,GAAUtY,EAAM2Z,MAAMd,KAAe,GAC5C,IAAKP,EACD,OAAO9U,EACX,MAAMgX,EAAOxa,EAAMqW,QAAQiC,EAAQ,IACnC,IAAI0E,EAAeJ,GAAYra,IAAIua,GAAQ,EAAI,EAG/C,OAFIxE,IAAWtY,IACXgd,GAAgB,KACbF,EAAO,IAAME,EAAexC,EAAO,GAC9C,CACA,MAAMyC,GAAgB,sLAChBxX,IAAMkG,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACL4Q,IAAO,IACVE,kBAAoBjZ,IAChB,MAAM0Z,EAAY1Z,EAAEmW,MAAMsD,IAC1B,OAAOC,EAAYA,EAAUlc,IAAI6b,IAAoB/a,KAAK,KAAO0B,CAAC,ICvBpE2Z,GAA0B,CAE5BC,YAAavC,GACbwC,eAAgBxC,GAChByC,iBAAkBzC,GAClB0C,kBAAmB1C,GACnB2C,gBAAiB3C,GACjB4C,aAAc5C,GACd6C,OAAQ7C,GACR8C,oBAAqB9C,GACrB+C,qBAAsB/C,GACtBgD,wBAAyBhD,GACzBiD,uBAAwBjD,GAExBte,MAAOse,GACPkD,SAAUlD,GACVxe,OAAQwe,GACRmD,UAAWnD,GACXpe,IAAKoe,GACLoD,MAAOpD,GACPqD,OAAQrD,GACRle,KAAMke,GAENsD,QAAStD,GACTuD,WAAYvD,GACZwD,aAAcxD,GACdyD,cAAezD,GACf0D,YAAa1D,GACb2D,OAAQ3D,GACR4D,UAAW5D,GACX6D,YAAa7D,GACb8D,aAAc9D,GACd+D,WAAY/D,GAEZgE,oBAAqBhE,GACrBiE,oBAAqBjE,IClCnBkE,GAAsB,CACxBC,OAAQrE,GACRsE,QAAStE,GACTuE,QAASvE,GACTwE,QAASxE,GACTjC,MAAK,GACL0G,OAAQ1G,GACR2G,OAAQ3G,GACR4G,OAAQ5G,GACR6G,KAAM5E,GACN6E,MAAO7E,GACP8E,MAAO9E,GACP+E,SAAU7E,GACV8E,WAAY9E,GACZ+E,WAAY/E,GACZgF,WAAYhF,GACZjQ,EAAGiQ,GACHhQ,EAAGgQ,GACHiF,EAAGjF,GACHkF,YAAalF,GACbmF,qBAAsBnF,GACtBjS,QAAS6P,GACTwH,QAASjF,GACTkF,QAASlF,GACTmF,QAAStF,ICzBPuF,IAAGzU,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACF2M,IAAM,IACTE,UAAW/Y,KAAK6J,QCEd+W,IAAgB1U,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACfwR,IACA4B,IAAmB,IACtBuB,OAAQF,GACRjkB,KAAM0e,GAEN0F,YAAa9H,GACb+H,cAAe/H,GACfgI,WAAYL,KCPVM,IAAiB/U,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAChB0U,IAAgB,IAEnBhF,MAAK,GACLsF,gBAAiBtF,GACjBuF,aAAcvF,GACdwF,KAAMxF,GACNyF,OAAQzF,GAER0F,YAAa1F,GACb2F,eAAgB3F,GAChB4F,iBAAkB5F,GAClB6F,kBAAmB7F,GACnB8F,gBAAiB9F,GACjB5V,OAAM,GACN2b,aAAc3b,KAKZ4b,GAAuBxhB,GAAQ6gB,GAAkB7gB,GCvBvD,SAAS4c,GAAkB5c,EAAKG,GAC5B,IAAIshB,EAAmBD,GAAoBxhB,GAI3C,OAHIyhB,IAAqB7b,KACrB6b,EAAmB/E,IAEhB+E,EAAiB7E,kBAClB6E,EAAiB7E,kBAAkBzc,QACnCqC,CACV,CCHA,MAAMkf,GAAmB,IAAI9U,IAAI,CAAC,OAAQ,OAAQ,MCLlD,MAAM+U,GAAiBhe,GAAMA,IAAM8U,IAAU9U,IAAMqX,GAC7C4G,GAAmBA,CAACC,EAAQC,IAAQzN,WAAWwN,EAAOhH,MAAM,MAAMiH,IAClEC,GAAyBA,CAACC,EAAMC,IAAS,CAACC,EAAK9kB,KAAoB,IAAlB,UAAEub,GAAWvb,EAChE,GAAkB,SAAdub,IAAyBA,EACzB,OAAO,EACX,MAAMwJ,EAAWxJ,EAAUmB,MAAM,mLACjC,GAAIqI,EACA,OAAOP,GAAiBO,EAAS,GAAIF,GAEpC,CACD,MAAMJ,EAASlJ,EAAUmB,MAAM,iLAC/B,OAAI+H,EACOD,GAAiBC,EAAO,GAAIG,GAG5B,CAEf,GAEEI,GAAgB,IAAIxV,IAAI,CAAC,IAAK,IAAK,MACnCyV,GAAgC9S,EAAmB3J,QAAQ5F,IAASoiB,GAAc1f,IAAI1C,KAY5F,MAAMsiB,GAAmB,CAErB5lB,MAAOA,CAAA6lB,EAAAC,KAAA,IAAC,EAAEzX,GAAGwX,GAAE,YAAE7D,EAAc,IAAG,aAAEF,EAAe,KAAKgE,EAAA,OAAKzX,EAAEhE,IAAMgE,EAAE8G,IAAMwC,WAAWqK,GAAerK,WAAWmK,EAAa,EAC/HhiB,OAAQA,CAAAimB,EAAAC,KAAA,IAAC,EAAE1X,GAAGyX,GAAE,WAAElE,EAAa,IAAG,cAAEE,EAAgB,KAAKiE,EAAA,OAAK1X,EAAEjE,IAAMiE,EAAE6G,IAAMwC,WAAWkK,GAAclK,WAAWoK,EAAc,EAChI7hB,IAAKA,CAACslB,EAAKS,KAAA,IAAE,IAAE/lB,GAAK+lB,EAAA,OAAKtO,WAAWzX,EAAI,EACxCE,KAAMA,CAAColB,EAAKU,KAAA,IAAE,KAAE9lB,GAAM8lB,EAAA,OAAKvO,WAAWvX,EAAK,EAC3CuhB,OAAQA,CAAAwE,EAAAC,KAAA,IAAC,EAAE9X,GAAG6X,GAAE,IAAEjmB,GAAKkmB,EAAA,OAAKzO,WAAWzX,IAAQoO,EAAEjE,IAAMiE,EAAE6G,IAAI,EAC7DuM,MAAOA,CAAA2E,EAAAC,KAAA,IAAC,EAAEjY,GAAGgY,GAAE,KAAEjmB,GAAMkmB,EAAA,OAAK3O,WAAWvX,IAASiO,EAAEhE,IAAMgE,EAAE8G,IAAI,EAE9D9G,EAAGgX,GAAuB,EAAG,IAC7B/W,EAAG+W,GAAuB,EAAG,KAGjCO,GAAiBxC,WAAawC,GAAiBvX,EAC/CuX,GAAiBvC,WAAauC,GAAiBtX,EC/C/C,MAAMiY,GAAY,IAAIrW,IACtB,IAAIsW,IAAc,EACdC,IAAsB,EAC1B,SAASC,KACL,GAAID,GAAqB,CACrB,MAAME,EAAqBvf,MAAMoF,KAAK+Z,IAAWrd,QAAQ0d,GAAaA,EAASC,mBACzEC,EAAoB,IAAI5W,IAAIyW,EAAmBliB,KAAKmiB,GAAaA,EAAStnB,WAC1EynB,EAAsB,IAAIrjB,IAKhCojB,EAAkB1jB,SAAS9D,IACvB,MAAM0nB,EDSlB,SAAyCpf,GACrC,MAAMof,EAAoB,GAQ1B,OAPArB,GAA8BviB,SAASE,IACnC,MAAMG,EAAQmE,EAAc2R,SAASjW,QACvBwC,IAAVrC,IACAujB,EAAkB/iB,KAAK,CAACX,EAAKG,EAAM6B,QACnC7B,EAAMd,IAAIW,EAAIoZ,WAAW,SAAW,EAAI,GAC5C,IAEGsK,CACX,CCnBsCC,CAAgC3nB,GACrD0nB,EAAkB5hB,SAEvB2hB,EAAoBpkB,IAAIrD,EAAS0nB,GACjC1nB,EAAQiB,SAAQ,IAGpBomB,EAAmBvjB,SAASwjB,GAAaA,EAASM,wBAElDJ,EAAkB1jB,SAAS9D,IACvBA,EAAQiB,SACR,MAAM4mB,EAAUJ,EAAoBzhB,IAAIhG,GACpC6nB,GACAA,EAAQ/jB,SAAQ1C,IAAkB,IAAhB4C,EAAKG,GAAM/C,EACzB,IAAIwL,EAC6B,QAAhCA,EAAK5M,EAAQia,SAASjW,UAAyB,IAAP4I,GAAyBA,EAAGvJ,IAAIc,EAAM,GAEvF,IAGJkjB,EAAmBvjB,SAASwjB,GAAaA,EAASQ,oBAElDT,EAAmBvjB,SAASwjB,SACU9gB,IAA9B8gB,EAASS,kBACT1e,OAAO2e,SAAS,EAAGV,EAASS,iBAChC,GAER,CACAZ,IAAsB,EACtBD,IAAc,EACdD,GAAUnjB,SAASwjB,GAAaA,EAASjc,aACzC4b,GAAU9R,OACd,CACA,SAAS8S,KACLhB,GAAUnjB,SAASwjB,IACfA,EAASY,gBACLZ,EAASC,mBACTJ,IAAsB,EAC1B,GAER,CAKA,MAAMgB,GACF3e,WAAAA,CAAY4e,EAAqBC,EAAYpH,EAAMnH,EAAa9Z,GAA0B,IAAjBsoB,EAAOxhB,UAAAhB,OAAA,QAAAU,IAAAM,UAAA,IAAAA,UAAA,GAK5E7G,KAAKqD,YAAa,EAMlBrD,KAAKqoB,SAAU,EAKfroB,KAAKsnB,kBAAmB,EAKxBtnB,KAAKinB,aAAc,EACnBjnB,KAAKmoB,oBAAsB,IAAIA,GAC/BnoB,KAAKooB,WAAaA,EAClBpoB,KAAKghB,KAAOA,EACZhhB,KAAK6Z,YAAcA,EACnB7Z,KAAKD,QAAUA,EACfC,KAAKqoB,QAAUA,CACnB,CACAC,eAAAA,GACItoB,KAAKinB,aAAc,EACfjnB,KAAKqoB,SACLrB,GAAUrV,IAAI3R,MACTinB,KACDA,IAAc,EACdlR,GAAMX,KAAK4S,IACXjS,GAAMV,iBAAiB8R,OAI3BnnB,KAAKioB,gBACLjoB,KAAKoL,WAEb,CACA6c,aAAAA,GACI,MAAM,oBAAEE,EAAmB,KAAEnH,EAAI,QAAEjhB,EAAO,YAAE8Z,GAAgB7Z,KAK5D,IAAK,IAAI4F,EAAI,EAAGA,EAAIuiB,EAAoBtiB,OAAQD,IAC5C,GAA+B,OAA3BuiB,EAAoBviB,GAIpB,GAAU,IAANA,EAAS,CACT,MAAM2iB,EAA+B,OAAhB1O,QAAwC,IAAhBA,OAAyB,EAASA,EAAY9T,MACrFyiB,EAAgBL,EAAoBA,EAAoBtiB,OAAS,GACvE,QAAqBU,IAAjBgiB,EACAJ,EAAoB,GAAKI,OAExB,GAAIxoB,GAAWihB,EAAM,CACtB,MAAMyH,EAAc1oB,EAAQ2oB,UAAU1H,EAAMwH,QACxBjiB,IAAhBkiB,GAA6C,OAAhBA,IAC7BN,EAAoB,GAAKM,EAEjC,MAC+BliB,IAA3B4hB,EAAoB,KACpBA,EAAoB,GAAKK,GAEzB3O,QAAgCtT,IAAjBgiB,GACf1O,EAAYzW,IAAI+kB,EAAoB,GAE5C,MAEIA,EAAoBviB,GAAKuiB,EAAoBviB,EAAI,EAIjE,CACA+iB,gBAAAA,GAAqB,CACrBhB,mBAAAA,GAAwB,CACxBiB,eAAAA,GAAoB,CACpBf,eAAAA,GAAoB,CACpBzc,QAAAA,GACIpL,KAAKqD,YAAa,EAClBrD,KAAKooB,WAAWpoB,KAAKmoB,oBAAqBnoB,KAAKwoB,eAC/CxB,GAAUtjB,OAAO1D,KACrB,CACAyK,MAAAA,GACSzK,KAAKqD,aACNrD,KAAKinB,aAAc,EACnBD,GAAUtjB,OAAO1D,MAEzB,CACA6oB,MAAAA,GACS7oB,KAAKqD,YACNrD,KAAKsoB,iBACb,EC9JJ,IAAIQ,GAAU1V,EACV2V,GAAY3V,ECAhB,MAAM4V,GAAqBthB,GAAM,uCAA+B4U,KAAK5U,GCH/DuhB,GAAyBC,GAAWnlB,GAAuB,kBAARA,GAAoBA,EAAIoZ,WAAW+L,GACtFC,GACQF,GAAsB,MAC9BG,GACQH,GAAsB,UAC9BI,GAAsBnlB,KACAklB,GAAsBllB,IAIvColB,GAAuBhN,KAAKpY,EAAM0a,MAAM,MAAM,GAAG2K,QAEtDD,GAAyB,+qBCCzBE,GAEN,oFASA,SAASC,GAAiBtpB,EAASJ,GAAoB,IAAX2pB,EAAK7iB,UAAAhB,OAAA,QAAAU,IAAAM,UAAA,GAAAA,UAAA,GAAG,EAChDkiB,GAAUW,GAFG,EAEgB,yDAAFrnB,OAA2DlC,EAAO,yDAC7F,MAAO+oB,EAAO3e,GAVlB,SAA0BpK,GACtB,MAAM0d,EAAQ2L,GAAsBG,KAAKxpB,GACzC,IAAK0d,EACD,MAAO,CAAC,GACZ,MAAO,CAAE+L,EAAQC,EAAQtf,GAAYsT,EACrC,MAAO,CAAC,KAADxb,OAAiB,OAAXunB,QAA8B,IAAXA,EAAoBA,EAASC,GAAUtf,EAC3E,CAI8Buf,CAAiB3pB,GAE3C,IAAK+oB,EACD,OAEJ,MAAMa,EAAW3gB,OAAO4gB,iBAAiBjqB,GAASkqB,iBAAiBf,GACnE,GAAIa,EAAU,CACV,MAAMG,EAAUH,EAASR,OACzB,OAAOP,GAAkBkB,GAAW9R,WAAW8R,GAAWA,CAC9D,CACA,OAAOb,GAAmB9e,GACpBkf,GAAiBlf,EAAUxK,EAAS2pB,EAAQ,GAC5Cnf,CACV,CCpCA,MAAM4f,GAAiBziB,GAAOwE,GAASA,EAAKoQ,KAAK5U,GCK3C0iB,GAAsB,CAAC5N,GAAQuC,GAAID,GAASD,GAASI,GAAID,GCLlD,CACT1C,KAAO5U,GAAY,SAANA,EACb+U,MAAQ/U,GAAMA,IDOZ2iB,GAA0B3iB,GAAM0iB,GAAoBE,KAAKH,GAAcziB,IEH7E,MAAM6iB,WAA6BrC,GAC/B3e,WAAAA,CAAY4e,EAAqBC,EAAYpH,EAAMnH,EAAa9Z,GAC5DyqB,MAAMrC,EAAqBC,EAAYpH,EAAMnH,EAAa9Z,GAAS,EACvE,CACAkoB,aAAAA,GACI,MAAM,oBAAEE,EAAmB,QAAEpoB,EAAO,KAAEihB,GAAShhB,KAC/C,IAAKD,IAAYA,EAAQI,QACrB,OACJqqB,MAAMvC,gBAIN,IAAK,IAAIriB,EAAI,EAAGA,EAAIuiB,EAAoBtiB,OAAQD,IAAK,CACjD,IAAI6kB,EAAWtC,EAAoBviB,GACnC,GAAwB,kBAAb6kB,IACPA,EAAWA,EAASlB,OAChBF,GAAmBoB,IAAW,CAC9B,MAAMV,EAAWN,GAAiBgB,EAAU1qB,EAAQI,cACnCoG,IAAbwjB,IACA5B,EAAoBviB,GAAKmkB,GAEzBnkB,IAAMuiB,EAAoBtiB,OAAS,IACnC7F,KAAKwoB,cAAgBiC,EAE7B,CAER,CAaA,GAPAzqB,KAAK0qB,wBAOAlX,EAAe/M,IAAIua,IAAwC,IAA/BmH,EAAoBtiB,OACjD,OAEJ,MAAO8kB,EAAQ5Z,GAAUoX,EACnByC,EAAaP,GAAuBM,GACpCE,EAAaR,GAAuBtZ,GAI1C,GAAI6Z,IAAeC,EAMnB,GAAInF,GAAckF,IAAelF,GAAcmF,GAC3C,IAAK,IAAIjlB,EAAI,EAAGA,EAAIuiB,EAAoBtiB,OAAQD,IAAK,CACjD,MAAM1B,EAAQikB,EAAoBviB,GACb,kBAAV1B,IACPikB,EAAoBviB,GAAKwS,WAAWlU,GAE5C,MAMAlE,KAAKsnB,kBAAmB,CAEhC,CACAoD,oBAAAA,GACI,MAAM,oBAAEvC,EAAmB,KAAEnH,GAAShhB,KAChC8qB,EAAsB,GAC5B,IAAK,IAAIllB,EAAI,EAAGA,EAAIuiB,EAAoBtiB,OAAQD,KC9E/B,kBADT1B,EDgFOikB,EAAoBviB,IC9ElB,IAAV1B,EAEQ,OAAVA,GACY,SAAVA,GAA8B,MAAVA,GAAiBmY,GAAkBnY,KD4EtD4mB,EAAoBpmB,KAAKkB,GCjFzC,IAAgB1B,EDoFJ4mB,EAAoBjlB,QV5EhC,SAAqCsiB,EAAqB2C,EAAqB9J,GAC3E,IACI+J,EADAnlB,EAAI,EAER,KAAOA,EAAIuiB,EAAoBtiB,SAAWklB,GAAoB,CAC1D,MAAMN,EAAWtC,EAAoBviB,GACb,kBAAb6kB,IACNhF,GAAiBhf,IAAIgkB,IACtB7K,GAAoB6K,GAAUnnB,OAAOuC,SACrCklB,EAAqB5C,EAAoBviB,IAE7CA,GACJ,CACA,GAAImlB,GAAsB/J,EACtB,IAAK,MAAMgK,KAAaF,EACpB3C,EAAoB6C,GAAarK,GAAkBK,EAAM+J,EAGrE,CU4DYE,CAA4B9C,EAAqB2C,EAAqB9J,EAE9E,CACA2G,mBAAAA,GACI,MAAM,QAAE5nB,EAAO,oBAAEooB,EAAmB,KAAEnH,GAAShhB,KAC/C,IAAKD,IAAYA,EAAQI,QACrB,OACS,WAAT6gB,IACAhhB,KAAK8nB,iBAAmB1e,OAAO8hB,aAEnClrB,KAAKmrB,eAAiB9E,GAAiBrF,GAAMjhB,EAAQqrB,qBAAsBhiB,OAAO4gB,iBAAiBjqB,EAAQI,UAC3GgoB,EAAoB,GAAKnoB,KAAKmrB,eAE9B,MAAME,EAAkBlD,EAAoBA,EAAoBtiB,OAAS,QACjDU,IAApB8kB,GACAtrB,EAAQia,SAASgH,EAAMqK,GAAiBnS,KAAKmS,GAAiB,EAEtE,CACAxD,eAAAA,GACI,IAAIlb,EACJ,MAAM,QAAE5M,EAAO,KAAEihB,EAAI,oBAAEmH,GAAwBnoB,KAC/C,IAAKD,IAAYA,EAAQI,QACrB,OACJ,MAAM+D,EAAQnE,EAAQia,SAASgH,GAC/B9c,GAASA,EAAMgV,KAAKlZ,KAAKmrB,gBAAgB,GACzC,MAAMG,EAAqBnD,EAAoBtiB,OAAS,EAClD2iB,EAAgBL,EAAoBmD,GAC1CnD,EAAoBmD,GAAsBjF,GAAiBrF,GAAMjhB,EAAQqrB,qBAAsBhiB,OAAO4gB,iBAAiBjqB,EAAQI,UACzG,OAAlBqoB,QAAiDjiB,IAAvBvG,KAAKwoB,gBAC/BxoB,KAAKwoB,cAAgBA,IAGa,QAAjC7b,EAAK3M,KAAKynB,yBAAsC,IAAP9a,OAAgB,EAASA,EAAG9G,SACtE7F,KAAKynB,kBAAkB5jB,SAAQ1C,IAA+C,IAA7CoqB,EAAoBC,GAAoBrqB,EACrEpB,EACKia,SAASuR,GACTnoB,IAAIooB,EAAoB,IAGrCxrB,KAAK0qB,sBACT,EEpHJ,MAAMe,GAAeA,CAACvnB,EAAO8c,IAEZ,WAATA,MAKiB,kBAAV9c,IAAsB2D,MAAMC,QAAQ5D,OAE1B,kBAAVA,IACNuc,GAAQnE,KAAKpY,IAAoB,MAAVA,GACvBA,EAAMiZ,WAAW,UCT1B,SAASuO,GAAWC,EAAW3K,EAAM9U,EAAMxD,GAMvC,MAAMkjB,EAAiBD,EAAU,GACjC,GAAuB,OAAnBC,EACA,OAAO,EAMX,GAAa,YAAT5K,GAA+B,eAATA,EACtB,OAAO,EACX,MAAM6K,EAAiBF,EAAUA,EAAU9lB,OAAS,GAC9CimB,EAAqBL,GAAaG,EAAgB5K,GAClD+K,EAAqBN,GAAaI,EAAgB7K,GAGxD,OAFA8H,GAAQgD,IAAuBC,EAAoB,6BAAF1pB,OAA+B2e,EAAI,WAAA3e,OAAUupB,EAAc,UAAAvpB,OAASwpB,EAAc,OAAAxpB,OAAMupB,EAAc,+DAAAvpB,OAA8DupB,EAAc,8BAAAvpB,OAA6BwpB,EAAc,kCAEzQC,IAAuBC,KA9BhC,SAA6BJ,GACzB,MAAMxrB,EAAUwrB,EAAU,GAC1B,GAAyB,IAArBA,EAAU9lB,OACV,OAAO,EACX,IAAK,IAAID,EAAI,EAAGA,EAAI+lB,EAAU9lB,OAAQD,IAClC,GAAI+lB,EAAU/lB,KAAOzF,EACjB,OAAO,CAEnB,CAyBY6rB,CAAoBL,KACb,WAATzf,GAAqBD,EAAYC,KAAUxD,EACrD,CCvCA,MAAMujB,GAAa/nB,GAAoB,OAAVA,EAC7B,SAASgoB,GAAiBP,EAASxqB,EAAmCqnB,GAAe,IAAhD,OAAE2D,EAAM,WAAEC,EAAa,QAAQjrB,EAChE,MAAMkrB,EAAoBV,EAAUhiB,OAAOsiB,IACrCtV,EAAQwV,GAAyB,SAAfC,GAAyBD,EAAS,IAAM,EAC1D,EACAE,EAAkBxmB,OAAS,EACjC,OAAQ8Q,QAA2BpQ,IAAlBiiB,EAEXA,EADA6D,EAAkB1V,EAE5B,C,yECMA,MAAM2V,GACF/iB,WAAAA,CAAWpI,GAAmH,IAAlH,SAAEorB,GAAW,EAAI,MAAEC,EAAQ,EAAC,KAAEtgB,EAAO,YAAW,OAAEigB,EAAS,EAAC,YAAEM,EAAc,EAAC,WAAEL,EAAa,QAAoBjrB,EAATgO,GAAOud,EAAAA,EAAAA,GAAAvrB,EAAAwrB,IAEtH3sB,KAAK4sB,WAAY,EACjB5sB,KAAK6sB,qBAAsB,EAC3B7sB,KAAK8sB,UAAYpiB,GAAKiL,MACtB3V,KAAKmP,SAAOU,EAAAA,EAAAA,GAAA,CACR0c,WACAC,QACAtgB,OACAigB,SACAM,cACAL,cACGjd,GAEPnP,KAAK+sB,uBACT,CAWAC,aAAAA,GACI,OAAKhtB,KAAKitB,YAEHjtB,KAAKitB,WAAajtB,KAAK8sB,UA/BZ,GAgCZ9sB,KAAKitB,WAFAjtB,KAAK8sB,SAIpB,CAMA,YAAI/C,GAIA,OAHK/pB,KAAKktB,WAAcltB,KAAK6sB,sBbGjC7E,KACAb,MaDWnnB,KAAKktB,SAChB,CAMAC,mBAAAA,CAAoBxB,EAAWnD,GAC3BxoB,KAAKitB,WAAaviB,GAAKiL,MACvB3V,KAAK6sB,qBAAsB,EAC3B,MAAM,KAAE7L,EAAI,KAAE9U,EAAI,SAAExD,EAAQ,MAAE8jB,EAAK,WAAEpE,EAAU,SAAEgF,EAAQ,YAAEnhB,GAAiBjM,KAAKmP,QAKjF,IAAKlD,IAAgByf,GAAWC,EAAW3K,EAAM9U,EAAMxD,GAAW,CAE9D,GAAIiS,KAAkC6R,EAIlC,OAHa,OAAbY,QAAkC,IAAbA,GAA+BA,EAASlB,GAAiBP,EAAW3rB,KAAKmP,QAASqZ,IACxF,OAAfJ,QAAsC,IAAfA,GAAiCA,SACxDpoB,KAAKqtB,yBAKLrtB,KAAKmP,QAAQtE,SAAW,CAEhC,CACA,MAAMyiB,EAAoBttB,KAAKutB,aAAa5B,EAAWnD,IAC7B,IAAtB8E,IAEJttB,KAAKktB,WAASrd,EAAAA,EAAAA,GAAA,CACV8b,YACAnD,iBACG8E,GAEPttB,KAAKwtB,iBACT,CACAA,cAAAA,GAAmB,CAMnBliB,IAAAA,CAAKgO,EAASmU,GACV,OAAOztB,KAAK0tB,uBAAuBpiB,KAAKgO,EAASmU,EACrD,CACAxiB,OAAAA,GACIjL,KAAKmP,QAAQjD,KAAO,YACpBlM,KAAKmP,QAAQhB,KAAO,QACxB,CACA4e,qBAAAA,GACI/sB,KAAK0tB,uBAAyB,IAAI5jB,SAASwP,IACvCtZ,KAAKqtB,uBAAyB/T,CAAO,GAE7C,EC5FJ,MAAMqU,GAAYA,CAAC1gB,EAAMC,EAAIF,IAClBC,GAAQC,EAAKD,GAAQD,ECrBhC,SAAS4gB,GAAS3mB,EAAG4mB,EAAGhT,GAKpB,OAJIA,EAAI,IACJA,GAAK,GACLA,EAAI,IACJA,GAAK,GACLA,EAAI,EAAI,EACD5T,EAAc,GAAT4mB,EAAI5mB,GAAS4T,EACzBA,EAAI,GACGgT,EACPhT,EAAI,EAAI,EACD5T,GAAK4mB,EAAI5mB,IAAM,EAAI,EAAI4T,GAAK,EAChC5T,CACX,CCbA,SAAS6mB,GAAahgB,EAAGC,GACrB,OAAQ9G,GAAOA,EAAI,EAAI8G,EAAID,CAC/B,CCSA,MAAMigB,GAAiBA,CAAC9gB,EAAMC,EAAIxF,KAC9B,MAAMsmB,EAAW/gB,EAAOA,EAClBghB,EAAOvmB,GAAKwF,EAAKA,EAAK8gB,GAAYA,EACxC,OAAOC,EAAO,EAAI,EAAItqB,KAAKuqB,KAAKD,EAAK,EAEnCE,GAAa,CAAC9P,GAAKL,GAAMmB,IAE/B,SAASiP,GAAO7O,GACZ,MAAMrT,GAFYxE,EAEQ6X,EAFF4O,GAAW7D,MAAMpe,GAASA,EAAKoQ,KAAK5U,MAA1CA,MAIlB,GADAohB,GAAQlf,QAAQsC,GAAO,IAAF7J,OAAMkd,EAAK,0EAC3B3V,QAAQsC,GACT,OAAO,EACX,IAAImiB,EAAQniB,EAAKuQ,MAAM8C,GAKvB,OAJIrT,IAASiT,KAETkP,EFZR,SAAmBltB,GAAwC,IAAvC,IAAEie,EAAG,WAAEC,EAAU,UAAEC,EAAS,MAAE3C,GAAOxb,EACrDie,GAAO,IACPC,GAAc,IACdC,GAAa,IACb,IAAIrB,EAAM,EACNC,EAAQ,EACRC,EAAO,EACX,GAAKkB,EAGA,CACD,MAAMwO,EAAIvO,EAAY,GAChBA,GAAa,EAAID,GACjBC,EAAYD,EAAaC,EAAYD,EACrCpY,EAAI,EAAIqY,EAAYuO,EAC1B5P,EAAM2P,GAAS3mB,EAAG4mB,EAAGzO,EAAM,EAAI,GAC/BlB,EAAQ0P,GAAS3mB,EAAG4mB,EAAGzO,GACvBjB,EAAOyP,GAAS3mB,EAAG4mB,EAAGzO,EAAM,EAAI,EACpC,MAVInB,EAAMC,EAAQC,EAAOmB,EAWzB,MAAO,CACHrB,IAAKta,KAAK6J,MAAY,IAANyQ,GAChBC,MAAOva,KAAK6J,MAAc,IAAR0Q,GAClBC,KAAMxa,KAAK6J,MAAa,IAAP2Q,GACjBxB,QAER,CEbgB2R,CAAWD,IAEhBA,CACX,CACA,MAAME,GAAWA,CAACthB,EAAMC,KACpB,MAAMshB,EAAWJ,GAAOnhB,GAClBwhB,EAASL,GAAOlhB,GACtB,IAAKshB,IAAaC,EACd,OAAOX,GAAa7gB,EAAMC,GAE9B,MAAMwhB,GAAO7e,EAAAA,EAAAA,GAAA,GAAQ2e,GACrB,OAAQ9mB,IACJgnB,EAAQzQ,IAAM8P,GAAeS,EAASvQ,IAAKwQ,EAAOxQ,IAAKvW,GACvDgnB,EAAQxQ,MAAQ6P,GAAeS,EAAStQ,MAAOuQ,EAAOvQ,MAAOxW,GAC7DgnB,EAAQvQ,KAAO4P,GAAeS,EAASrQ,KAAMsQ,EAAOtQ,KAAMzW,GAC1DgnB,EAAQ/R,MAAQgR,GAAUa,EAAS7R,MAAO8R,EAAO9R,MAAOjV,GACjDsW,GAAKtB,UAAUgS,GACzB,ECpCCC,GAAmBA,CAAC7gB,EAAGC,IAAOrG,GAAMqG,EAAED,EAAEpG,IACxCknB,GAAO,mBAAAC,EAAAhoB,UAAAhB,OAAIipB,EAAY,IAAAjnB,MAAAgnB,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAZD,EAAYC,GAAAloB,UAAAkoB,GAAA,OAAKD,EAAaza,OAAOsa,GAAiB,ECRjEK,GAAkB,IAAIre,IAAI,CAAC,OAAQ,WCUzC,SAASgd,GAAU7f,EAAGC,GAClB,OAAQ9G,GAAMgoB,GAAYnhB,EAAGC,EAAG9G,EACpC,CACA,SAASioB,GAASphB,GACd,MAAiB,kBAANA,EACA6f,GAEW,kBAAN7f,EACLub,GAAmBvb,GACpBggB,GACAvO,GAAMjD,KAAKxO,GACPygB,GACAY,GAELtnB,MAAMC,QAAQgG,GACZshB,GAEW,kBAANthB,EACLyR,GAAMjD,KAAKxO,GAAKygB,GAAWc,GAE/BvB,EACX,CACA,SAASsB,GAASthB,EAAGC,GACjB,MAAMwS,EAAS,IAAIzS,GACbwhB,EAAY/O,EAAO1a,OACnB0pB,EAAazhB,EAAE5I,KAAI,CAACwC,EAAG9B,IAAMspB,GAASxnB,EAATwnB,CAAYxnB,EAAGqG,EAAEnI,MACpD,OAAQqB,IACJ,IAAK,IAAIrB,EAAI,EAAGA,EAAI0pB,EAAW1pB,IAC3B2a,EAAO3a,GAAK2pB,EAAW3pB,GAAGqB,GAE9B,OAAOsZ,CAAM,CAErB,CACA,SAAS8O,GAAUvhB,EAAGC,GAClB,MAAMwS,GAAM1Q,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQ/B,GAAMC,GACpBwhB,EAAa,CAAC,EACpB,IAAK,MAAMxrB,KAAOwc,OACCha,IAAXuH,EAAE/J,SAAiCwC,IAAXwH,EAAEhK,KAC1BwrB,EAAWxrB,GAAOmrB,GAASphB,EAAE/J,GAAXmrB,CAAiBphB,EAAE/J,GAAMgK,EAAEhK,KAGrD,OAAQ2D,IACJ,IAAK,MAAM3D,KAAOwrB,EACdhP,EAAOxc,GAAOwrB,EAAWxrB,GAAK2D,GAElC,OAAO6Y,CAAM,CAErB,CAcA,MAAM4O,GAAaA,CAACxE,EAAQ5Z,KACxB,MAAMye,EAAW/O,GAAQL,kBAAkBrP,GACrC0e,EAAc7P,GAAoB+K,GAClC+E,EAAc9P,GAAoB7O,GAIxC,OAHuB0e,EAAY1P,QAAQC,IAAIna,SAAW6pB,EAAY3P,QAAQC,IAAIna,QAC9E4pB,EAAY1P,QAAQR,MAAM1Z,SAAW6pB,EAAY3P,QAAQR,MAAM1Z,QAC/D4pB,EAAY1P,QAAQvD,OAAO3W,QAAU6pB,EAAY3P,QAAQvD,OAAO3W,OAE3DmpB,GAAgBvoB,IAAIkkB,KACpB+E,EAAYpsB,OAAOuC,QACnBmpB,GAAgBvoB,IAAIsK,KAChB0e,EAAYnsB,OAAOuC,OD5EpC,SAAuB8kB,EAAQ5Z,GAC3B,OAAIie,GAAgBvoB,IAAIkkB,GACZ1jB,GAAOA,GAAK,EAAI0jB,EAAS5Z,EAGzB9J,GAAOA,GAAK,EAAI8J,EAAS4Z,CAEzC,CCsEmBgF,CAAchF,EAAQ5Z,GAE1B6d,GAAKQ,GA3BpB,SAAoBzE,EAAQ5Z,GACxB,IAAIpE,EACJ,MAAMijB,EAAgB,GAChBC,EAAW,CAAEtQ,MAAO,EAAGS,IAAK,EAAGxD,OAAQ,GAC7C,IAAK,IAAI5W,EAAI,EAAGA,EAAImL,EAAOzN,OAAOuC,OAAQD,IAAK,CAC3C,MAAMsG,EAAO6E,EAAOkP,MAAMra,GACpBkqB,EAAcnF,EAAO5K,QAAQ7T,GAAM2jB,EAAS3jB,IAC5C6jB,EAAoD,QAArCpjB,EAAKge,EAAOrnB,OAAOwsB,UAAiC,IAAPnjB,EAAgBA,EAAK,EACvFijB,EAAchqB,GAAKmqB,EACnBF,EAAS3jB,IACb,CACA,OAAO0jB,CACX,CAe6BI,CAAWP,EAAaC,GAAcA,EAAYpsB,QAASksB,IAGhF1G,IAAQ,EAAM,mBAAFzmB,OAAqBsoB,EAAM,WAAAtoB,OAAU0O,EAAM,6KAChD+c,GAAanD,EAAQ5Z,GAChC,ECvFJ,SAASkf,GAAIhjB,EAAMC,EAAIjG,GACnB,GAAoB,kBAATgG,GACO,kBAAPC,GACM,kBAANjG,EACP,OAAO0mB,GAAU1gB,EAAMC,EAAIjG,GAG/B,OADcioB,GAASjiB,EAChBijB,CAAMjjB,EAAMC,EACvB,CCRA,SAASijB,GAAsBC,EAAcvV,EAAG1a,GAC5C,MAAMkwB,EAAQ1sB,KAAKmH,IAAI+P,EAFI,EAEwB,GACnD,OAAO5D,GAAkB9W,EAAUiwB,EAAaC,GAAQxV,EAAIwV,EAChE,CCNA,MAAMC,GAAiB,CAEnBC,UAAW,IACXC,QAAS,GACTC,KAAM,EACN/nB,SAAU,EAEVmC,SAAU,IACV6lB,OAAQ,GACRC,eAAgB,GAEhBC,UAAW,CACPC,SAAU,IACVhU,QAAS,GAEbiU,UAAW,CACPD,SAAU,KACVhU,QAAS,IAGbkU,YAAa,IACbC,YAAa,GACbC,WAAY,IACZC,WAAY,GCnBVC,GAAU,KAChB,SAASC,GAAUjwB,GAA0I,IACrJkwB,EACAC,GAFY,SAAEzmB,EAAWylB,GAAezlB,SAAQ,OAAE6lB,EAASJ,GAAeI,OAAM,SAAEhoB,EAAW4nB,GAAe5nB,SAAQ,KAAE+nB,EAAOH,GAAeG,MAAOtvB,EAGvJ2nB,GAAQje,GAAYmI,EAAsBsd,GAAeU,aAAc,8CACvE,IAAIO,EAAe,EAAIb,EAIvBa,EAAehV,GAAM+T,GAAeW,WAAYX,GAAeY,WAAYK,GAC3E1mB,EAAW0R,GAAM+T,GAAeS,YAAaT,GAAeU,YAAa9d,EAAsBrI,IAC3F0mB,EAAe,GAIfF,EAAYG,IACR,MAAMC,EAAmBD,EAAeD,EAClCvd,EAAQyd,EAAmB5mB,EAC3BiD,EAAI2jB,EAAmB/oB,EACvBqF,EAAI2jB,GAAgBF,EAAcD,GAClCvjB,EAAIrK,KAAKguB,KAAK3d,GACpB,OAAOmd,GAAWrjB,EAAIC,EAAKC,CAAC,EAEhCsjB,EAAcE,IACV,MACMxd,EADmBwd,EAAeD,EACP1mB,EAC3BoD,EAAI+F,EAAQtL,EAAWA,EACvBqE,EAAIpJ,KAAKsY,IAAIsV,EAAc,GAAK5tB,KAAKsY,IAAIuV,EAAc,GAAK3mB,EAC5D+mB,EAAIjuB,KAAKguB,KAAK3d,GACduK,EAAImT,GAAgB/tB,KAAKsY,IAAIuV,EAAc,GAAID,GAErD,QADgBF,EAASG,GAAgBL,GAAU,GAAK,EAAI,KACzCljB,EAAIlB,GAAK6kB,GAAMrT,CAAC,IAOvC8S,EAAYG,GACE7tB,KAAKguB,KAAKH,EAAe3mB,KACxB2mB,EAAe9oB,GAAYmC,EAAW,GAC1C,KAEXymB,EAAcE,GACA7tB,KAAKguB,KAAKH,EAAe3mB,IACIA,EAAWA,GAAvCnC,EAAW8oB,KAI9B,MACMA,EAmBV,SAAyBH,EAAUC,EAAYO,GAC3C,IAAI3oB,EAAS2oB,EACb,IAAK,IAAIjsB,EAAI,EAAGA,EAAIksB,GAAgBlsB,IAChCsD,GAAkBmoB,EAASnoB,GAAUooB,EAAWpoB,GAEpD,OAAOA,CACX,CAzByB6oB,CAAgBV,EAAUC,EAD1B,EAAIzmB,GAGzB,GADAA,EAAWmI,EAAsBnI,GAC7BsN,MAAMqZ,GACN,MAAO,CACHjB,UAAWD,GAAeC,UAC1BC,QAASF,GAAeE,QACxB3lB,YAGH,CACD,MAAM0lB,EAAY5sB,KAAKsY,IAAIuV,EAAc,GAAKf,EAC9C,MAAO,CACHF,YACAC,QAAwB,EAAfe,EAAmB5tB,KAAKuqB,KAAKuC,EAAOF,GAC7C1lB,WAER,CACJ,CACA,MAAMinB,GAAiB,GAQvB,SAASJ,GAAgBF,EAAcD,GACnC,OAAOC,EAAe7tB,KAAKuqB,KAAK,EAAIqD,EAAeA,EACvD,CC3EA,MAAMS,GAAe,CAAC,WAAY,UAC5BC,GAAc,CAAC,YAAa,UAAW,QAC7C,SAASC,GAAa/iB,EAASgjB,GAC3B,OAAOA,EAAKC,MAAMruB,QAAyBwC,IAAjB4I,EAAQpL,IACtC,CAuCA,SAASsuB,KAAgG,IAAzFC,EAAuBzrB,UAAAhB,OAAA,QAAAU,IAAAM,UAAA,GAAAA,UAAA,GAAGypB,GAAeK,eAAgBD,EAAM7pB,UAAAhB,OAAA,QAAAU,IAAAM,UAAA,GAAAA,UAAA,GAAGypB,GAAeI,OAC7F,MAAMvhB,EAA6C,kBAA5BmjB,EACjB,CACE3B,eAAgB2B,EAChB3G,UAAW,CAAC,EAAG,GACf+E,UAEF4B,EACN,IAAI,UAAE1B,EAAS,UAAEE,GAAc3hB,EAC/B,MAAMwb,EAASxb,EAAQwc,UAAU,GAC3B5a,EAAS5B,EAAQwc,UAAUxc,EAAQwc,UAAU9lB,OAAS,GAKtDyC,EAAQ,CAAEyD,MAAM,EAAO7H,MAAOymB,IAC9B,UAAE4F,EAAS,QAAEC,EAAO,KAAEC,EAAI,SAAE5lB,EAAQ,SAAEnC,EAAQ,uBAAE6pB,GAtD1D,SAA0BpjB,GACtB,IAAIqjB,GAAa3iB,EAAAA,EAAAA,GAAA,CACbnH,SAAU4nB,GAAe5nB,SACzB6nB,UAAWD,GAAeC,UAC1BC,QAASF,GAAeE,QACxBC,KAAMH,GAAeG,KACrB8B,wBAAwB,GACrBpjB,GAGP,IAAK+iB,GAAa/iB,EAAS8iB,KACvBC,GAAa/iB,EAAS6iB,IACtB,GAAI7iB,EAAQwhB,eAAgB,CACxB,MAAMA,EAAiBxhB,EAAQwhB,eACzBnhB,EAAQ,EAAI7L,KAAK8uB,IAAwB,IAAjB9B,GACxBJ,EAAY/gB,EAAOA,EACnBghB,EAAU,EACZjU,GAAM,IAAM,EAAG,GAAKpN,EAAQuhB,QAAU,IACtC/sB,KAAKuqB,KAAKqC,GACdiC,GAAa3iB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACN2iB,GAAa,IAChB/B,KAAMH,GAAeG,KACrBF,YACAC,WAER,KACK,CACD,MAAMkC,EAAUtB,GAAWjiB,GAC3BqjB,GAAa3iB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACN2iB,GACAE,GAAO,IACVjC,KAAMH,GAAeG,OAEzB+B,EAAcD,wBAAyB,CAC3C,CAEJ,OAAOC,CACX,CAiBsFG,EAAgB9iB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAC7FV,GAAO,IACVzG,UAAWwK,EAAsB/D,EAAQzG,UAAY,MAEnDkqB,EAAkBlqB,GAAY,EAC9B6oB,EAAef,GAAW,EAAI7sB,KAAKuqB,KAAKqC,EAAYE,IACpDoC,EAAe9hB,EAAS4Z,EACxBmI,EAAsB5f,EAAsBvP,KAAKuqB,KAAKqC,EAAYE,IAQlEsC,EAAkBpvB,KAAKgY,IAAIkX,GAAgB,EAOjD,IAAIG,EACJ,GAPApC,IAAcA,EAAYmC,EACpBzC,GAAeM,UAAUC,SACzBP,GAAeM,UAAU/T,SAC/BiU,IAAcA,EAAYiC,EACpBzC,GAAeQ,UAAUD,SACzBP,GAAeQ,UAAUjU,SAE3B0U,EAAe,EAAG,CAClB,MAAM0B,EAAcvB,GAAgBoB,EAAqBvB,GAEzDyB,EAAiBnY,IACb,MAAMwW,EAAW1tB,KAAKguB,KAAKJ,EAAeuB,EAAsBjY,GAChE,OAAQ9J,EACJsgB,IACOuB,EACCrB,EAAeuB,EAAsBD,GACrCI,EACAtvB,KAAKuY,IAAI+W,EAAcpY,GACvBgY,EAAelvB,KAAKuvB,IAAID,EAAcpY,GAAG,CAE7D,MACK,GAAqB,IAAjB0W,EAELyB,EAAiBnY,GAAM9J,EACnBpN,KAAKguB,KAAKmB,EAAsBjY,IAC3BgY,GACID,EAAkBE,EAAsBD,GAAgBhY,OAEpE,CAED,MAAMsY,EAAoBL,EAAsBnvB,KAAKuqB,KAAKqD,EAAeA,EAAe,GACxFyB,EAAiBnY,IACb,MAAMwW,EAAW1tB,KAAKguB,KAAKJ,EAAeuB,EAAsBjY,GAE1DuY,EAAWzvB,KAAKiS,IAAIud,EAAoBtY,EAAG,KACjD,OAAQ9J,EACHsgB,IACKuB,EACErB,EAAeuB,EAAsBD,GACrClvB,KAAK0vB,KAAKD,GACVD,EACIN,EACAlvB,KAAK2vB,KAAKF,IAClBD,CAAiB,CAEjC,CACA,MAAMrnB,EAAY,CACdynB,mBAAoBhB,GAAyB1nB,GAAmB,KAChE7C,KAAO6S,IACH,MAAM1a,EAAU6yB,EAAcnY,GAC9B,GAAK0X,EAmBDjqB,EAAMyD,KAAO8O,GAAKhQ,MAnBO,CACzB,IAAI2oB,EAAkB,EAMlBjC,EAAe,IACfiC,EACU,IAAN3Y,EACM7H,EAAsB4f,GACtBzC,GAAsB6C,EAAenY,EAAG1a,IAEtD,MAAMszB,EAA2B9vB,KAAKgY,IAAI6X,IAAoB5C,EACxD8C,EAA+B/vB,KAAKgY,IAAI5K,EAAS5Q,IAAY2wB,EACnExoB,EAAMyD,KACF0nB,GAA4BC,CACpC,CAKA,OADAprB,EAAMpE,MAAQoE,EAAMyD,KAAOgF,EAAS5Q,EAC7BmI,CAAK,EAEhBwX,SAAUA,KACN,MAAMyT,EAAqB5vB,KAAKiS,IAAI/J,EAAsBC,GAAYF,GAChES,EAASe,GAAsBJ,GAAalB,EAAU9D,KAAKurB,EAAqBvmB,GAAU9I,OAAOqvB,EAAoB,IAC3H,OAAOA,EAAqB,MAAQlnB,CAAM,GAGlD,OAAOP,CACX,CChKA,SAAS6nB,GAAOxyB,GAAiK,IAAhK,UAAEwqB,EAAS,SAAEjjB,EAAW,EAAG,MAAEkrB,EAAQ,GAAG,aAAEC,EAAe,IAAG,cAAEC,EAAgB,GAAE,gBAAEC,EAAkB,IAAG,aAAEC,EAAY,IAAEpe,EAAG,IAAE9K,EAAG,UAAEgmB,EAAY,GAAG,UAAEF,GAAYzvB,EAC3K,MAAMwpB,EAASgB,EAAU,GACnBrjB,EAAQ,CACVyD,MAAM,EACN7H,MAAOymB,GAGLsJ,EAAmBvsB,QACTnB,IAARqP,EACO9K,OACCvE,IAARuE,GAEGnH,KAAKgY,IAAI/F,EAAMlO,GAAK/D,KAAKgY,IAAI7Q,EAAMpD,GAD/BkO,EAC0C9K,EAEzD,IAAIopB,EAAYN,EAAQlrB,EACxB,MAAMyrB,EAAQxJ,EAASuJ,EACjBnjB,OAA0BxK,IAAjBytB,EAA6BG,EAAQH,EAAaG,GAK7DpjB,IAAWojB,IACXD,EAAYnjB,EAAS4Z,GACzB,MAAMyJ,EAAavZ,IAAOqZ,EAAYvwB,KAAKguB,KAAK9W,EAAIgZ,GAC9CQ,EAAcxZ,GAAM9J,EAASqjB,EAAUvZ,GACvCyZ,EAAiBzZ,IACnB,MAAM7G,EAAQogB,EAAUvZ,GAClB0Z,EAASF,EAAWxZ,GAC1BvS,EAAMyD,KAAOpI,KAAKgY,IAAI3H,IAAU8c,EAChCxoB,EAAMpE,MAAQoE,EAAMyD,KAAOgF,EAASwjB,CAAM,EAQ9C,IAAIC,EACAC,EACJ,MAAMC,EAAsB7Z,IAjCLnT,SAkCAY,EAAMpE,WAlCSqC,IAARqP,GAAqBlO,EAAIkO,QAAiBrP,IAARuE,GAAqBpD,EAAIoD,KAoCrF0pB,EAAsB3Z,EACtB4Z,EAAWpC,GAAO,CACd1G,UAAW,CAACrjB,EAAMpE,MAAO+vB,EAAgB3rB,EAAMpE,QAC/CwE,SAAUynB,GAAsBkE,EAAYxZ,EAAGvS,EAAMpE,OACrDssB,QAASsD,EACTvD,UAAWwD,EACXjD,YACAF,cACF,EAGN,OADA8D,EAAmB,GACZ,CACHnB,mBAAoB,KACpBvrB,KAAO6S,IAOH,IAAI8Z,GAAkB,EAUtB,OATKF,QAAoCluB,IAAxBiuB,IACbG,GAAkB,EAClBL,EAAczZ,GACd6Z,EAAmB7Z,SAMKtU,IAAxBiuB,GAAqC3Z,GAAK2Z,EACnCC,EAASzsB,KAAK6S,EAAI2Z,KAGxBG,GAAmBL,EAAczZ,GAC3BvS,EACX,EAGZ,CClFA,MAAM8F,GAAuB4M,GAAY,IAAM,EAAG,EAAG,GAC/C3M,GAAwB2M,GAAY,EAAG,EAAG,IAAM,GAChD1M,GAA0B0M,GAAY,IAAM,EAAG,IAAM,GCIrD4Z,GAAe,CACjB1mB,OAAQkF,EACRhF,OAAM,GACNE,UAAS,GACTD,QAAO,GACPE,OAAM,GACN6N,UAAS,GACT5N,QAAO,GACPC,OAAM,GACNsN,UAAS,GACTrN,QAAO,GACPsN,WAAUA,IAER6Y,GAA8BpsB,IAChC,GAAI2D,EAAmB3D,GAAa,CAEhCsgB,GAAgC,IAAtBtgB,EAAW5C,OAAc,2DACnC,MAAOivB,EAAIC,EAAIC,EAAIC,GAAMxsB,EACzB,OAAOuS,GAAY8Z,EAAIC,EAAIC,EAAIC,EACnC,CACK,MAA0B,kBAAfxsB,GAEZsgB,QAAuCxiB,IAA7BquB,GAAansB,GAA2B,wBAAFpG,OAA0BoG,EAAU,MAC7EmsB,GAAansB,IAEjBA,CAAU,ECKrB,SAASysB,GAAYC,EAAO5U,GAAqD,IAA3ChE,MAAO6Y,GAAU,EAAI,KAAEjnB,EAAI,MAAE+hB,GAAOrpB,UAAAhB,OAAA,QAAAU,IAAAM,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC1E,MAAMwuB,EAAcF,EAAMtvB,OAM1B,GALAkjB,GAAUsM,IAAgB9U,EAAO1a,OAAQ,wDAKrB,IAAhBwvB,EACA,MAAO,IAAM9U,EAAO,GACxB,GAAoB,IAAhB8U,GAAqB9U,EAAO,KAAOA,EAAO,GAC1C,MAAO,IAAMA,EAAO,GACxB,MAAM+U,EAAmBH,EAAM,KAAOA,EAAM,GAExCA,EAAM,GAAKA,EAAME,EAAc,KAC/BF,EAAQ,IAAIA,GAAOI,UACnBhV,EAAS,IAAIA,GAAQgV,WAEzB,MAAMC,EAlDV,SAAsBjV,EAAQpS,EAAMsnB,GAChC,MAAMD,EAAS,GACTE,EAAeD,GAAexF,GAC9B0F,EAAYpV,EAAO1a,OAAS,EAClC,IAAK,IAAID,EAAI,EAAGA,EAAI+vB,EAAW/vB,IAAK,CAChC,IAAIsqB,EAAQwF,EAAanV,EAAO3a,GAAI2a,EAAO3a,EAAI,IAC/C,GAAIuI,EAAM,CACN,MAAMynB,EAAiB/tB,MAAMC,QAAQqG,GAAQA,EAAKvI,IAAMwN,EAAOjF,EAC/D+hB,EAAQtB,GAAKgH,EAAgB1F,EACjC,CACAsF,EAAO9wB,KAAKwrB,EAChB,CACA,OAAOsF,CACX,CAqCmBK,CAAatV,EAAQpS,EAAM+hB,GACpCyF,EAAYH,EAAO3vB,OACnBiwB,EAAgBpuB,IAClB,GAAI4tB,GAAoB5tB,EAAIytB,EAAM,GAC9B,OAAO5U,EAAO,GAClB,IAAI3a,EAAI,EACR,GAAI+vB,EAAY,EACZ,KAAO/vB,EAAIuvB,EAAMtvB,OAAS,KAClB6B,EAAIytB,EAAMvvB,EAAI,IADOA,KAKjC,MAAMmwB,EAAkB/oB,EAASmoB,EAAMvvB,GAAIuvB,EAAMvvB,EAAI,GAAI8B,GACzD,OAAO8tB,EAAO5vB,GAAGmwB,EAAgB,EAErC,OAAOX,EACA1tB,GAAMouB,EAAavZ,GAAM4Y,EAAM,GAAIA,EAAME,EAAc,GAAI3tB,IAC5DouB,CACV,CCvEA,SAASE,GAAczf,GACnB,MAAM0f,EAAS,CAAC,GAEhB,OCFJ,SAAoBA,EAAQC,GACxB,MAAMtgB,EAAMqgB,EAAOA,EAAOpwB,OAAS,GACnC,IAAK,IAAID,EAAI,EAAGA,GAAKswB,EAAWtwB,IAAK,CACjC,MAAMuwB,EAAiBnpB,EAAS,EAAGkpB,EAAWtwB,GAC9CqwB,EAAOvxB,KAAKipB,GAAU/X,EAAK,EAAGugB,GAClC,CACJ,CDLIC,CAAWH,EAAQ1f,EAAI1Q,OAAS,GACzBowB,CACX,CEIA,SAAStK,GAASxqB,GAA4E,IAA3E,SAAE0J,EAAW,IAAK8gB,UAAW0K,EAAc,MAAEC,EAAK,KAAEnoB,EAAO,aAAchN,EAKxF,MAAMo1B,ECfapoB,IACZtG,MAAMC,QAAQqG,IAA4B,kBAAZA,EAAK,GDclBqoB,CAAcroB,GAChCA,EAAKjJ,IAAI2vB,IACTA,GAA2B1mB,GAK3B7F,EAAQ,CACVyD,MAAM,EACN7H,MAAOmyB,EAAe,IAKpBI,EE7BV,SAA8BR,EAAQprB,GAClC,OAAOorB,EAAO/wB,KAAKwxB,GAAMA,EAAI7rB,GACjC,CF2B0B8rB,CAGtBL,GAASA,EAAMzwB,SAAWwwB,EAAexwB,OACnCywB,EACAN,GAAcK,GAAiBxrB,GAC/B+rB,EAAoB1B,GAAYuB,EAAeJ,EAAgB,CACjEloB,KAAMtG,MAAMC,QAAQyuB,GACdA,GA9BSjzB,EA+BK+yB,EA/BGhqB,EA+BakqB,EA9BjCjzB,EAAO4B,KAAI,IAAMmH,GAAUiC,KAAWnI,OAAO,EAAG7C,EAAOuC,OAAS,MAD3E,IAAuBvC,EAAQ+I,EAiC3B,MAAO,CACHknB,mBAAoB1oB,EACpB7C,KAAO6S,IACHvS,EAAMpE,MAAQ0yB,EAAkB/b,GAChCvS,EAAMyD,KAAO8O,GAAKhQ,EACXvC,GAGnB,CG7CA,MAAMuuB,GAAmBvhB,IACrB,MAAMwhB,EAAgB31B,IAAA,IAAC,UAAE8S,GAAW9S,EAAA,OAAKmU,EAAOrB,EAAU,EAC1D,MAAO,CACHtM,MAAOA,IAAMoO,GAAMT,OAAOwhB,GAAe,GACzCrtB,KAAMA,IAAMuM,GAAY8gB,GAKxBnhB,IAAKA,IAAOV,GAAUf,aAAee,GAAUhB,UAAYvJ,GAAKiL,MACnE,ECACohB,GAAa,CACfC,MAAOrD,GACPA,QAAO,GACPsD,MAAOtL,GACPA,UAAWA,GACX0G,OAAMA,IAEJ6E,GAAqBpY,GAAYA,EAAU,IAMjD,MAAMqY,WAA4B7K,GAC9B/iB,WAAAA,CAAY4F,GACRqb,MAAMrb,GAINnP,KAAKo3B,SAAW,KAIhBp3B,KAAKq3B,WAAa,KAIlBr3B,KAAK2X,YAAc,EAInB3X,KAAKs3B,cAAgB,EAMrBt3B,KAAKu3B,iBAAmB,UAIxBv3B,KAAK4K,UAAY,KACjB5K,KAAKsI,MAAQ,OAKbtI,KAAKyJ,KAAO,KAGR,GAFAzJ,KAAKqnB,SAAS5c,SACdzK,KAAK4sB,WAAY,EACE,SAAf5sB,KAAKsI,MACL,OACJtI,KAAKw3B,WACL,MAAM,OAAEC,GAAWz3B,KAAKmP,QACxBsoB,GAAUA,GAAQ,EAEtB,MAAM,KAAEzW,EAAI,YAAEnH,EAAW,QAAE9Z,EAAO,UAAE4rB,GAAc3rB,KAAKmP,QACjDuoB,GAAkC,OAAZ33B,QAAgC,IAAZA,OAAqB,EAASA,EAAQmoB,mBAAqBA,GAE3GloB,KAAKqnB,SAAW,IAAIqQ,EAAmB/L,GADpBgM,CAACtL,EAAmB7D,IAAkBxoB,KAAKmtB,oBAAoBd,EAAmB7D,IACvCxH,EAAMnH,EAAa9Z,GACjFC,KAAKqnB,SAASiB,iBAClB,CACArd,OAAAA,GACIuf,MAAMvf,UAEFjL,KAAKktB,WACL7P,OAAOua,OAAO53B,KAAKktB,UAAWltB,KAAKutB,aAAavtB,KAAKktB,UAAUvB,WAEvE,CACA4B,YAAAA,CAAasK,GACT,MAAM,KAAE3rB,EAAO,YAAW,OAAEigB,EAAS,EAAC,YAAEM,EAAc,EAAC,WAAEL,EAAU,SAAE1jB,EAAW,GAAO1I,KAAKmP,QACtF2oB,EAAmB7rB,EAAYC,GAC/BA,EACA6qB,GAAW7qB,IAASyf,GAO1B,IAAIoM,EACAC,EACAF,IAAqBnM,IACK,kBAAnBkM,EAAY,KAInBE,EAAwBnJ,GAAKsI,GAAmBjH,GAAI4H,EAAY,GAAIA,EAAY,KAChFA,EAAc,CAAC,EAAG,MAEtB,MAAM/rB,EAAYgsB,GAAgBjoB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAI7P,KAAKmP,SAAO,IAAEwc,UAAWkM,KAK9C,WAAfzL,IACA4L,EAAoBF,GAAgBjoB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAC/B7P,KAAKmP,SAAO,IACfwc,UAAW,IAAIkM,GAAatC,UAC5B7sB,UAAWA,MAWkB,OAAjCoD,EAAUynB,qBACVznB,EAAUynB,mBAAqB1nB,EAAsBC,IAEzD,MAAM,mBAAEynB,GAAuBznB,EACzBmsB,EAAmB1E,EAAqB9G,EAE9C,MAAO,CACH3gB,YACAksB,oBACAD,wBACAxE,qBACA0E,mBACAC,cAPkBD,GAAoB9L,EAAS,GAAKM,EAS5D,CACAe,cAAAA,GACI,MAAM,SAAEjB,GAAW,GAASvsB,KAAKmP,QACjCnP,KAAKkL,OACyB,WAA1BlL,KAAKu3B,kBAAkChL,EAIvCvsB,KAAKsI,MAAQtI,KAAKu3B,iBAHlBv3B,KAAKmL,OAKb,CACAgtB,IAAAA,CAAKlkB,GAA2B,IAAhBmkB,EAAMvxB,UAAAhB,OAAA,QAAAU,IAAAM,UAAA,IAAAA,UAAA,GAClB,MAAM,SAAEkjB,GAAa/pB,KAErB,IAAK+pB,EAAU,CACX,MAAM,UAAE4B,GAAc3rB,KAAKmP,QAC3B,MAAO,CAAEpD,MAAM,EAAM7H,MAAOynB,EAAUA,EAAU9lB,OAAS,GAC7D,CACA,MAAM,cAAE2iB,EAAa,UAAE1c,EAAS,kBAAEksB,EAAiB,sBAAED,EAAqB,UAAEpM,EAAS,mBAAE4H,EAAkB,cAAE2E,EAAa,iBAAED,GAAsBlO,EAChJ,GAAuB,OAAnB/pB,KAAK4K,UACL,OAAOkB,EAAU9D,KAAK,GAC1B,MAAM,MAAEwkB,EAAK,OAAEL,EAAM,WAAEC,EAAU,YAAEK,EAAW,SAAEW,GAAaptB,KAAKmP,QAO9DnP,KAAK2K,MAAQ,EACb3K,KAAK4K,UAAYjH,KAAKiS,IAAI5V,KAAK4K,UAAWqJ,GAErCjU,KAAK2K,MAAQ,IAClB3K,KAAK4K,UAAYjH,KAAKiS,IAAI3B,EAAYikB,EAAgBl4B,KAAK2K,MAAO3K,KAAK4K,YAGvEwtB,EACAp4B,KAAK2X,YAAc1D,EAEI,OAAlBjU,KAAKo3B,SACVp3B,KAAK2X,YAAc3X,KAAKo3B,SAMxBp3B,KAAK2X,YACDhU,KAAK6J,MAAMyG,EAAYjU,KAAK4K,WAAa5K,KAAK2K,MAGtD,MAAM0tB,EAAmBr4B,KAAK2X,YAAc6U,GAASxsB,KAAK2K,OAAS,EAAI,GAAK,GACtE2tB,EAAiBt4B,KAAK2K,OAAS,EAC/B0tB,EAAmB,EACnBA,EAAmBH,EACzBl4B,KAAK2X,YAAchU,KAAKmH,IAAIutB,EAAkB,GAE3B,aAAfr4B,KAAKsI,OAA0C,OAAlBtI,KAAKo3B,WAClCp3B,KAAK2X,YAAcugB,GAEvB,IAAIK,EAAUv4B,KAAK2X,YACf6gB,EAAiB1sB,EACrB,GAAIqgB,EAAQ,CAMR,MAAMnf,EAAWrJ,KAAKiS,IAAI5V,KAAK2X,YAAaugB,GAAiBD,EAK7D,IAAIQ,EAAmB90B,KAAK+0B,MAAM1rB,GAK9B2rB,EAAoB3rB,EAAW,GAK9B2rB,GAAqB3rB,GAAY,IAClC2rB,EAAoB,GAEF,IAAtBA,GAA2BF,IAC3BA,EAAmB90B,KAAKiS,IAAI6iB,EAAkBtM,EAAS,GAIhCviB,QAAQ6uB,EAAmB,KAE3B,YAAfrM,GACAuM,EAAoB,EAAIA,EACpBlM,IACAkM,GAAqBlM,EAAcwL,IAGnB,WAAf7L,IACLoM,EAAiBR,IAGzBO,EAAUhc,GAAM,EAAG,EAAGoc,GAAqBV,CAC/C,CAMA,MAAM3vB,EAAQgwB,EACR,CAAEvsB,MAAM,EAAO7H,MAAOynB,EAAU,IAChC6M,EAAexwB,KAAKuwB,GACtBR,IACAzvB,EAAMpE,MAAQ6zB,EAAsBzvB,EAAMpE,QAE9C,IAAI,KAAE6H,GAASzD,EACVgwB,GAAyC,OAAvB/E,IACnBxnB,EACI/L,KAAK2K,OAAS,EACR3K,KAAK2X,aAAeugB,EACpBl4B,KAAK2X,aAAe,GAElC,MAAMihB,EAAwC,OAAlB54B,KAAKo3B,WACb,aAAfp3B,KAAKsI,OAAwC,YAAftI,KAAKsI,OAAuByD,GAU/D,OATI6sB,QAAyCryB,IAAlBiiB,IACvBlgB,EAAMpE,MAAQgoB,GAAiBP,EAAW3rB,KAAKmP,QAASqZ,IAExD4E,GACAA,EAAS9kB,EAAMpE,OAEf00B,GACA54B,KAAK64B,SAEFvwB,CACX,CACA,YAAIuC,GACA,MAAM,SAAEkf,GAAa/pB,KACrB,OAAO+pB,EAAW7W,EAAsB6W,EAASwJ,oBAAsB,CAC3E,CACA,QAAI7oB,GACA,OAAOwI,EAAsBlT,KAAK2X,YACtC,CACA,QAAIjN,CAAK0L,GACLA,EAAUpD,EAAsBoD,GAChCpW,KAAK2X,YAAcvB,EACG,OAAlBpW,KAAKo3B,UAAoC,IAAfp3B,KAAK2K,MAC/B3K,KAAKo3B,SAAWhhB,EAEXpW,KAAK84B,SACV94B,KAAK4K,UAAY5K,KAAK84B,OAAOnjB,MAAQS,EAAUpW,KAAK2K,MAE5D,CACA,SAAIA,GACA,OAAO3K,KAAKs3B,aAChB,CACA,SAAI3sB,CAAMouB,GACN,MAAMC,EAAah5B,KAAKs3B,gBAAkByB,EAC1C/4B,KAAKs3B,cAAgByB,EACjBC,IACAh5B,KAAK0K,KAAOwI,EAAsBlT,KAAK2X,aAE/C,CACAzM,IAAAA,GAII,GAHKlL,KAAKqnB,SAASJ,aACfjnB,KAAKqnB,SAASwB,UAEb7oB,KAAKktB,UAEN,YADAltB,KAAKu3B,iBAAmB,WAG5B,GAAIv3B,KAAK4sB,UACL,OACJ,MAAM,OAAEkM,EAASjC,GAAe,OAAEoC,EAAM,UAAEruB,GAAc5K,KAAKmP,QACxDnP,KAAK84B,SACN94B,KAAK84B,OAASA,GAAQ7kB,GAAcjU,KAAKm4B,KAAKlkB,MAElDglB,GAAUA,IACV,MAAMtjB,EAAM3V,KAAK84B,OAAOnjB,MACF,OAAlB3V,KAAKo3B,SACLp3B,KAAK4K,UAAY+K,EAAM3V,KAAKo3B,SAEtBp3B,KAAK4K,UAGS,aAAf5K,KAAKsI,QACVtI,KAAK4K,UAAY+K,GAHjB3V,KAAK4K,UAA0B,OAAdA,QAAoC,IAAdA,EAAuBA,EAAY5K,KAAKgtB,gBAKhE,aAAfhtB,KAAKsI,OACLtI,KAAK+sB,wBAET/sB,KAAKq3B,WAAar3B,KAAK4K,UACvB5K,KAAKo3B,SAAW,KAKhBp3B,KAAKsI,MAAQ,UACbtI,KAAK84B,OAAOnxB,OAChB,CACAwD,KAAAA,GACI,IAAIwB,EACC3M,KAAKktB,WAIVltB,KAAKsI,MAAQ,SACbtI,KAAKo3B,SAAuC,QAA3BzqB,EAAK3M,KAAK2X,mBAAgC,IAAPhL,EAAgBA,EAAK,GAJrE3M,KAAKu3B,iBAAmB,QAKhC,CACAnsB,QAAAA,GACuB,YAAfpL,KAAKsI,OACLtI,KAAKkL,OAETlL,KAAKu3B,iBAAmBv3B,KAAKsI,MAAQ,WACrCtI,KAAKo3B,SAAW,IACpB,CACAyB,MAAAA,GACI74B,KAAKw3B,WACLx3B,KAAKsI,MAAQ,WACb,MAAM,WAAE8f,GAAepoB,KAAKmP,QAC5BiZ,GAAcA,GAClB,CACA3d,MAAAA,GAC4B,OAApBzK,KAAKq3B,YACLr3B,KAAKm4B,KAAKn4B,KAAKq3B,YAEnBr3B,KAAKw3B,WACLx3B,KAAK+sB,uBACT,CACAyK,QAAAA,GACIx3B,KAAKsI,MAAQ,OACbtI,KAAKk5B,aACLl5B,KAAKqtB,yBACLrtB,KAAK+sB,wBACL/sB,KAAK4K,UAAY5K,KAAKq3B,WAAa,KACnCr3B,KAAKqnB,SAAS5c,QAClB,CACAyuB,UAAAA,GACSl5B,KAAK84B,SAEV94B,KAAK84B,OAAOrvB,OACZzJ,KAAK84B,YAASvyB,EAClB,CACA6xB,MAAAA,CAAO1tB,GAEH,OADA1K,KAAK4K,UAAY,EACV5K,KAAKm4B,KAAKztB,GAAM,EAC3B,EC1XJ,MAAMyuB,GAAoB,IAAIxoB,IAAI,CAC9B,UACA,WACA,SACA,cCLJ,MAAMyoB,GAA8BpwB,GAAK,IAAMqU,OAAOE,eAAeC,KAAKjO,QAAQ+N,UAAW,a,0GCgE7F,MAAM+b,GAA6B,CAC/Brd,WAAU,GACVD,UAAS,GACTK,UAASA,IAKb,MAAMkd,WAA6BhN,GAC/B/iB,WAAAA,CAAY4F,GACRqb,MAAMrb,GACN,MAAM,KAAE6R,EAAI,YAAEnH,EAAW,QAAE9Z,EAAO,UAAE4rB,GAAc3rB,KAAKmP,QACvDnP,KAAKqnB,SAAW,IAAIkD,GAAqBoB,GAAW,CAACU,EAAmB7D,IAAkBxoB,KAAKmtB,oBAAoBd,EAAmB7D,IAAgBxH,EAAMnH,EAAa9Z,GACzKC,KAAKqnB,SAASiB,iBAClB,CACAiF,YAAAA,CAAa5B,EAAWnD,GACpB,IAAI7b,EACJ,IAAI,SAAE9B,EAAW,IAAG,MAAEyrB,EAAK,KAAEnoB,EAAI,KAAEjC,EAAI,YAAE2N,EAAW,KAAEmH,EAAI,UAAEpW,GAAe5K,KAAKmP,QAKhF,KAAmC,QAA5BxC,EAAKkN,EAAY3B,aAA0B,IAAPvL,OAAgB,EAASA,EAAGxM,SACnE,OAAO,EAlBnB,IA1CuCgP,EA2E/B,GARoB,kBAAThB,GACPvB,KACkBuB,KA1BZkrB,KA2BNlrB,EAAOkrB,GAA2BlrB,IArElClC,GAD2BkD,EA2EGnP,KAAKmP,SA1EfjD,OACP,WAAjBiD,EAAQjD,OACPwB,EAAuByB,EAAQhB,MAwEiB,CAC7C,MAAAorB,EAAmEv5B,KAAKmP,SAAlE,WAAEiZ,EAAU,SAAEgF,EAAQ,YAAEvT,EAAW,QAAE9Z,GAAqBw5B,EAATpqB,GAAOud,EAAAA,EAAAA,GAAA6M,EAAA5M,IACxD6M,EAxElB,SAA8B7N,EAAWxc,GAMrC,MAAMsqB,EAAkB,IAAItC,IAAmBtnB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAC1CV,GAAO,IACVwc,YACAQ,OAAQ,EACRK,MAAO,EACPvgB,aAAa,KAEjB,IAAI3D,EAAQ,CAAEyD,MAAM,EAAO7H,MAAOynB,EAAU,IAC5C,MAAM+N,EAAwB,GAK9B,IAAI7e,EAAI,EACR,MAAQvS,EAAMyD,MAAQ8O,EA/BN,KAgCZvS,EAAQmxB,EAAgBrB,OAAOvd,GAC/B6e,EAAsBh1B,KAAK4D,EAAMpE,OACjC2W,GAvCY,GAyChB,MAAO,CACHyb,WAAO/vB,EACPolB,UAAW+N,EACX7uB,SAAUgQ,EA5CE,GA6CZ1M,KAAM,SAEd,CAyC0CwrB,CAAqBhO,EAAWxc,GAKrC,KAJzBwc,EAAY6N,EAAsB7N,WAIpB9lB,SACV8lB,EAAU,GAAKA,EAAU,IAE7B9gB,EAAW2uB,EAAsB3uB,SACjCyrB,EAAQkD,EAAsBlD,MAC9BnoB,EAAOqrB,EAAsBrrB,KAC7BjC,EAAO,WACX,CACA,MAAMlC,ECrHd,SAA6BjK,EAAS65B,EAAWjO,GAA4G,IAAjG,MAAEa,EAAQ,EAAC,SAAE3hB,EAAW,IAAG,OAAEshB,EAAS,EAAC,WAAEC,EAAa,OAAM,KAAEje,EAAO,YAAW,MAAEmoB,GAAQzvB,UAAAhB,OAAA,QAAAU,IAAAM,UAAA,GAAAA,UAAA,GAAG,CAAC,EACtJ,MAAMgzB,EAAkB,CAAE,CAACD,GAAYjO,GACnC2K,IACAuD,EAAgB5D,OAASK,GAC7B,MAAMjqB,EAASsC,EAAwBR,EAAMtD,GAM7C,OAFIhD,MAAMC,QAAQuE,KACdwtB,EAAgBxtB,OAASA,GACtBtM,EAAQ8M,QAAQgtB,EAAiB,CACpCrN,QACA3hB,WACAwB,OAASxE,MAAMC,QAAQuE,GAAmB,SAATA,EACjC0Y,KAAM,OACN+U,WAAY3N,EAAS,EACrB4N,UAA0B,YAAf3N,EAA2B,YAAc,UAE5D,CDmG0B4N,CAAoBngB,EAAY3B,MAAM/X,QAAS6gB,EAAM2K,GAAS9b,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAO7P,KAAKmP,SAAO,IAAEtE,WAAUyrB,QAAOnoB,UAyBtH,OAtBAnE,EAAUY,UAA0B,OAAdA,QAAoC,IAAdA,EAAuBA,EAAY5K,KAAKgtB,gBAChFhtB,KAAKi6B,iBACL5vB,EAAeL,EAAWhK,KAAKi6B,iBAC/Bj6B,KAAKi6B,qBAAkB1zB,GAWvByD,EAAUmC,SAAW,KACjB,MAAM,WAAEic,GAAepoB,KAAKmP,QAC5B0K,EAAYzW,IAAI8oB,GAAiBP,EAAW3rB,KAAKmP,QAASqZ,IAC1DJ,GAAcA,IACdpoB,KAAKyK,SACLzK,KAAKqtB,wBAAwB,EAG9B,CACHrjB,YACAa,WACAyrB,QACApqB,OACAiC,OACAwd,UAAWA,EAEnB,CACA,YAAI9gB,GACA,MAAM,SAAEkf,GAAa/pB,KACrB,IAAK+pB,EACD,OAAO,EACX,MAAM,SAAElf,GAAakf,EACrB,OAAO7W,EAAsBrI,EACjC,CACA,QAAIH,GACA,MAAM,SAAEqf,GAAa/pB,KACrB,IAAK+pB,EACD,OAAO,EACX,MAAM,UAAE/f,GAAc+f,EACtB,OAAO7W,EAAsBlJ,EAAU2N,aAAe,EAC1D,CACA,QAAIjN,CAAK0L,GACL,MAAM,SAAE2T,GAAa/pB,KACrB,IAAK+pB,EACD,OACJ,MAAM,UAAE/f,GAAc+f,EACtB/f,EAAU2N,YAAc3E,EAAsBoD,EAClD,CACA,SAAIzL,GACA,MAAM,SAAEof,GAAa/pB,KACrB,IAAK+pB,EACD,OAAO,EACX,MAAM,UAAE/f,GAAc+f,EACtB,OAAO/f,EAAUkwB,YACrB,CACA,SAAIvvB,CAAMouB,GACN,MAAM,SAAEhP,GAAa/pB,KACrB,IAAK+pB,EACD,OACJ,MAAM,UAAE/f,GAAc+f,EACtB/f,EAAUkwB,aAAenB,CAC7B,CACA,SAAIzwB,GACA,MAAM,SAAEyhB,GAAa/pB,KACrB,IAAK+pB,EACD,MAAO,OACX,MAAM,UAAE/f,GAAc+f,EACtB,OAAO/f,EAAUmwB,SACrB,CACA,aAAIvvB,GACA,MAAM,SAAEmf,GAAa/pB,KACrB,IAAK+pB,EACD,OAAO,KACX,MAAM,UAAE/f,GAAc+f,EAGtB,OAAO/f,EAAUY,SACrB,CAKAP,cAAAA,CAAeC,GACX,GAAKtK,KAAKktB,UAGL,CACD,MAAM,SAAEnD,GAAa/pB,KACrB,IAAK+pB,EACD,OAAO3W,EACX,MAAM,UAAEpJ,GAAc+f,EACtB1f,EAAeL,EAAWM,EAC9B,MARItK,KAAKi6B,gBAAkB3vB,EAS3B,OAAO8I,CACX,CACAlI,IAAAA,GACI,GAAIlL,KAAK4sB,UACL,OACJ,MAAM,SAAE7C,GAAa/pB,KACrB,IAAK+pB,EACD,OACJ,MAAM,UAAE/f,GAAc+f,EACM,aAAxB/f,EAAUmwB,WACVn6B,KAAK+sB,wBAET/iB,EAAUkB,MACd,CACAC,KAAAA,GACI,MAAM,SAAE4e,GAAa/pB,KACrB,IAAK+pB,EACD,OACJ,MAAM,UAAE/f,GAAc+f,EACtB/f,EAAUmB,OACd,CACA1B,IAAAA,GAGI,GAFAzJ,KAAKqnB,SAAS5c,SACdzK,KAAK4sB,WAAY,EACE,SAAf5sB,KAAKsI,MACL,OACJtI,KAAKqtB,yBACLrtB,KAAK+sB,wBACL,MAAM,SAAEhD,GAAa/pB,KACrB,IAAK+pB,EACD,OACJ,MAAM,UAAE/f,EAAS,UAAE2hB,EAAS,SAAE9gB,EAAQ,KAAEqB,EAAI,KAAEiC,EAAI,MAAEmoB,GAAUvM,EAC9D,GAA4B,SAAxB/f,EAAUmwB,WACc,aAAxBnwB,EAAUmwB,UACV,OAUJ,GAAIn6B,KAAK0K,KAAM,CACX,MAAA0vB,EAAmEp6B,KAAKmP,SAAlE,YAAE0K,EAAW,SAAEuT,EAAQ,WAAEhF,EAAU,QAAEroB,GAAqBq6B,EAATjrB,GAAOud,EAAAA,EAAAA,GAAA0N,EAAAC,IACxDZ,EAAkB,IAAItC,IAAmBtnB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAC1CV,GAAO,IACVwc,YACA9gB,WACAqB,OACAiC,OACAmoB,QACArqB,aAAa,KAEXquB,EAAatnB,EAAsBhT,KAAK0K,MAC9CmP,EAAYZ,gBAAgBwgB,EAAgBrB,OAAOkC,EAjQ3C,IAiQqEp2B,MAAOu1B,EAAgBrB,OAAOkC,GAAYp2B,MAjQ/G,GAkQZ,CACA,MAAM,OAAEuzB,GAAWz3B,KAAKmP,QACxBsoB,GAAUA,IACVz3B,KAAKyK,QACT,CACAW,QAAAA,GACI,MAAM,SAAE2e,GAAa/pB,KAChB+pB,GAELA,EAAS/f,UAAU6uB,QACvB,CACApuB,MAAAA,GACI,MAAM,SAAEsf,GAAa/pB,KAChB+pB,GAELA,EAAS/f,UAAUS,QACvB,CACA,eAAO8vB,CAASprB,GACZ,MAAM,YAAE0K,EAAW,KAAEmH,EAAI,YAAEyL,EAAW,WAAEL,EAAU,QAAEoE,EAAO,KAAEtkB,GAASiD,EACtE,OAAQiqB,MACJpY,GACAmY,GAAkB1yB,IAAIua,IACtBnH,GACAA,EAAY3B,OACZ2B,EAAY3B,MAAM/X,mBAAmBq6B,cAKpC3gB,EAAY3B,MAAMrP,WAAWukB,WAC7BX,GACc,WAAfL,GACY,IAAZoE,GACS,YAATtkB,CACR,EEpTJ,MAAMuuB,GAAoB,CACtBvuB,KAAM,SACNqkB,UAAW,IACXC,QAAS,GACTI,UAAW,IAQT8J,GAAsB,CACxBxuB,KAAM,YACNrB,SAAU,IAMRsD,GAAO,CACTjC,KAAM,YACNiC,KAAM,CAAC,IAAM,GAAK,IAAM,GACxBtD,SAAU,IAER8vB,GAAuBA,CAACC,EAAQz5B,KAAoB,IAAlB,UAAEwqB,GAAWxqB,EACjD,OAAIwqB,EAAU9lB,OAAS,EACZ60B,GAEFnnB,EAAe9M,IAAIm0B,GACjBA,EAASzd,WAAW,SAxBG,CAClCjR,KAAM,SACNqkB,UAAW,IACXC,QAAoB,IAsBa7E,EAAU,GAtBnB,EAAIhoB,KAAKuqB,KAAK,KAAO,GAC7C0C,UAAW,IAsBD6J,GAEHtsB,EAAI,E,8HCzBf,MAAM0sB,GAAqB,SAAC7Z,EAAM9c,EAAO6M,GAAM,IAAEpF,EAAU9E,UAAAhB,OAAA,QAAAU,IAAAM,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAG9G,EAAO8G,UAAAhB,OAAA,EAAAgB,UAAA,QAAAN,EAAEu0B,EAASj0B,UAAAhB,OAAA,EAAAgB,UAAA,QAAAN,EAAA,OAAM6hB,IACtF,MAAM2S,EAAkBrvB,EAAmBC,EAAYqV,IAAS,CAAC,EAM3DwL,EAAQuO,EAAgBvO,OAAS7gB,EAAW6gB,OAAS,EAK3D,IAAI,QAAE+L,EAAU,GAAM5sB,EACtB4sB,GAAoBvlB,EAAsBwZ,GAC1C,IAAIrd,GAAOU,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACP8b,UAAW9jB,MAAMC,QAAQiJ,GAAUA,EAAS,CAAC,KAAMA,GACnD5C,KAAM,UACNzF,SAAUxE,EAAMqE,eACbwyB,GAAe,IAClBvO,OAAQ+L,EACRnL,SAAW1lB,IACPxD,EAAMd,IAAIsE,GACVqzB,EAAgB3N,UAAY2N,EAAgB3N,SAAS1lB,EAAE,EAE3D0gB,WAAYA,KACRA,IACA2S,EAAgB3S,YAAc2S,EAAgB3S,YAAY,EAE9DpH,OACAnH,YAAa3V,EACbnE,QAAS+6B,OAAYv0B,EAAYxG,KCpCzC,SAA4BoB,GAA2I,IAA1I,KAAE65B,EAAMxO,MAAOyO,EAAM,cAAEC,EAAa,gBAAEC,EAAe,iBAAEC,EAAgB,OAAEjP,EAAM,WAAEC,EAAU,YAAEK,EAAW,KAAExf,EAAI,QAAEsrB,GAAwBp3B,EAAZwK,GAAU+gB,EAAAA,EAAAA,GAAAvrB,EAAAwrB,IAC/J,QAAStP,OAAO8U,KAAKxmB,GAAY9F,MACrC,EDwCSw1B,CAAoBN,KACrB5rB,GAAOU,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACAV,GACAwrB,GAAqB3Z,EAAM7R,KAQlCA,EAAQtE,WACRsE,EAAQtE,SAAWmI,EAAsB7D,EAAQtE,WAEjDsE,EAAQsd,cACRtd,EAAQsd,YAAczZ,EAAsB7D,EAAQsd,mBAEnClmB,IAAjB4I,EAAQlC,OACRkC,EAAQwc,UAAU,GAAKxc,EAAQlC,MAEnC,IAAIquB,GAAa,EAmBjB,KAlBqB,IAAjBnsB,EAAQjD,MACc,IAArBiD,EAAQtE,WAAmBsE,EAAQsd,eACpCtd,EAAQtE,SAAW,EACG,IAAlBsE,EAAQqd,QACR8O,GAAa,KAGjB3gB,IACAlH,KACA6nB,GAAa,EACbnsB,EAAQtE,SAAW,EACnBsE,EAAQqd,MAAQ,GAOhB8O,IAAeR,QAA6Bv0B,IAAhBrC,EAAM6B,MAAqB,CACvD,MAAMyiB,EAAgB0D,GAAiB/c,EAAQwc,UAAWoP,GAC1D,QAAsBx0B,IAAlBiiB,EAOA,OANAzS,GAAMT,QAAO,KACTnG,EAAQie,SAAS5E,GACjBrZ,EAAQiZ,YAAY,IAIjB,IAAI/c,EAAsB,GAEzC,CAMA,OAAKyvB,GAAaxB,GAAqBiB,SAASprB,GACrC,IAAImqB,GAAqBnqB,GAGzB,IAAIgoB,GAAoBhoB,EACnC,CACH,E,kCE/FD,SAASosB,GAAoBp6B,EAAoC4C,GAAK,IAAxC,cAAEy3B,EAAa,eAAEC,GAAgBt6B,EAC3D,MAAMu6B,EAAcF,EAAcje,eAAexZ,KAAgC,IAAxB03B,EAAe13B,GAExE,OADA03B,EAAe13B,IAAO,EACf23B,CACX,CACA,SAASC,GAActzB,EAAeuzB,GAAmE,IAA9C,MAAEpP,EAAQ,EAAC,mBAAEqP,EAAkB,KAAE3vB,GAAMrF,UAAAhB,OAAA,QAAAU,IAAAM,UAAA,GAAAA,UAAA,GAAG,CAAC,EAClG,IAAI8F,EACJ,IAAI,WAAEhB,EAAatD,EAAcsyB,uBAAsB,cAAEmB,GAA6BF,EAAX7qB,GAAM2b,EAAAA,EAAAA,GAAKkP,EAAmBjP,IACrGkP,IACAlwB,EAAakwB,GACjB,MAAMryB,EAAa,GACbuyB,EAAqB7vB,GACvB7D,EAAc2zB,gBACd3zB,EAAc2zB,eAAeC,WAAW/vB,GAC5C,IAAK,MAAMnI,KAAOgN,EAAQ,CACtB,MAAM7M,EAAQmE,EAAc2R,SAASjW,EAAgD,QAA1C4I,EAAKtE,EAAc6zB,aAAan4B,UAAyB,IAAP4I,EAAgBA,EAAK,MAC5GwvB,EAAcprB,EAAOhN,GAC3B,QAAoBwC,IAAhB41B,GACCJ,GACGR,GAAqBQ,EAAoBh4B,GAC7C,SAEJ,MAAMg3B,GAAelrB,EAAAA,EAAAA,GAAA,CACjB2c,SACG9gB,EAAmBC,GAAc,CAAC,EAAG5H,IAM5C,IAAI+2B,GAAY,EAChB,GAAI1xB,OAAOgzB,uBAAwB,CAC/B,MAAMC,EAAW3hB,GAAqBrS,GACtC,GAAIg0B,EAAU,CACV,MAAMzxB,EAAYxB,OAAOgzB,uBAAuBC,EAAUt4B,EAAKgS,IAC7C,OAAdnL,IACAmwB,EAAgBnwB,UAAYA,EAC5BkwB,GAAY,EAEpB,CACJ,CACA3gB,GAAqB9R,EAAetE,GACpCG,EAAMyD,MAAMkzB,GAAmB92B,EAAKG,EAAOi4B,EAAa9zB,EAAci0B,oBAAsB9oB,EAAe/M,IAAI1C,GACzG,CAAEmI,MAAM,GACR6uB,EAAiB1yB,EAAeyyB,IACtC,MAAM9wB,EAAY9F,EAAM8F,UACpBA,GACAR,EAAW9E,KAAKsF,EAExB,CAQA,OAPI8xB,GACAhyB,QAAQC,IAAIP,GAAY8B,MAAK,KACzByK,GAAMT,QAAO,KACTwmB,GlFnDhB,SAAmBzzB,EAAeI,GAE9B,IAAAtH,EADiByH,EAAeP,EAAeI,IACsB,CAAC,GAAlE,cAAEqzB,EAAgB,CAAC,EAAC,WAAEnwB,EAAa,CAAC,GAAcxK,EAAR4P,GAAM2b,EAAAA,EAAAA,GAAAvrB,EAAAwrB,IACpD5b,GAAMlB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQkB,GAAW+qB,GACzB,IAAK,MAAM/3B,KAAOgN,EAEd+I,GAAezR,EAAetE,GmFjBA2D,EnFgBaqJ,EAAOhN,GmFd/C6D,EAAkBF,GAAKA,EAAEA,EAAE7B,OAAS,IAAM,EAAI6B,IAFnBA,KnFmBtC,CkF2CiC60B,CAAUl0B,EAAeyzB,EAAc,GAC1D,IAGHtyB,CACX,CErEA,SAASgzB,GAAen0B,EAAeo0B,GAAuB,IAAdttB,EAAOtI,UAAAhB,OAAA,QAAAU,IAAAM,UAAA,GAAAA,UAAA,GAAG,CAAC,EACvD,IAAI8F,EACJ,MAAMod,EAAWnhB,EAAeP,EAAeo0B,EAA0B,SAAjBttB,EAAQjD,KACjB,QAAxCS,EAAKtE,EAAcq0B,uBAAoC,IAAP/vB,OAAgB,EAASA,EAAGhK,YAC7E4D,GACN,IAAI,WAAEoF,EAAatD,EAAcsyB,wBAA0B,CAAC,GAAM5Q,GAAY,CAAC,EAC3E5a,EAAQ0sB,qBACRlwB,EAAawD,EAAQ0sB,oBAMzB,MAAMc,EAAe5S,EACf,IAAMjgB,QAAQC,IAAI4xB,GAActzB,EAAe0hB,EAAU5a,IACzD,IAAMrF,QAAQwP,UAKdsjB,EAAqBv0B,EAAcw0B,iBAAmBx0B,EAAcw0B,gBAAgBx8B,KACpF,WAAsB,IAArBy8B,EAAYj2B,UAAAhB,OAAA,QAAAU,IAAAM,UAAA,GAAAA,UAAA,GAAG,EACd,MAAM,cAAEq0B,EAAgB,EAAC,gBAAEC,EAAe,iBAAEC,GAAsBzvB,EAClE,OAkBZ,SAAyBtD,EAAeo0B,GAAgF,IAAvEvB,EAAar0B,UAAAhB,OAAA,QAAAU,IAAAM,UAAA,GAAAA,UAAA,GAAG,EAAGs0B,EAAet0B,UAAAhB,OAAA,QAAAU,IAAAM,UAAA,GAAAA,UAAA,GAAG,EAAGu0B,EAAgBv0B,UAAAhB,OAAA,QAAAU,IAAAM,UAAA,GAAAA,UAAA,GAAG,EAAGsI,EAAOtI,UAAAhB,OAAA,EAAAgB,UAAA,QAAAN,EAClH,MAAMiD,EAAa,GACbuzB,GAAsB10B,EAAcw0B,gBAAgBx8B,KAAO,GAAK86B,EAChE6B,EAA+C,IAArB5B,EAC1B,WAAM,OAAJv0B,UAAAhB,OAAA,QAAAU,IAAAM,UAAA,GAAAA,UAAA,GAAG,GAAUs0B,CAAe,EAC9B,WAAM,OAAK4B,GAATl2B,UAAAhB,OAAA,QAAAU,IAAAM,UAAA,GAAAA,UAAA,GAAG,GAA+Bs0B,CAAe,EAUzD,OATAtzB,MAAMoF,KAAK5E,EAAcw0B,iBACpBI,KAAKC,IACLr5B,SAAQ,CAACQ,EAAOuB,KACjBvB,EAAMyS,OAAO,iBAAkB2lB,GAC/BjzB,EAAW9E,KAAK83B,GAAen4B,EAAOo4B,GAAO5sB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACtCV,GAAO,IACVqd,MAAO0O,EAAgB8B,EAAwBp3B,MAChD0F,MAAK,IAAMjH,EAAMyS,OAAO,oBAAqB2lB,KAAU,IAEvD3yB,QAAQC,IAAIP,EACvB,CAlCmB2zB,CAAgB90B,EAAeo0B,EAASvB,EAAgB4B,EAAc3B,EAAiBC,EAAkBjsB,EACpH,EACE,IAAMrF,QAAQwP,WAKd,KAAE0hB,GAASrvB,EACjB,GAAIqvB,EAAM,CACN,MAAOoC,EAAOC,GAAiB,mBAATrC,EAChB,CAAC2B,EAAcC,GACf,CAACA,EAAoBD,GAC3B,OAAOS,IAAQ9xB,MAAK,IAAM+xB,KAC9B,CAEI,OAAOvzB,QAAQC,IAAI,CAAC4yB,IAAgBC,EAAmBztB,EAAQqd,QAEvE,CAkBA,SAAS0Q,GAAgBpvB,EAAGC,GACxB,OAAOD,EAAEwvB,iBAAiBvvB,EAC9B,CC5DA,MAAMwvB,GAAkBx0B,EAAalD,OACrC,SAAS23B,GAAkBn1B,GACvB,IAAKA,EACD,OACJ,IAAKA,EAAco1B,sBAAuB,CACtC,MAAMl6B,EAAU8E,EAAcgI,QACxBmtB,GAAkBn1B,EAAcgI,SAChC,CAAC,EAIP,YAHoC9J,IAAhC8B,EAAcpI,MAAMwC,UACpBc,EAAQd,QAAU4F,EAAcpI,MAAMwC,SAEnCc,CACX,CACA,MAAMA,EAAU,CAAC,EACjB,IAAK,IAAIqC,EAAI,EAAGA,EAAI23B,GAAiB33B,IAAK,CACtC,MAAMob,EAAOjY,EAAanD,GACpB83B,EAAOr1B,EAAcpI,MAAM+gB,IAC7B7Y,EAAeu1B,KAAkB,IAATA,KACxBn6B,EAAQyd,GAAQ0c,EAExB,CACA,OAAOn6B,CACX,C,wCChBMo6B,GAAuB,IAAI70B,GAAsBysB,UACjDqI,GAAoB90B,EAAqBjD,OAC/C,SAASg4B,GAAYx1B,GACjB,OAAQmB,GAAeM,QAAQC,IAAIP,EAAWtE,KAAI/D,IAAA,IAAC,UAAE6I,EAAS,QAAEmF,GAAShO,EAAA,OCR7E,SAA8BkH,EAAeI,GAA0B,IAE/DuB,EAFiDmF,EAAOtI,UAAAhB,OAAA,QAAAU,IAAAM,UAAA,GAAAA,UAAA,GAAG,CAAC,EAGhE,GAFAwB,EAAcyO,OAAO,iBAAkBrO,GAEnCZ,MAAMC,QAAQW,GAAa,CAC3B,MAAMe,EAAaf,EAAWvD,KAAKu3B,GAAYD,GAAen0B,EAAeo0B,EAASttB,KACtFnF,EAAYF,QAAQC,IAAIP,EAC5B,MACK,GAA0B,kBAAff,EACZuB,EAAYwyB,GAAen0B,EAAeI,EAAY0G,OAErD,CACD,MAAM2uB,EAA2C,oBAAfr1B,EAC5BG,EAAeP,EAAeI,EAAY0G,EAAQxM,QAClD8F,EACNuB,EAAYF,QAAQC,IAAI4xB,GAActzB,EAAey1B,EAAoB3uB,GAC7E,CACA,OAAOnF,EAAUsB,MAAK,KAClBjD,EAAcyO,OAAO,oBAAqBrO,EAAW,GAE7D,CDXkFs1B,CAAqB11B,EAAe2B,EAAWmF,EAAQ,IACzI,CACA,SAAS6uB,GAAqB31B,GAC1B,IAAIwE,EAAUgxB,GAAYx1B,GACtBC,EAAQ21B,KACR94B,GAAkB,EAKtB,MAAM+4B,EAA2BhyB,GAAS,CAACoI,EAAK7L,KAC5C,IAAIkE,EACJ,MAAMod,EAAWnhB,EAAeP,EAAeI,EAAqB,SAATyD,EACZ,QAAxCS,EAAKtE,EAAcq0B,uBAAoC,IAAP/vB,OAAgB,EAASA,EAAGhK,YAC7E4D,GACN,GAAIwjB,EAAU,CACV,MAAM,WAAEpe,EAAU,cAAEmwB,GAA6B/R,EAAXhZ,GAAM2b,EAAAA,EAAAA,GAAK3C,EAAQ4C,IACzDrY,GAAGzE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQyE,GAAQvD,GAAW+qB,EAClC,CACA,OAAOxnB,CAAG,EAmBd,SAAS6pB,EAAeC,GACpB,MAAM,MAAEn+B,GAAUoI,EACZ9E,EAAUi6B,GAAkBn1B,EAAcgI,SAAW,CAAC,EAKtD7G,EAAa,GAKb60B,EAAc,IAAI1tB,IAMxB,IAAI2tB,EAAkB,CAAC,EAKnBC,EAAsBvyB,IAO1B,IAAK,IAAIpG,EAAI,EAAGA,EAAIg4B,GAAmBh4B,IAAK,CACxC,MAAMsG,EAAOyxB,GAAqB/3B,GAC5B44B,EAAYl2B,EAAM4D,GAClBwxB,OAAuBn3B,IAAhBtG,EAAMiM,GACbjM,EAAMiM,GACN3I,EAAQ2I,GACRuyB,EAAgBt2B,EAAeu1B,GAK/BgB,EAAcxyB,IAASkyB,EAAoBI,EAAUG,SAAW,MAClD,IAAhBD,IACAH,EAAsB34B,GAO1B,IAAIg5B,EAAclB,IAASn6B,EAAQ2I,IAC/BwxB,IAASz9B,EAAMiM,IACfuyB,EAeJ,GAXIG,GACAz5B,GACAkD,EAAcw2B,yBACdD,GAAc,GAMlBJ,EAAUhD,eAAa3rB,EAAAA,EAAAA,GAAA,GAAQyuB,IAI7BE,EAAUG,UAA4B,OAAhBD,IAElBhB,IAASc,EAAUM,UAErBr3B,EAAoBi2B,IACJ,mBAATA,EACP,SAOJ,MAAMqB,EAAmBC,GAAuBR,EAAUM,SAAUpB,GACpE,IAAIuB,EAAoBF,GAEnB7yB,IAASkyB,GACNI,EAAUG,WACTC,GACDH,GAEH74B,EAAI24B,GAAuBE,EAC5BS,GAAuB,EAK3B,MAAMC,EAAiBt3B,MAAMC,QAAQ41B,GAAQA,EAAO,CAACA,GAKrD,IAAI0B,EAAiBD,EAAe9qB,OAAO6pB,EAAwBhyB,GAAO,CAAC,IACvD,IAAhBwyB,IACAU,EAAiB,CAAC,GAUtB,MAAM,mBAAEC,EAAqB,CAAC,GAAMb,EAC9Bc,GAAOzvB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACNwvB,GACAD,GAEDG,EAAiBx7B,IACnBk7B,GAAoB,EAChBZ,EAAY53B,IAAI1C,KAChBm7B,GAAuB,EACvBb,EAAY36B,OAAOK,IAEvBy6B,EAAU/C,eAAe13B,IAAO,EAChC,MAAM8V,EAAcxR,EAAc2R,SAASjW,GACvC8V,IACAA,EAAY2lB,WAAY,EAAK,EAErC,IAAK,MAAMz7B,KAAOu7B,EAAS,CACvB,MAAMt3B,EAAOo3B,EAAer7B,GACtBkE,EAAOo3B,EAAmBt7B,GAEhC,GAAIu6B,EAAgB/gB,eAAexZ,GAC/B,SAIJ,IAAI07B,GAAkB,EAElBA,EADA73B,EAAkBI,IAASJ,EAAkBK,IAC1BF,EAAeC,EAAMC,GAGtBD,IAASC,EAE3Bw3B,OACal5B,IAATyB,GAA+B,OAATA,EAEtBu3B,EAAcx7B,GAIds6B,EAAY1sB,IAAI5N,QAGNwC,IAATyB,GAAsBq2B,EAAY53B,IAAI1C,GAK3Cw7B,EAAcx7B,GAOdy6B,EAAUhD,cAAcz3B,IAAO,CAEvC,CAKAy6B,EAAUM,SAAWpB,EACrBc,EAAUa,mBAAqBD,EAI3BZ,EAAUG,WACVL,GAAezuB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQyuB,GAAoBc,IAE3Cj6B,GAAmBkD,EAAcq3B,wBACjCT,GAAoB,GAQpBA,MAFyBL,GAAeG,IACIG,IAE5C11B,EAAW9E,QAAQy6B,EAAej6B,KAAK8E,IAAS,CAC5CA,UAAWA,EACXmF,QAAS,CAAEjD,YAGvB,CAMA,GAAImyB,EAAYh+B,KAAM,CAClB,MAAMs/B,EAAoB,CAAC,EAC3BtB,EAAYx6B,SAASE,IACjB,MAAM67B,EAAiBv3B,EAAcw3B,cAAc97B,GAC7C8V,EAAcxR,EAAc2R,SAASjW,GACvC8V,IACAA,EAAY2lB,WAAY,GAE5BG,EAAkB57B,GAA0B,OAAnB67B,QAA8C,IAAnBA,EAA4BA,EAAiB,IAAI,IAEzGp2B,EAAW9E,KAAK,CAAEsF,UAAW21B,GACjC,CACA,IAAIG,EAAgBl2B,QAAQJ,EAAW3D,QAOvC,OANIV,IACmB,IAAlBlF,EAAMwC,SAAqBxC,EAAMwC,UAAYxC,EAAM4M,SACnDxE,EAAcw2B,yBACfiB,GAAgB,GAEpB36B,GAAkB,EACX26B,EAAgBjzB,EAAQrD,GAAcM,QAAQwP,SACzD,CAkBA,MAAO,CACH6kB,iBACA4B,UAhBJ,SAAmB7zB,EAAMyyB,GACrB,IAAIhyB,EAEJ,GAAIrE,EAAM4D,GAAMyyB,WAAaA,EACzB,OAAO70B,QAAQwP,UAEsB,QAAxC3M,EAAKtE,EAAcw0B,uBAAoC,IAAPlwB,GAAyBA,EAAG9I,SAASQ,IAAY,IAAIsI,EAAI,OAAuC,QAA/BA,EAAKtI,EAAM23B,sBAAmC,IAAPrvB,OAAgB,EAASA,EAAGozB,UAAU7zB,EAAMyyB,EAAS,IAC9Mr2B,EAAM4D,GAAMyyB,SAAWA,EACvB,MAAMn1B,EAAa20B,EAAejyB,GAClC,IAAK,MAAMnI,KAAOuE,EACdA,EAAMvE,GAAKy3B,cAAgB,CAAC,EAEhC,OAAOhyB,CACX,EAIIw2B,mBAjQJ,SAA4BC,GACxBpzB,EAAUozB,EAAa53B,EAC3B,EAgQI4zB,SAAUA,IAAM3zB,EAChB43B,MAAOA,KACH53B,EAAQ21B,KACR94B,GAAkB,CAAI,EAGlC,CACA,SAAS65B,GAAuB/2B,EAAMD,GAClC,MAAoB,kBAATA,EACAA,IAASC,IAEXJ,MAAMC,QAAQE,KACXD,EAAeC,EAAMC,EAGrC,CACA,SAASk4B,KACL,MAAO,CACHxB,SAFyB93B,UAAAhB,OAAA,QAAAU,IAAAM,UAAA,IAAAA,UAAA,GAGzB20B,cAAe,CAAC,EAChBC,eAAgB,CAAC,EACjB4D,mBAAoB,CAAC,EAE7B,CACA,SAASpB,KACL,MAAO,CACHpxB,QAASszB,IAAgB,GACzBC,YAAaD,KACbE,WAAYF,KACZG,SAAUH,KACVI,UAAWJ,KACXK,WAAYL,KACZM,KAAMN,KAEd,CEzUA,MAAMO,GACFn3B,WAAAA,CAAYo3B,GACR3gC,KAAK4gC,WAAY,EACjB5gC,KAAK2gC,KAAOA,CAChB,CACArrB,MAAAA,GAAW,ECHf,IAAIlU,GAAK,ECCT,MAAMoI,GAAa,CACfQ,UAAW,CACP02B,QCDR,cAA+BA,GAM3Bn3B,WAAAA,CAAYo3B,GACRnW,MAAMmW,GACNA,EAAK3E,iBAAmB2E,EAAK3E,eAAiBgC,GAAqB2C,GACvE,CACAE,mCAAAA,GACI,MAAM,QAAEh0B,GAAY7M,KAAK2gC,KAAK93B,WAC1BpB,EAAoBoF,KACpB7M,KAAK8gC,gBAAkBj0B,EAAQjG,UAAU5G,KAAK2gC,MAEtD,CAIAI,KAAAA,GACI/gC,KAAK6gC,qCACT,CACAvrB,MAAAA,GACI,MAAM,QAAEzI,GAAY7M,KAAK2gC,KAAK93B,YACtBgE,QAASm0B,GAAgBhhC,KAAK2gC,KAAK7gC,WAAa,CAAC,EACrD+M,IAAYm0B,GACZhhC,KAAK6gC,qCAEb,CACAI,OAAAA,GACI,IAAIt0B,EACJ3M,KAAK2gC,KAAK3E,eAAekE,QACO,QAA/BvzB,EAAK3M,KAAK8gC,uBAAoC,IAAPn0B,GAAyBA,EAAG6Q,KAAKxd,KAC7E,ID9BAygC,KAAM,CACFC,QDLR,cAAmCA,GAC/Bn3B,WAAAA,GACIihB,SAAS3jB,WACT7G,KAAKoB,GAAKA,IACd,CACAkU,MAAAA,GACI,IAAKtV,KAAK2gC,KAAKjE,gBACX,OACJ,MAAM,UAAEt8B,EAAS,eAAEsC,GAAmB1C,KAAK2gC,KAAKjE,iBACxCt8B,UAAW8gC,GAAkBlhC,KAAK2gC,KAAKQ,qBAAuB,CAAC,EACvE,IAAKnhC,KAAK2gC,KAAK3E,gBAAkB57B,IAAc8gC,EAC3C,OAEJ,MAAME,EAAgBphC,KAAK2gC,KAAK3E,eAAe+D,UAAU,QAAS3/B,GAC9DsC,IAAmBtC,GACnBghC,EAAc91B,MAAK,IAAM5I,EAAe1C,KAAKoB,KAErD,CACA2/B,KAAAA,GACI,MAAM,SAAEt9B,GAAazD,KAAK2gC,KAAKjE,iBAAmB,CAAC,EAC/Cj5B,IACAzD,KAAKihC,QAAUx9B,EAASzD,KAAKoB,IAErC,CACA6/B,OAAAA,GAAY,KG3BhB,SAASI,GAAYtwB,EAAQ2H,EAAW7B,GAAsC,IAA7B1H,EAAOtI,UAAAhB,OAAA,QAAAU,IAAAM,UAAA,GAAAA,UAAA,GAAG,CAAEiJ,SAAS,GAElE,OADAiB,EAAOuB,iBAAiBoG,EAAW7B,EAAS1H,GACrC,IAAM4B,EAAOiB,oBAAoB0G,EAAW7B,EACvD,CCDA,SAASyqB,GAAiBpxB,GACtB,MAAO,CACHqxB,MAAO,CACHzyB,EAAGoB,EAAMsxB,MACTzyB,EAAGmB,EAAMuxB,OAGrB,CCNA,SAASC,GAAgB3wB,EAAQ2H,EAAW7B,EAAS1H,GACjD,OAAOkyB,GAAYtwB,EAAQ2H,EDMP7B,IACZ3G,GAAUK,EAAiBL,IAAU2G,EAAQ3G,EAAOoxB,GAAiBpxB,ICPvCyxB,CAAe9qB,GAAU1H,EACnE,CCLA,MAAMyU,GAAWA,CAAC9V,EAAGC,IAAMpK,KAAKgY,IAAI7N,EAAIC,GCWxC,MAAM6zB,GACFr4B,WAAAA,CAAY2G,EAAO2xB,GAAiF,IAAvE,mBAAE76B,EAAkB,cAAE86B,EAAa,iBAAEC,GAAmB,GAAQl7B,UAAAhB,OAAA,QAAAU,IAAAM,UAAA,GAAAA,UAAA,GAAG,CAAC,EAgE7F,GA5DA7G,KAAKyR,WAAa,KAIlBzR,KAAKgiC,cAAgB,KAIrBhiC,KAAKiiC,kBAAoB,KAIzBjiC,KAAK6hC,SAAW,CAAC,EAIjB7hC,KAAK8hC,cAAgB14B,OACrBpJ,KAAKkiC,YAAc,KACf,IAAMliC,KAAKgiC,gBAAiBhiC,KAAKiiC,kBAC7B,OACJ,MAAME,EAAOC,GAAWpiC,KAAKiiC,kBAAmBjiC,KAAKqiC,SAC/CC,EAAmC,OAApBtiC,KAAKyR,WAIpB8wB,EDxClB,SAAoBz0B,EAAGC,GAEnB,MAAMy0B,EAAS5e,GAAS9V,EAAEgB,EAAGf,EAAEe,GACzB2zB,EAAS7e,GAAS9V,EAAEiB,EAAGhB,EAAEgB,GAC/B,OAAOpL,KAAKuqB,KAAKsU,GAAU,EAAIC,GAAU,EAC7C,CCmC4CC,CAAWP,EAAKlM,OAAQ,CAAEnnB,EAAG,EAAGC,EAAG,KAAQ,EAC3E,IAAKuzB,IAAiBC,EAClB,OACJ,MAAM,MAAEhB,GAAUY,GACZ,UAAEluB,GAAcgB,GACtBjV,KAAKqiC,QAAQ39B,MAAImL,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAI0xB,GAAK,IAAEttB,eAC9B,MAAM,QAAE0uB,EAAO,OAAEC,GAAW5iC,KAAK6hC,SAC5BS,IACDK,GAAWA,EAAQ3iC,KAAKgiC,cAAeG,GACvCniC,KAAKyR,WAAazR,KAAKgiC,eAE3BY,GAAUA,EAAO5iC,KAAKgiC,cAAeG,EAAK,EAE9CniC,KAAK6iC,kBAAoB,CAAC3yB,EAAOiyB,KAC7BniC,KAAKgiC,cAAgB9xB,EACrBlQ,KAAKiiC,kBAAoBa,GAAeX,EAAMniC,KAAKgH,oBAEnD+O,GAAMT,OAAOtV,KAAKkiC,aAAa,EAAK,EAExCliC,KAAK+iC,gBAAkB,CAAC7yB,EAAOiyB,KAC3BniC,KAAKgjC,MACL,MAAM,MAAEC,EAAK,aAAEC,EAAY,gBAAEC,GAAoBnjC,KAAK6hC,SAGtD,GAFI7hC,KAAK+hC,kBACLoB,GAAmBA,KACjBnjC,KAAKgiC,gBAAiBhiC,KAAKiiC,kBAC7B,OACJ,MAAMmB,EAAUhB,GAA0B,kBAAflyB,EAAMhE,KAC3BlM,KAAKiiC,kBACLa,GAAeX,EAAMniC,KAAKgH,oBAAqBhH,KAAKqiC,SACtDriC,KAAKyR,YAAcwxB,GACnBA,EAAM/yB,EAAOkzB,GAEjBF,GAAgBA,EAAahzB,EAAOkzB,EAAQ,GAG3C7yB,EAAiBL,GAClB,OACJlQ,KAAK+hC,iBAAmBA,EACxB/hC,KAAK6hC,SAAWA,EAChB7hC,KAAKgH,mBAAqBA,EAC1BhH,KAAK8hC,cAAgBA,GAAiB14B,OACtC,MACMi6B,EAAcP,GADPxB,GAAiBpxB,GACWlQ,KAAKgH,qBACxC,MAAEu6B,GAAU8B,GACZ,UAAEpvB,GAAcgB,GACtBjV,KAAKqiC,QAAU,EAAAxyB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAM0xB,GAAK,IAAEttB,eAC5B,MAAM,eAAEqvB,GAAmBzB,EAC3ByB,GACIA,EAAepzB,EAAOkyB,GAAWiB,EAAarjC,KAAKqiC,UACvDriC,KAAKujC,gBAAkB3U,GAAK8S,GAAgB1hC,KAAK8hC,cAAe,cAAe9hC,KAAK6iC,mBAAoBnB,GAAgB1hC,KAAK8hC,cAAe,YAAa9hC,KAAK+iC,iBAAkBrB,GAAgB1hC,KAAK8hC,cAAe,gBAAiB9hC,KAAK+iC,iBAC9O,CACAS,cAAAA,CAAe3B,GACX7hC,KAAK6hC,SAAWA,CACpB,CACAmB,GAAAA,GACIhjC,KAAKujC,iBAAmBvjC,KAAKujC,kBAC7BvtB,GAAYhW,KAAKkiC,YACrB,EAEJ,SAASY,GAAeX,EAAMn7B,GAC1B,OAAOA,EAAqB,CAAEu6B,MAAOv6B,EAAmBm7B,EAAKZ,QAAWY,CAC5E,CACA,SAASsB,GAAc31B,EAAGC,GACtB,MAAO,CAAEe,EAAGhB,EAAEgB,EAAIf,EAAEe,EAAGC,EAAGjB,EAAEiB,EAAIhB,EAAEgB,EACtC,CACA,SAASqzB,GAAUjhC,EAAYkhC,GAAS,IAApB,MAAEd,GAAOpgC,EACzB,MAAO,CACHogC,QACAvtB,MAAOyvB,GAAclC,EAAOmC,GAAgBrB,IAC5CpM,OAAQwN,GAAclC,EAAOoC,GAAiBtB,IAC9C35B,SAAUH,GAAY85B,EAAS,IAEvC,CACA,SAASsB,GAAiBtB,GACtB,OAAOA,EAAQ,EACnB,CACA,SAASqB,GAAgBrB,GACrB,OAAOA,EAAQA,EAAQx8B,OAAS,EACpC,CACA,SAAS0C,GAAY85B,EAASuB,GAC1B,GAAIvB,EAAQx8B,OAAS,EACjB,MAAO,CAAEiJ,EAAG,EAAGC,EAAG,GAEtB,IAAInJ,EAAIy8B,EAAQx8B,OAAS,EACrBg+B,EAAmB,KACvB,MAAMC,EAAYJ,GAAgBrB,GAClC,KAAOz8B,GAAK,IACRi+B,EAAmBxB,EAAQz8B,KACvBk+B,EAAU7vB,UAAY4vB,EAAiB5vB,UACvCjB,EAAsB4wB,MAG1Bh+B,IAEJ,IAAKi+B,EACD,MAAO,CAAE/0B,EAAG,EAAGC,EAAG,GAEtB,MAAMrE,EAAOwI,EAAsB4wB,EAAU7vB,UAAY4vB,EAAiB5vB,WAC1E,GAAa,IAATvJ,EACA,MAAO,CAAEoE,EAAG,EAAGC,EAAG,GAEtB,MAAMykB,EAAkB,CACpB1kB,GAAIg1B,EAAUh1B,EAAI+0B,EAAiB/0B,GAAKpE,EACxCqE,GAAI+0B,EAAU/0B,EAAI80B,EAAiB90B,GAAKrE,GAQ5C,OANI8oB,EAAgB1kB,IAAM9C,MACtBwnB,EAAgB1kB,EAAI,GAEpB0kB,EAAgBzkB,IAAM/C,MACtBwnB,EAAgBzkB,EAAI,GAEjBykB,CACX,CCzJA,SAASuQ,GAAYziC,GACjB,OAAQA,GACW,kBAARA,GACP+b,OAAOC,UAAUC,eAAeC,KAAKlc,EAAK,UAClD,CCIA,SAAS0iC,GAAWC,GAChB,OAAOA,EAAKn5B,IAAMm5B,EAAKruB,GAC3B,CAIA,SAASsuB,GAAclwB,EAAOqM,EAAQtP,GAAsB,IAAd4Z,EAAM9jB,UAAAhB,OAAA,QAAAU,IAAAM,UAAA,GAAAA,UAAA,GAAG,GACnDmN,EAAM2W,OAASA,EACf3W,EAAMmwB,YAAcxW,GAAUtN,EAAOzK,IAAKyK,EAAOvV,IAAKkJ,EAAM2W,QAC5D3W,EAAM4I,MAAQonB,GAAWjzB,GAAUizB,GAAW3jB,GAC9CrM,EAAMowB,UACFzW,GAAU5c,EAAO6E,IAAK7E,EAAOjG,IAAKkJ,EAAM2W,QAAU3W,EAAMmwB,aACvDnwB,EAAM4I,OAjBG,OAiBmB5I,EAAM4I,OAhBzB,QAiBVzE,MAAMnE,EAAM4I,UACZ5I,EAAM4I,MAAQ,IAEb5I,EAAMowB,YAlBO,KAmBdpwB,EAAMowB,WAlBQ,KAmBdjsB,MAAMnE,EAAMowB,cACZpwB,EAAMowB,UAAY,EAE1B,CACA,SAASC,GAAarwB,EAAOqM,EAAQtP,EAAQ4Z,GACzCuZ,GAAclwB,EAAMlF,EAAGuR,EAAOvR,EAAGiC,EAAOjC,EAAG6b,EAASA,EAAOxG,aAAU5d,GACrE29B,GAAclwB,EAAMjF,EAAGsR,EAAOtR,EAAGgC,EAAOhC,EAAG4b,EAASA,EAAOvG,aAAU7d,EACzE,CACA,SAAS+9B,GAAiBvzB,EAAQwzB,EAAUl0B,GACxCU,EAAO6E,IAAMvF,EAAOuF,IAAM2uB,EAAS3uB,IACnC7E,EAAOjG,IAAMiG,EAAO6E,IAAMouB,GAAWO,EACzC,CAKA,SAASC,GAAyBzzB,EAAQ0zB,EAAQp0B,GAC9CU,EAAO6E,IAAM6uB,EAAO7uB,IAAMvF,EAAOuF,IACjC7E,EAAOjG,IAAMiG,EAAO6E,IAAMouB,GAAWS,EACzC,CACA,SAASC,GAAqB3zB,EAAQ0zB,EAAQp0B,GAC1Cm0B,GAAyBzzB,EAAOjC,EAAG21B,EAAO31B,EAAGuB,EAAOvB,GACpD01B,GAAyBzzB,EAAOhC,EAAG01B,EAAO11B,EAAGsB,EAAOtB,EACxD,CCnBA,SAAS41B,GAA4BV,EAAMruB,EAAK9K,GAC5C,MAAO,CACH8K,SAAarP,IAARqP,EAAoBquB,EAAKruB,IAAMA,OAAMrP,EAC1CuE,SAAavE,IAARuE,EACCm5B,EAAKn5B,IAAMA,GAAOm5B,EAAKn5B,IAAMm5B,EAAKruB,UAClCrP,EAEd,CAcA,SAASq+B,GAA4BC,EAAYC,GAC7C,IAAIlvB,EAAMkvB,EAAgBlvB,IAAMivB,EAAWjvB,IACvC9K,EAAMg6B,EAAgBh6B,IAAM+5B,EAAW/5B,IAO3C,OAJIg6B,EAAgBh6B,IAAMg6B,EAAgBlvB,IACtCivB,EAAW/5B,IAAM+5B,EAAWjvB,OAC3BA,EAAK9K,GAAO,CAACA,EAAK8K,IAEhB,CAAEA,MAAK9K,MAClB,CAuCA,MAAMi6B,GAAiB,IAgBvB,SAASC,GAAmBC,EAAaC,EAAUC,GAC/C,MAAO,CACHvvB,IAAKwvB,GAAoBH,EAAaC,GACtCp6B,IAAKs6B,GAAoBH,EAAaE,GAE9C,CACA,SAASC,GAAoBH,EAAaI,GACtC,MAA8B,kBAAhBJ,EACRA,EACAA,EAAYI,IAAU,CAChC,CC9HA,MAWMC,GAAYA,KAAA,CACdx2B,EAFe,CAAS8G,IAAK,EAAG9K,IAAK,GAGrCiE,EAHe,CAAS6G,IAAK,EAAG9K,IAAK,KCVzC,SAASy6B,GAASt8B,GACd,MAAO,CAACA,EAAS,KAAMA,EAAS,KACpC,CCGA,SAASu8B,GAAuBrkC,GAAgC,IAA/B,IAAER,EAAG,KAAEE,EAAI,MAAEshB,EAAK,OAAEC,GAASjhB,EAC1D,MAAO,CACH2N,EAAG,CAAE8G,IAAK/U,EAAMiK,IAAKqX,GACrBpT,EAAG,CAAE6G,IAAKjV,EAAKmK,IAAKsX,GAE5B,CCVA,SAASqjB,GAAgB7oB,GACrB,YAAiBrW,IAAVqW,GAAiC,IAAVA,CAClC,CACA,SAAS8oB,GAAQvkC,GAA4B,IAA3B,MAAEyb,EAAK,OAAE0G,EAAM,OAAEC,GAAQpiB,EACvC,OAASskC,GAAgB7oB,KACpB6oB,GAAgBniB,KAChBmiB,GAAgBliB,EACzB,CACA,SAASoiB,GAAariC,GAClB,OAAQoiC,GAASpiC,IACbsiC,GAAetiC,IACfA,EAAO0gB,GACP1gB,EAAO4f,QACP5f,EAAO6f,SACP7f,EAAO8f,SACP9f,EAAOogB,OACPpgB,EAAOqgB,KACf,CACA,SAASiiB,GAAetiC,GACpB,OAAOuiC,GAAcviC,EAAOwL,IAAM+2B,GAAcviC,EAAOyL,EAC3D,CACA,SAAS82B,GAAc3hC,GACnB,OAAOA,GAAmB,OAAVA,CACpB,CCjBA,SAAS4hC,GAAWvE,EAAO3kB,EAAOunB,GAG9B,OAAOA,EADQvnB,GADY2kB,EAAQ4C,EAGvC,CAIA,SAAS4B,GAAgBxE,EAAO6C,EAAWxnB,EAAOunB,EAAa6B,GAI3D,YAHiBz/B,IAAby/B,IACAzE,EAAQuE,GAAWvE,EAAOyE,EAAU7B,IAEjC2B,GAAWvE,EAAO3kB,EAAOunB,GAAeC,CACnD,CAIA,SAAS6B,GAAehC,GAAuD,IAAjDG,EAASv9B,UAAAhB,OAAA,QAAAU,IAAAM,UAAA,GAAAA,UAAA,GAAG,EAAG+V,EAAK/V,UAAAhB,OAAA,QAAAU,IAAAM,UAAA,GAAAA,UAAA,GAAG,EAAGs9B,EAAWt9B,UAAAhB,OAAA,EAAAgB,UAAA,QAAAN,EAAEy/B,EAAQn/B,UAAAhB,OAAA,EAAAgB,UAAA,QAAAN,EACzE09B,EAAKruB,IAAMmwB,GAAgB9B,EAAKruB,IAAKwuB,EAAWxnB,EAAOunB,EAAa6B,GACpE/B,EAAKn5B,IAAMi7B,GAAgB9B,EAAKn5B,IAAKs5B,EAAWxnB,EAAOunB,EAAa6B,EACxE,CAIA,SAASE,GAAcC,EAAGhlC,GAAY,IAAV,EAAE2N,EAAC,EAAEC,GAAG5N,EAChC8kC,GAAeE,EAAIr3B,EAAGA,EAAEs1B,UAAWt1B,EAAE8N,MAAO9N,EAAEq1B,aAC9C8B,GAAeE,EAAIp3B,EAAGA,EAAEq1B,UAAWr1B,EAAE6N,MAAO7N,EAAEo1B,YAClD,CACA,MAAMiC,GAAsB,cACtBC,GAAsB,gBA6D5B,SAASC,GAAcrC,EAAMrgB,GACzBqgB,EAAKruB,IAAMquB,EAAKruB,IAAMgO,EACtBqgB,EAAKn5B,IAAMm5B,EAAKn5B,IAAM8Y,CAC1B,CAMA,SAAS2iB,GAActC,EAAMuC,EAAeC,EAAWT,GAA4B,IAAlBU,EAAU7/B,UAAAhB,OAAA,QAAAU,IAAAM,UAAA,GAAAA,UAAA,GAAG,GAG1Eo/B,GAAehC,EAAMuC,EAAeC,EAFhB9Y,GAAUsW,EAAKruB,IAAKquB,EAAKn5B,IAAK47B,GAEUV,EAChE,CAIA,SAASW,GAAaR,EAAKzpB,GACvB6pB,GAAcJ,EAAIr3B,EAAG4N,EAAU5N,EAAG4N,EAAU4G,OAAQ5G,EAAUE,MAAOF,EAAUyH,SAC/EoiB,GAAcJ,EAAIp3B,EAAG2N,EAAU3N,EAAG2N,EAAU6G,OAAQ7G,EAAUE,MAAOF,EAAU0H,QACnF,CCjHA,SAASgH,GAAmBwb,EAAU9D,GAClC,OAAO0C,GHeX,SAA4BjE,EAAOuB,GAC/B,IAAKA,EACD,OAAOvB,EACX,MAAMsF,EAAU/D,EAAe,CAAEh0B,EAAGyyB,EAAM1gC,KAAMkO,EAAGwyB,EAAM5gC,MACnDmmC,EAAchE,EAAe,CAAEh0B,EAAGyyB,EAAMpf,MAAOpT,EAAGwyB,EAAMnf,SAC9D,MAAO,CACHzhB,IAAKkmC,EAAQ93B,EACblO,KAAMgmC,EAAQ/3B,EACdsT,OAAQ0kB,EAAY/3B,EACpBoT,MAAO2kB,EAAYh4B,EAE3B,CG1BmCi4B,CAAmBH,EAASI,wBAAyBlE,GACxF,CCJA,MAAMmE,GAAmB9lC,IAAiB,IAAhB,QAAEhB,GAASgB,EACjC,OAAOhB,EAAUA,EAAQ+mC,cAAcC,YAAc,IAAI,ECkBvDC,GAAsB,IAAIC,QAKhC,MAAMC,GACF/9B,WAAAA,CAAYlB,GACRrI,KAAKunC,aAAe,KACpBvnC,KAAK6O,YAAa,EAClB7O,KAAKwnC,iBAAmB,KACxBxnC,KAAKmkC,YAAc,CAAEr1B,EAAG,EAAGC,EAAG,GAI9B/O,KAAKynC,aAAc,EACnBznC,KAAK0nC,uBAAwB,EAI7B1nC,KAAK2nC,QP5BK,CACd74B,EAFe,CAAS8G,IAAK,EAAG9K,IAAK,GAGrCiE,EAHe,CAAS6G,IAAK,EAAG9K,IAAK,IO8BjC9K,KAAKqI,cAAgBA,CACzB,CACAV,KAAAA,CAAMigC,GAA4C,IAA/B,aAAEC,GAAe,GAAOhhC,UAAAhB,OAAA,QAAAU,IAAAM,UAAA,GAAAA,UAAA,GAAG,CAAC,EAI3C,MAAM,gBAAE61B,GAAoB18B,KAAKqI,cACjC,GAAIq0B,IAAiD,IAA9BA,EAAgBt8B,UACnC,OACJ,MA6FM,iBAAE2hC,GAAqB/hC,KAAK6I,WAClC7I,KAAK8nC,WAAa,IAAIlG,GAAWgG,EAAa,CAC1CtE,eA/FoBpzB,IACpB,MAAM,iBAAE6xB,GAAqB/hC,KAAK6I,WAGlCk5B,EAAmB/hC,KAAK+nC,iBAAmB/nC,KAAKgoC,gBAC5CH,GACA7nC,KAAK6nC,aAAavG,GAAiBpxB,GAAOqxB,MAC9C,EAyFAoB,QAvFYA,CAACzyB,EAAOiyB,KAEpB,MAAM,KAAE8F,EAAI,gBAAEC,EAAe,YAAEC,GAAgBnoC,KAAK6I,WACpD,GAAIo/B,IAASC,IACLloC,KAAKunC,cACLvnC,KAAKunC,eACTvnC,KAAKunC,aC7DJ,OADItD,ED8D2BgE,IC7Df,MAAThE,EACZp1B,EAAWo1B,GACJ,MAGPp1B,EAAWo1B,IAAQ,EACZ,KACHp1B,EAAWo1B,IAAQ,CAAK,GAK5Bp1B,EAAWC,GAAKD,EAAWE,EACpB,MAGPF,EAAWC,EAAID,EAAWE,GAAI,EACvB,KACHF,EAAWC,EAAID,EAAWE,GAAI,CAAK,ID6C9B/O,KAAKunC,cACN,OCjEpB,IAAqBtD,EDmETjkC,KAAK6O,YAAa,EAClB7O,KAAKwnC,iBAAmB,KACxBxnC,KAAKooC,qBACDpoC,KAAKqI,cAAcggC,aACnBroC,KAAKqI,cAAcggC,WAAWC,oBAAqB,EACnDtoC,KAAKqI,cAAcggC,WAAWt3B,YAASxK,GAK3Cg/B,IAAUtB,IACN,IAAI9jC,EAAUH,KAAKuoC,mBAAmBtE,GAAMl+B,OAAS,EAIrD,GAAI+Y,GAAQxC,KAAKnc,GAAU,CACvB,MAAM,WAAEkoC,GAAeroC,KAAKqI,cAC5B,GAAIggC,GAAcA,EAAW5D,OAAQ,CACjC,MAAM+D,EAAeH,EAAW5D,OAAOgE,UAAUxE,GACjD,GAAIuE,EAAc,CAEdroC,EADe6jC,GAAWwE,IACNpwB,WAAWjY,GAAW,IAC9C,CACJ,CACJ,CACAH,KAAKmkC,YAAYF,GAAQ9jC,CAAO,IAGhCgoC,GACApyB,GAAMP,YAAW,IAAM2yB,EAAYj4B,EAAOiyB,KAE9ChoB,GAAqBna,KAAKqI,cAAe,aACzC,MAAM,eAAE2zB,GAAmBh8B,KAAKqI,cAChC2zB,GAAkBA,EAAe+D,UAAU,aAAa,EAAK,EA4C7D6C,OA1CWA,CAAC1yB,EAAOiyB,KAEnB,MAAM,gBAAE+F,EAAe,kBAAEQ,EAAiB,gBAAEC,EAAe,OAAEC,GAAY5oC,KAAK6I,WAE9E,IAAKq/B,IAAoBloC,KAAKunC,aAC1B,OACJ,MAAM,OAAEtR,GAAWkM,EAEnB,GAAIuG,GAA+C,OAA1B1oC,KAAKwnC,iBAM1B,OALAxnC,KAAKwnC,iBAuWrB,SAA6BvR,GAA4B,IAApB4S,EAAahiC,UAAAhB,OAAA,QAAAU,IAAAM,UAAA,GAAAA,UAAA,GAAG,GAC7CkzB,EAAY,KACZp2B,KAAKgY,IAAIsa,EAAOlnB,GAAK85B,EACrB9O,EAAY,IAEPp2B,KAAKgY,IAAIsa,EAAOnnB,GAAK+5B,IAC1B9O,EAAY,KAEhB,OAAOA,CACX,CAhXwC+O,CAAoB7S,QAEd,OAA1Bj2B,KAAKwnC,kBACLmB,GAAmBA,EAAgB3oC,KAAKwnC,mBAKhDxnC,KAAK+oC,WAAW,IAAK5G,EAAKZ,MAAOtL,GACjCj2B,KAAK+oC,WAAW,IAAK5G,EAAKZ,MAAOtL,GAOjCj2B,KAAKqI,cAAcrH,SAKnB4nC,GAAUA,EAAO14B,EAAOiyB,EAAK,EAa7Be,aAXiBA,CAAChzB,EAAOiyB,IAASniC,KAAKyJ,KAAKyG,EAAOiyB,GAYnDgB,gBAXoBA,IAAMoC,IAAUtB,IACpC,IAAIt3B,EACJ,MAAwC,WAAjC3M,KAAKgpC,kBAAkB/E,KAC0B,QAAlDt3B,EAAK3M,KAAKuoC,mBAAmBtE,GAAMj6B,iBAA8B,IAAP2C,OAAgB,EAASA,EAAGzB,OAAO,KASpG,CACClE,mBAAoBhH,KAAKqI,cAAc4gC,wBACvClH,mBACAD,cAAemF,GAAiBjnC,KAAKqI,gBAE7C,CACAoB,IAAAA,CAAKyG,EAAOiyB,GACR,MAAMtzB,EAAa7O,KAAK6O,WAExB,GADA7O,KAAKyK,UACAoE,EACD,OACJ,MAAM,SAAEnG,GAAay5B,EACrBniC,KAAKqZ,eAAe3Q,GACpB,MAAM,UAAEwgC,GAAclpC,KAAK6I,WACvBqgC,GACAnzB,GAAMP,YAAW,IAAM0zB,EAAUh5B,EAAOiyB,IAEhD,CACA13B,MAAAA,GACIzK,KAAK6O,YAAa,EAClB,MAAM,WAAEw5B,EAAU,eAAErM,GAAmBh8B,KAAKqI,cACxCggC,IACAA,EAAWC,oBAAqB,GAEpCtoC,KAAK8nC,YAAc9nC,KAAK8nC,WAAW9E,MACnChjC,KAAK8nC,gBAAavhC,EAClB,MAAM,gBAAE2hC,GAAoBloC,KAAK6I,YAC5Bq/B,GAAmBloC,KAAKunC,eACzBvnC,KAAKunC,eACLvnC,KAAKunC,aAAe,MAExBvL,GAAkBA,EAAe+D,UAAU,aAAa,EAC5D,CACAgJ,UAAAA,CAAW9E,EAAMkF,EAAQlT,GACrB,MAAM,KAAEgS,GAASjoC,KAAK6I,WAEtB,IAAKotB,IAAWmT,GAAWnF,EAAMgE,EAAMjoC,KAAKwnC,kBACxC,OACJ,MAAM6B,EAAYrpC,KAAKuoC,mBAAmBtE,GAC1C,IAAIj8B,EAAOhI,KAAKmkC,YAAYF,GAAQhO,EAAOgO,GAEvCjkC,KAAKynC,aAAeznC,KAAKynC,YAAYxD,KACrCj8B,ERrLZ,SAA0Bu5B,EAAKpgC,EAAgBwmC,GAAS,IAAvB,IAAE/xB,EAAG,IAAE9K,GAAK3J,EAazC,YAZYoF,IAARqP,GAAqB2rB,EAAQ3rB,EAE7B2rB,EAAQoG,EACFha,GAAU/X,EAAK2rB,EAAOoG,EAAQ/xB,KAC9BjS,KAAKmH,IAAIy2B,EAAO3rB,QAETrP,IAARuE,GAAqBy2B,EAAQz2B,IAElCy2B,EAAQoG,EACFha,GAAU7iB,EAAKy2B,EAAOoG,EAAQ78B,KAC9BnH,KAAKiS,IAAI2rB,EAAOz2B,IAEnBy2B,CACX,CQuKmB+H,CAAiBthC,EAAMhI,KAAKynC,YAAYxD,GAAOjkC,KAAK2nC,QAAQ1D,KAEvEoF,EAAUjmC,IAAI4E,EAClB,CACAogC,kBAAAA,GACI,IAAIz7B,EACJ,MAAM,gBAAE48B,EAAe,YAAEtE,GAAgBjlC,KAAK6I,WACxC47B,EAASzkC,KAAKqI,cAAcggC,aAC7BroC,KAAKqI,cAAcggC,WAAW5D,OAC7BzkC,KAAKqI,cAAcggC,WAAWmB,SAAQ,GACG,QAAxC78B,EAAK3M,KAAKqI,cAAcggC,kBAA+B,IAAP17B,OAAgB,EAASA,EAAG83B,OAC7EgF,EAAkBzpC,KAAKynC,YACzB8B,GAAmBxF,GAAYwF,GAC1BvpC,KAAKynC,cACNznC,KAAKynC,YAAcznC,KAAK0pC,yBAKxB1pC,KAAKynC,eADL8B,IAAmB9E,IRvKnC,SAAiCgE,EAASniB,GAAgC,IAA9B,IAAE3lB,EAAG,KAAEE,EAAI,OAAEuhB,EAAM,MAAED,GAAOmE,EACpE,MAAO,CACHxX,EAAG61B,GAA4B8D,EAAU35B,EAAGjO,EAAMshB,GAClDpT,EAAG41B,GAA4B8D,EAAU15B,EAAGpO,EAAKyhB,GAEzD,CQmKmCunB,CAAwBlF,EAAOgE,UAAWc,GAMrEvpC,KAAK2nC,QRhHb,WAA0D,IAA9B1C,EAAWp+B,UAAAhB,OAAA,QAAAU,IAAAM,UAAA,GAAAA,UAAA,GAAGk+B,GAOtC,OANoB,IAAhBE,EACAA,EAAc,GAEO,IAAhBA,IACLA,EAAcF,IAEX,CACHj2B,EAAGk2B,GAAmBC,EAAa,OAAQ,SAC3Cl2B,EAAGi2B,GAAmBC,EAAa,MAAO,UAElD,CQqGuB2E,CAAmB3E,GAK9BwE,IAAoBzpC,KAAKynC,aACzBhD,GACAzkC,KAAKynC,cACJznC,KAAK0nC,uBACNnC,IAAUtB,KACmB,IAArBjkC,KAAKynC,aACLznC,KAAKuoC,mBAAmBtE,KACxBjkC,KAAKynC,YAAYxD,GR1IrC,SAA+BQ,EAAQgD,GACnC,MAAMoC,EAAsB,CAAC,EAO7B,YANwBtjC,IAApBkhC,EAAY7xB,MACZi0B,EAAoBj0B,IAAM6xB,EAAY7xB,IAAM6uB,EAAO7uB,UAE/BrP,IAApBkhC,EAAY38B,MACZ++B,EAAoB/+B,IAAM28B,EAAY38B,IAAM25B,EAAO7uB,KAEhDi0B,CACX,CQiI6CC,CAAsBrF,EAAOgE,UAAUxE,GAAOjkC,KAAKynC,YAAYxD,IAC5F,GAGZ,CACAyF,qBAAAA,GACI,MAAQH,gBAAiB9B,EAAW,yBAAEsC,GAA6B/pC,KAAK6I,WACxE,IAAK4+B,IAAgB1D,GAAY0D,GAC7B,OAAO,EACX,MAAMuC,EAAqBvC,EAAYtnC,QACvC4oB,GAAiC,OAAvBihB,EAA6B,0GACvC,MAAM,WAAE3B,GAAeroC,KAAKqI,cAE5B,IAAKggC,IAAeA,EAAW5D,OAC3B,OAAO,EACX,MAAMwF,EF7Od,SAAwBlqC,EAASmqC,EAAoBljC,GACjD,MAAMmjC,EAAc/e,GAAmBrrB,EAASiH,IAC1C,OAAEojC,GAAWF,EAKnB,OAJIE,IACA9D,GAAc6D,EAAYr7B,EAAGs7B,EAAOnU,OAAOnnB,GAC3Cw3B,GAAc6D,EAAYp7B,EAAGq7B,EAAOnU,OAAOlnB,IAExCo7B,CACX,CEqO+BE,CAAeL,EAAoB3B,EAAW74B,KAAMxP,KAAKqI,cAAc4gC,yBAC9F,IAAIqB,ERnLZ,SAAiC7B,EAAWwB,GACxC,MAAO,CACHn7B,EAAG81B,GAA4B6D,EAAU35B,EAAGm7B,EAAen7B,GAC3DC,EAAG61B,GAA4B6D,EAAU15B,EAAGk7B,EAAel7B,GAEnE,CQ8KkCw7B,CAAwBlC,EAAW5D,OAAOgE,UAAWwB,GAK/E,GAAIF,EAA0B,CAC1B,MAAMS,EAAkBT,EL/OpC,SAAgCzjB,GAAW,IAAV,EAAExX,EAAC,EAAEC,GAAGuX,EACrC,MAAO,CAAE3lB,IAAKoO,EAAE6G,IAAKuM,MAAOrT,EAAEhE,IAAKsX,OAAQrT,EAAEjE,IAAKjK,KAAMiO,EAAE8G,IAC9D,CK6O6D60B,CAAwBH,IACzEtqC,KAAK0nC,wBAA0B8C,EAC3BA,IACAF,EAAsB9E,GAAwBgF,GAEtD,CACA,OAAOF,CACX,CACAjxB,cAAAA,CAAe3Q,GACX,MAAM,KAAEu/B,EAAI,aAAEyC,EAAY,YAAEzF,EAAW,eAAE0F,EAAc,iBAAE5I,EAAgB,oBAAE6I,GAAyB5qC,KAAK6I,WACnG4+B,EAAcznC,KAAKynC,aAAe,CAAC,EACnCoD,EAAqBtF,IAAUtB,IACjC,IAAKmF,GAAWnF,EAAMgE,EAAMjoC,KAAKwnC,kBAC7B,OAEJ,IAAI77B,EAAc87B,GAAeA,EAAYxD,IAAU,CAAC,EACpDlC,IACAp2B,EAAa,CAAEiK,IAAK,EAAG9K,IAAK,IAOhC,MAAMipB,EAAkBkR,EAAc,IAAM,IACtCnR,EAAgBmR,EAAc,GAAK,IACnCtR,GAAO9jB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACT3D,KAAM,UACNxD,SAAUgiC,EAAehiC,EAASu7B,GAAQ,EAC1ClQ,kBACAD,gBACAD,aAAc,IACd/C,UAAW,EACXF,UAAW,IACR+Z,GACAh/B,GAKP,OAAO3L,KAAK8qC,wBAAwB7G,EAAMtQ,EAAQ,IAGtD,OAAO7pB,QAAQC,IAAI8gC,GAAoBv/B,KAAKs/B,EAChD,CACAE,uBAAAA,CAAwB7G,EAAMt4B,GAC1B,MAAM09B,EAAYrpC,KAAKuoC,mBAAmBtE,GAE1C,OADA9pB,GAAqBna,KAAKqI,cAAe47B,GAClCoF,EAAU1hC,MAAMkzB,GAAmBoJ,EAAMoF,EAAW,EAAG19B,EAAY3L,KAAKqI,eAAe,GAClG,CACA2/B,aAAAA,GACIzC,IAAUtB,GAASjkC,KAAKuoC,mBAAmBtE,GAAMx6B,QACrD,CACAs+B,cAAAA,GACIxC,IAAUtB,IAAW,IAAIt3B,EAAI,OAA0D,QAAlDA,EAAK3M,KAAKuoC,mBAAmBtE,GAAMj6B,iBAA8B,IAAP2C,OAAgB,EAASA,EAAGxB,OAAO,GACtI,CACA69B,iBAAAA,CAAkB/E,GACd,IAAIt3B,EACJ,OAA0D,QAAlDA,EAAK3M,KAAKuoC,mBAAmBtE,GAAMj6B,iBAA8B,IAAP2C,OAAgB,EAASA,EAAGrE,KAClG,CAOAigC,kBAAAA,CAAmBtE,GACf,MAAM8G,EAAU,QAAH1oC,OAAW4hC,EAAK+G,eACvB/qC,EAAQD,KAAKqI,cAAcQ,WAC3BoiC,EAAsBhrC,EAAM8qC,GAClC,OAAOE,GAEDjrC,KAAKqI,cAAc2R,SAASiqB,GAAOhkC,EAAMwC,QACrCxC,EAAMwC,QAAQwhC,QACd19B,IAAc,EAC5B,CACAshC,YAAAA,CAAatG,GACTgE,IAAUtB,IACN,MAAM,KAAEgE,GAASjoC,KAAK6I,WAEtB,IAAKugC,GAAWnF,EAAMgE,EAAMjoC,KAAKwnC,kBAC7B,OACJ,MAAM,WAAEa,GAAeroC,KAAKqI,cACtBghC,EAAYrpC,KAAKuoC,mBAAmBtE,GAC1C,GAAIoE,GAAcA,EAAW5D,OAAQ,CACjC,MAAM,IAAE7uB,EAAG,IAAE9K,GAAQu9B,EAAW5D,OAAOgE,UAAUxE,GACjDoF,EAAUjmC,IAAIm+B,EAAM0C,GAAQtW,GAAU/X,EAAK9K,EAAK,IACpD,IAER,CAMAogC,8BAAAA,GACI,IAAKlrC,KAAKqI,cAAclI,QACpB,OACJ,MAAM,KAAE8nC,EAAI,gBAAEsB,GAAoBvpC,KAAK6I,YACjC,WAAEw/B,GAAeroC,KAAKqI,cAC5B,IAAK07B,GAAYwF,KAAqBlB,IAAeroC,KAAKynC,YACtD,OAKJznC,KAAKgoC,gBAKL,MAAMmD,EAAc,CAAEr8B,EAAG,EAAGC,EAAG,GAC/Bw2B,IAAUtB,IACN,MAAMoF,EAAYrpC,KAAKuoC,mBAAmBtE,GAC1C,GAAIoF,IAAkC,IAArBrpC,KAAKynC,YAAuB,CACzC,MAAMlT,EAAS8U,EAAUtjC,MACzBolC,EAAYlH,GRnS5B,SAAoB5jB,EAAQtP,GACxB,IAAI4Z,EAAS,GACb,MAAMygB,EAAepH,GAAW3jB,GAC1BgrB,EAAerH,GAAWjzB,GAOhC,OANIs6B,EAAeD,EACfzgB,EAAS3d,EAAS+D,EAAO6E,IAAK7E,EAAOjG,IAAMsgC,EAAc/qB,EAAOzK,KAE3Dw1B,EAAeC,IACpB1gB,EAAS3d,EAASqT,EAAOzK,IAAKyK,EAAOvV,IAAMugC,EAAct6B,EAAO6E,MAE7D2G,GAAM,EAAG,EAAGoO,EACvB,CQwRoC2gB,CAAW,CAAE11B,IAAK2e,EAAQzpB,IAAKypB,GAAUv0B,KAAKynC,YAAYxD,GAClF,KAKJ,MAAM,kBAAEsH,GAAsBvrC,KAAKqI,cAAcQ,WACjD7I,KAAKqI,cAAclI,QAAQ2B,MAAM4a,UAAY6uB,EACvCA,EAAkB,CAAC,EAAG,IACtB,OACNlD,EAAW74B,MAAQ64B,EAAW74B,KAAKg8B,eACnCnD,EAAWoD,eACXzrC,KAAKooC,qBAKL7C,IAAUtB,IACN,IAAKmF,GAAWnF,EAAMgE,EAAM,MACxB,OAIJ,MAAMoB,EAAYrpC,KAAKuoC,mBAAmBtE,IACpC,IAAEruB,EAAG,IAAE9K,GAAQ9K,KAAKynC,YAAYxD,GACtCoF,EAAUjmC,IAAIuqB,GAAU/X,EAAK9K,EAAKqgC,EAAYlH,IAAO,GAE7D,CACAyH,YAAAA,GACI,IAAK1rC,KAAKqI,cAAclI,QACpB,OACJinC,GAAoBhkC,IAAIpD,KAAKqI,cAAerI,MAC5C,MAIM2rC,EAAsBjK,GAJZ1hC,KAAKqI,cAAclI,QAIkB,eAAgB+P,IACjE,MAAM,KAAE+3B,EAAI,aAAE2D,GAAe,GAAS5rC,KAAK6I,WAC3Co/B,GAAQ2D,GAAgB5rC,KAAK2H,MAAMuI,EAAM,IAEvC27B,EAAyBA,KAC3B,MAAM,gBAAEtC,GAAoBvpC,KAAK6I,WAC7Bk7B,GAAYwF,IAAoBA,EAAgBppC,UAChDH,KAAKynC,YAAcznC,KAAK0pC,wBAC5B,GAEE,WAAErB,GAAeroC,KAAKqI,cACtByjC,EAA4BzD,EAAW/1B,iBAAiB,UAAWu5B,GACrExD,IAAeA,EAAW5D,SAC1B4D,EAAW74B,MAAQ64B,EAAW74B,KAAKg8B,eACnCnD,EAAWoD,gBAEf11B,GAAMX,KAAKy2B,GAKX,MAAME,EAAqB1K,GAAYj4B,OAAQ,UAAU,IAAMpJ,KAAKkrC,mCAK9Dc,EAA2B3D,EAAW/1B,iBAAiB,aAAcnR,IAAiC,IAAhC,MAAE6S,EAAK,iBAAEi4B,GAAkB9qC,EAC/FnB,KAAK6O,YAAco9B,IACnB1G,IAAUtB,IACN,MAAMpqB,EAAc7Z,KAAKuoC,mBAAmBtE,GACvCpqB,IAEL7Z,KAAKmkC,YAAYF,IAASjwB,EAAMiwB,GAAMG,UACtCvqB,EAAYzW,IAAIyW,EAAY9T,MAAQiO,EAAMiwB,GAAMG,WAAU,IAE9DpkC,KAAKqI,cAAcrH,SACvB,IAEJ,MAAO,KACH+qC,IACAJ,IACAG,IACAE,GAA4BA,GAA0B,CAE9D,CACAnjC,QAAAA,GACI,MAAM5I,EAAQD,KAAKqI,cAAcQ,YAC3B,KAAEo/B,GAAO,EAAK,kBAAES,GAAoB,EAAK,gBAAER,GAAkB,EAAK,gBAAEqB,GAAkB,EAAK,YAAEtE,EAAcF,GAAc,aAAE2F,GAAe,GAAUzqC,EAC1J,OAAA4P,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACO5P,GAAK,IACRgoC,OACAS,oBACAR,kBACAqB,kBACAtE,cACAyF,gBAER,EAEJ,SAAStB,GAAWrP,EAAWkO,EAAMT,GACjC,QAAkB,IAATS,GAAiBA,IAASlO,KACT,OAArByN,GAA6BA,IAAqBzN,EAC3D,CEzcA,MAAMmS,GAAgBr1B,GAAY,CAAC3G,EAAOiyB,KAClCtrB,GACAd,GAAMP,YAAW,IAAMqB,EAAQ3G,EAAOiyB,IAC1C,E,+CCJJ,MAAMgK,IAA2BplC,EAAAA,GAAAA,eAAc,CAAC,GCD1CqlC,GAAwB,CAK1BC,wBAAwB,EAKxBC,gBAAgB,GCbpB,SAASC,GAAgBC,EAAQvI,GAC7B,OAAIA,EAAKn5B,MAAQm5B,EAAKruB,IACX,EACH42B,GAAUvI,EAAKn5B,IAAMm5B,EAAKruB,KAAQ,GAC9C,CAQA,MAAM62B,GAAsB,CACxBC,QAASA,CAACnY,EAAQoM,KACd,IAAKA,EAAK5vB,OACN,OAAOwjB,EAKX,GAAsB,kBAAXA,EAAqB,CAC5B,IAAIxV,GAAGzC,KAAKiY,GAIR,OAAOA,EAHPA,EAASnc,WAAWmc,EAK5B,CAKA,MAAMzlB,EAAIy9B,GAAgBhY,EAAQoM,EAAK5vB,OAAOjC,GACxCC,EAAIw9B,GAAgBhY,EAAQoM,EAAK5vB,OAAOhC,GAC9C,MAAO,GAAP1M,OAAUyM,EAAC,MAAAzM,OAAK0M,EAAC,OCjCnB49B,GAAmB,CACrBD,QAASA,CAACnY,EAAMpzB,KAAqC,IAAnC,UAAEyrC,EAAS,gBAAEC,GAAiB1rC,EAC5C,MAAM2rC,EAAWvY,EACXwY,EAAStsB,GAAQhE,MAAM8X,GAE7B,GAAIwY,EAAOlnC,OAAS,EAChB,OAAOinC,EACX,MAAMtd,EAAW/O,GAAQL,kBAAkBmU,GACrC0B,EAA8B,kBAAd8W,EAAO,GAAkB,EAAI,EAE7CC,EAASH,EAAgB/9B,EAAE8N,MAAQgwB,EAAU99B,EAC7Cm+B,EAASJ,EAAgB99B,EAAE6N,MAAQgwB,EAAU79B,EACnDg+B,EAAO,EAAI9W,IAAW+W,EACtBD,EAAO,EAAI9W,IAAWgX,EAOtB,MAAMC,EAAevf,GAAUqf,EAAQC,EAAQ,IAO/C,MALkC,kBAAvBF,EAAO,EAAI9W,KAClB8W,EAAO,EAAI9W,IAAWiX,GAEQ,kBAAvBH,EAAO,EAAI9W,KAClB8W,EAAO,EAAI9W,IAAWiX,GACnB1d,EAASud,EAAO,GC9BzBI,GAAkB,CAAC,ECEzB,MAAQr4B,SAAUs4B,GAAW3iC,OAAQ4iC,IAAoB15B,GAAoB0C,gBAAgB,GCW7F,MAAMi3B,WAAiCC,GAAAA,UAMnCC,iBAAAA,GACI,MAAM,cAAEnlC,EAAa,YAAEolC,EAAW,kBAAEC,EAAiB,SAAEC,GAAa3tC,KAAKC,OACnE,WAAEooC,GAAehgC,EFpB/B,IAA2BulC,IEqBDC,GFpBtBxwB,OAAOua,OAAOuV,GAAiBS,GEqBvBvF,IACIoF,EAAYK,OACZL,EAAYK,MAAMn8B,IAAI02B,GACtBqF,GAAqBA,EAAkBjqC,UAAYkqC,GACnDD,EAAkBjqC,SAAS4kC,GAE/BA,EAAW74B,KAAKu+B,YAChB1F,EAAW/1B,iBAAiB,qBAAqB,KAC7CtS,KAAK8E,cAAc,IAEvBujC,EAAW2F,YAAUn+B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAChBw4B,EAAWl5B,SAAO,IACrBzM,eAAgBA,IAAM1C,KAAK8E,mBAGnCsnC,GAAsBE,gBAAiB,CAC3C,CACAzsC,uBAAAA,CAAwBC,GACpB,MAAM,iBAAEmuC,EAAgB,cAAE5lC,EAAa,KAAE4/B,EAAI,UAAE7nC,GAAcJ,KAAKC,MAC5DooC,EAAahgC,EAAcggC,WACjC,OAAKA,GASLA,EAAWjoC,UAAYA,EACnB6nC,GACAnoC,EAAUmuC,mBAAqBA,QACV1nC,IAArB0nC,EACA5F,EAAW6F,aAGXluC,KAAK8E,eAELhF,EAAUM,YAAcA,IACpBA,EACAioC,EAAW8F,UAEL9F,EAAW+F,YAMjBr4B,GAAMP,YAAW,KACb,MAAM64B,EAAQhG,EAAWiG,WACpBD,GAAUA,EAAME,QAAQ1oC,QACzB7F,KAAK8E,cACT,KAIL,MAnCI,IAoCf,CACA/D,kBAAAA,GACI,MAAM,WAAEsnC,GAAeroC,KAAKC,MAAMoI,cAC9BggC,IACAA,EAAW74B,KAAKu+B,YAChBX,GAAU53B,YAAW,MACZ6yB,EAAWmG,kBAAoBnG,EAAWoG,UAC3CzuC,KAAK8E,cACT,IAGZ,CACA4pC,oBAAAA,GACI,MAAM,cAAErmC,EAAa,YAAEolC,EAAaC,kBAAmBiB,GAAoB3uC,KAAKC,OAC1E,WAAEooC,GAAehgC,EACnBggC,IACAA,EAAWuG,4BACPnB,GAAeA,EAAYK,OAC3BL,EAAYK,MAAMe,OAAOxG,GACzBsG,GAAkBA,EAAeG,YACjCH,EAAeG,WAAWzG,GAEtC,CACAvjC,YAAAA,GACI,MAAM,aAAEA,GAAiB9E,KAAKC,MAC9B6E,GAAgBA,GACpB,CACA9D,MAAAA,GACI,OAAO,IACX,EAEJ,SAAS+tC,GAAc9uC,GACnB,MAAOG,EAAW0E,IAAgBC,EAAAA,GAAAA,MAC5B0oC,GAAchsC,EAAAA,GAAAA,YAAW4E,GAAAA,GAC/B,OAAQ9D,EAAAA,GAAAA,KAAI+qC,IAAwBz9B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAO5P,GAAK,IAAEwtC,YAAaA,EAAaC,mBAAmBjsC,EAAAA,GAAAA,YAAW0qC,IAA2B/rC,UAAWA,EAAW0E,aAAcA,IAC7K,CACA,MAAM+oC,GAAyB,CAC3BlsB,cAAY9R,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACL48B,IAAmB,IACtBuC,QAAS,CACL,sBACA,uBACA,yBACA,6BAGRntB,oBAAqB4qB,GACrB3qB,qBAAsB2qB,GACtBzqB,uBAAwByqB,GACxB1qB,wBAAyB0qB,GACzBwC,UAAWtC,IClIf,MAAMuC,GAAiBA,CAACphC,EAAGC,IAAMD,EAAE4b,MAAQ3b,EAAE2b,MCG7C,MAAMylB,GACF5lC,WAAAA,GACIvJ,KAAKiB,SAAW,GAChBjB,KAAKovC,SAAU,CACnB,CACAz9B,GAAAA,CAAItN,GACAiS,GAActW,KAAKiB,SAAUoD,GAC7BrE,KAAKovC,SAAU,CACnB,CACAP,MAAAA,CAAOxqC,GACHqS,GAAW1W,KAAKiB,SAAUoD,GAC1BrE,KAAKovC,SAAU,CACnB,CACAvrC,OAAAA,CAAQoF,GACJjJ,KAAKovC,SAAWpvC,KAAKiB,SAASg8B,KAAKiS,IACnClvC,KAAKovC,SAAU,EACfpvC,KAAKiB,SAAS4C,QAAQoF,EAC1B,ECbJ,SAASujB,GAAMvjB,EAAUomC,GACrB,MAAM1nC,EAAQ+C,GAAKiL,MACb25B,EAAenuC,IAAmB,IAAlB,UAAE8S,GAAW9S,EAC/B,MAAMo3B,EAAUtkB,EAAYtM,EACxB4wB,GAAW8W,IACXr5B,GAAYs5B,GACZrmC,EAASsvB,EAAU8W,GACvB,EAGJ,OADAt5B,GAAMX,KAAKk6B,GAAc,GAClB,IAAMt5B,GAAYs5B,EAC7B,CCVA,SAASC,GAAmBrrC,GACxB,MAAMsrC,EAAiBt1B,GAAchW,GAASA,EAAM6B,MAAQ7B,EAC5D,OrCRmBwD,EqCQE8nC,ErCPd5lC,QAAQlC,GAAkB,kBAANA,GAAkBA,EAAEuoB,KAAOvoB,EAAE+nC,SqCQlDD,EAAeC,UACfD,ErCVa9nC,KqCWvB,CCRA,MAAMgoC,GAAU,CAAC,UAAW,WAAY,aAAc,eAChDC,GAAaD,GAAQ7pC,OACrB+pC,GAAY1rC,GAA2B,kBAAVA,EAAqBkU,WAAWlU,GAASA,EACtE2rC,GAAQ3rC,GAA2B,kBAAVA,GAAsB6a,GAAGzC,KAAKpY,GA0C7D,SAAS4rC,GAAUxsC,EAAQysC,GACvB,YAA8BxpC,IAAvBjD,EAAOysC,GACRzsC,EAAOysC,GACPzsC,EAAOqe,YACjB,CAwBA,MAAMquB,GAAgCC,GAAS,EAAG,GAAKzhC,IACjD0hC,GAAiCD,GAAS,GAAK,IAAM78B,GAC3D,SAAS68B,GAASr6B,EAAK9K,EAAKuB,GACxB,OAAQpF,GAEAA,EAAI2O,EACG,EACP3O,EAAI6D,EACG,EACJuB,EAAOW,EAAS4I,EAAK9K,EAAK7D,GAEzC,CCpFA,SAASkpC,GAAalM,EAAMmM,GACxBnM,EAAKruB,IAAMw6B,EAAWx6B,IACtBquB,EAAKn5B,IAAMslC,EAAWtlC,GAC1B,CAMA,SAASulC,GAAYlK,EAAKmK,GACtBH,GAAahK,EAAIr3B,EAAGwhC,EAAUxhC,GAC9BqhC,GAAahK,EAAIp3B,EAAGuhC,EAAUvhC,EAClC,CAMA,SAASwhC,GAAkBv8B,EAAOw8B,GAC9Bx8B,EAAMowB,UAAYoM,EAAYpM,UAC9BpwB,EAAM4I,MAAQ4zB,EAAY5zB,MAC1B5I,EAAMmwB,YAAcqM,EAAYrM,YAChCnwB,EAAM2W,OAAS6lB,EAAY7lB,MAC/B,CCrBA,SAAS8lB,GAAiBlP,EAAO6C,EAAWxnB,EAAOunB,EAAa6B,GAM5D,OAJAzE,EAAQuE,GADRvE,GAAS6C,EACiB,EAAIxnB,EAAOunB,QACpB59B,IAAby/B,IACAzE,EAAQuE,GAAWvE,EAAO,EAAIyE,EAAU7B,IAErC5C,CACX,CAsBA,SAASmP,GAAqBzM,EAAM0M,EAAUxvC,EAA8BwpB,EAAQimB,GAAY,IAA/C7sC,EAAK8sC,EAAUC,GAAU3vC,GAlB1E,SAAyB8iC,GAA8F,IAAxFG,EAASv9B,UAAAhB,OAAA,QAAAU,IAAAM,UAAA,GAAAA,UAAA,GAAG,EAAG+V,EAAK/V,UAAAhB,OAAA,QAAAU,IAAAM,UAAA,GAAAA,UAAA,GAAG,EAAG8jB,EAAM9jB,UAAAhB,OAAA,QAAAU,IAAAM,UAAA,GAAAA,UAAA,GAAG,GAAKm/B,EAAQn/B,UAAAhB,OAAA,EAAAgB,UAAA,QAAAN,EAAE6pC,EAAUvpC,UAAAhB,OAAA,QAAAU,IAAAM,UAAA,GAAAA,UAAA,GAAGo9B,EAAM2M,EAAU/pC,UAAAhB,OAAA,QAAAU,IAAAM,UAAA,GAAAA,UAAA,GAAGo9B,EACzGnlB,GAAQxC,KAAK8nB,KACbA,EAAYhsB,WAAWgsB,GAEvBA,EADyBzW,GAAUijB,EAAWh7B,IAAKg7B,EAAW9lC,IAAKs5B,EAAY,KAChDwM,EAAWh7B,KAE9C,GAAyB,kBAAdwuB,EACP,OACJ,IAAID,EAAcxW,GAAUyiB,EAAWx6B,IAAKw6B,EAAWtlC,IAAK6f,GACxDsZ,IAASmM,IACTjM,GAAeC,GACnBH,EAAKruB,IAAM66B,GAAiBxM,EAAKruB,IAAKwuB,EAAWxnB,EAAOunB,EAAa6B,GACrE/B,EAAKn5B,IAAM2lC,GAAiBxM,EAAKn5B,IAAKs5B,EAAWxnB,EAAOunB,EAAa6B,EACzE,CAMI+K,CAAgB9M,EAAM0M,EAAW5sC,GAAM4sC,EAAWE,GAAWF,EAAWG,GAAYH,EAAW/zB,MAAO+N,EAAQimB,EAClH,CAIA,MAAMI,GAAQ,CAAC,IAAK,SAAU,WACxBC,GAAQ,CAAC,IAAK,SAAU,WAK9B,SAASC,GAAoB/K,EAAKwK,EAAYL,EAAWa,GACrDT,GAAqBvK,EAAIr3B,EAAG6hC,EAAYK,GAAOV,EAAYA,EAAUxhC,OAAIvI,EAAW4qC,EAAYA,EAAUriC,OAAIvI,GAC9GmqC,GAAqBvK,EAAIp3B,EAAG4hC,EAAYM,GAAOX,EAAYA,EAAUvhC,OAAIxI,EAAW4qC,EAAYA,EAAUpiC,OAAIxI,EAClH,CCjDA,SAAS6qC,GAAgBp9B,GACrB,OAA2B,IAApBA,EAAMowB,WAAmC,IAAhBpwB,EAAM4I,KAC1C,CACA,SAASy0B,GAAYr9B,GACjB,OAAOo9B,GAAgBp9B,EAAMlF,IAAMsiC,GAAgBp9B,EAAMjF,EAC7D,CACA,SAASuiC,GAAWxjC,EAAGC,GACnB,OAAOD,EAAE8H,MAAQ7H,EAAE6H,KAAO9H,EAAEhD,MAAQiD,EAAEjD,GAC1C,CAIA,SAASymC,GAAkBzjC,EAAGC,GAC1B,OAAQpK,KAAK6J,MAAMM,EAAE8H,OAASjS,KAAK6J,MAAMO,EAAE6H,MACvCjS,KAAK6J,MAAMM,EAAEhD,OAASnH,KAAK6J,MAAMO,EAAEjD,IAC3C,CACA,SAAS0mC,GAAiB1jC,EAAGC,GACzB,OAAOwjC,GAAkBzjC,EAAEgB,EAAGf,EAAEe,IAAMyiC,GAAkBzjC,EAAEiB,EAAGhB,EAAEgB,EACnE,CACA,SAAS0iC,GAAYtL,GACjB,OAAOnC,GAAWmC,EAAIr3B,GAAKk1B,GAAWmC,EAAIp3B,EAC9C,CACA,SAAS2iC,GAAgB5jC,EAAGC,GACxB,OAAQD,EAAEs2B,YAAcr2B,EAAEq2B,WACtBt2B,EAAE8O,QAAU7O,EAAE6O,OACd9O,EAAEq2B,cAAgBp2B,EAAEo2B,WAC5B,CC1BA,MAAMwN,GACFpoC,WAAAA,GACIvJ,KAAKuuC,QAAU,EACnB,CACA58B,GAAAA,CAAIgvB,GACArqB,GAActW,KAAKuuC,QAAS5N,GAC5BA,EAAKiR,gBACT,CACA/C,MAAAA,CAAOlO,GAKH,GAJAjqB,GAAW1W,KAAKuuC,QAAS5N,GACrBA,IAAS3gC,KAAK6xC,WACd7xC,KAAK6xC,cAAWtrC,GAEhBo6B,IAAS3gC,KAAK8xC,KAAM,CACpB,MAAMD,EAAW7xC,KAAKuuC,QAAQvuC,KAAKuuC,QAAQ1oC,OAAS,GAChDgsC,GACA7xC,KAAKmuC,QAAQ0D,EAErB,CACJ,CACAzD,QAAAA,CAASzN,GACL,MAAMoR,EAAc/xC,KAAKuuC,QAAQyD,WAAWC,GAAWtR,IAASsR,IAChE,GAAoB,IAAhBF,EACA,OAAO,EAIX,IAAIF,EACJ,IAAK,IAAIjsC,EAAImsC,EAAansC,GAAK,EAAGA,IAAK,CACnC,MAAMqsC,EAASjyC,KAAKuuC,QAAQ3oC,GAC5B,IAAyB,IAArBqsC,EAAO7xC,UAAqB,CAC5ByxC,EAAWI,EACX,KACJ,CACJ,CACA,QAAIJ,IACA7xC,KAAKmuC,QAAQ0D,IACN,EAKf,CACA1D,OAAAA,CAAQxN,EAAMuR,GACV,MAAML,EAAW7xC,KAAK8xC,KACtB,GAAInR,IAASkR,IAEb7xC,KAAK6xC,SAAWA,EAChB7xC,KAAK8xC,KAAOnR,EACZA,EAAKwR,OACDN,GAAU,CACVA,EAASjL,UAAYiL,EAASD,iBAC9BjR,EAAKiR,iBACLjR,EAAKyR,WAAaP,EACdK,IACAvR,EAAKyR,WAAWC,iBAAkB,GAElCR,EAASS,WACT3R,EAAK2R,SAAWT,EAASS,SACzB3R,EAAK2R,SAASpW,aACV2V,EAASU,iBAAmBV,EAAS3V,cAEzCyE,EAAKnxB,MAAQmxB,EAAKnxB,KAAKgjC,aACvB7R,EAAK8R,eAAgB,GAEzB,MAAM,UAAEC,GAAc/R,EAAKxxB,SACT,IAAdujC,GACAb,EAASc,MAcjB,CACJ,CACAC,qBAAAA,GACI5yC,KAAKuuC,QAAQ1qC,SAAS88B,IAClB,MAAM,QAAExxB,EAAO,aAAE0jC,GAAiBlS,EAClCxxB,EAAQzM,gBAAkByM,EAAQzM,iBAC9BmwC,GACAA,EAAa1jC,QAAQzM,gBACjBmwC,EAAa1jC,QAAQzM,gBAC7B,GAER,CACAkvC,cAAAA,GACI5xC,KAAKuuC,QAAQ1qC,SAAS88B,IAClBA,EAAKiG,UAAYjG,EAAKiR,gBAAe,EAAM,GAEnD,CAKAkB,kBAAAA,GACQ9yC,KAAK8xC,MAAQ9xC,KAAK8xC,KAAKQ,WACvBtyC,KAAK8xC,KAAKQ,cAAW/rC,EAE7B,EChFJ,MAAMwsC,GAAU,CACZ7mC,KAAM,kBACN8mC,WAAY,EACZC,qBAAsB,EACtBC,uBAAwB,GAEtBC,GAA4B,qBAAX/pC,aAAiD7C,IAAvB6C,OAAOgqC,YAClDC,GAAgB,CAAC,GAAI,IAAK,IAAK,KAC/BC,GAAmB,CAAEC,WAAY,UAMvC,IAAInyC,GAAK,EACT,SAASoyC,GAAyBzvC,EAAKsE,EAAe/E,EAAQmwC,GAC1D,MAAM,aAAEvX,GAAiB7zB,EAErB6zB,EAAan4B,KACbT,EAAOS,GAAOm4B,EAAan4B,GAC3BsE,EAAcqrC,eAAe3vC,EAAK,GAC9B0vC,IACAA,EAAsB1vC,GAAO,GAGzC,CACA,SAAS4vC,GAAuCC,GAE5C,GADAA,EAAeC,2BAA4B,EACvCD,EAAepkC,OAASokC,EACxB,OACJ,MAAM,cAAEvrC,GAAkBurC,EAAezkC,QACzC,IAAK9G,EACD,OACJ,MAAMg0B,EAAW3hB,GAAqBrS,GACtC,GAAIe,OAAO0qC,4BAA4BzX,EAAU,aAAc,CAC3D,MAAM,OAAEoI,EAAM,SAAEkJ,GAAaiG,EAAezkC,QAC5C/F,OAAO2qC,+BAA+B1X,EAAU,YAAatmB,KAAS0uB,GAAUkJ,GACpF,CACA,MAAM,OAAEt9B,GAAWujC,EACfvjC,IAAWA,EAAOwjC,2BAClBF,GAAuCtjC,EAE/C,CACA,SAAS2jC,GAAoB7yC,GAA6F,IAA5F,qBAAE8yC,EAAoB,cAAEC,EAAa,cAAEC,EAAa,kBAAEC,EAAiB,eAAEC,GAAiBlzC,EACpH,OAAO,MACHoI,WAAAA,GAAuH,IAA3G2yB,EAAYr1B,UAAAhB,OAAA,QAAAU,IAAAM,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGwJ,EAAMxJ,UAAAhB,OAAA,QAAAU,IAAAM,UAAA,GAAAA,UAAA,GAAqB,OAAlBqtC,QAA4C,IAAlBA,OAA2B,EAASA,IAIlGl0C,KAAKoB,GAAKA,KAIVpB,KAAKs0C,YAAc,EAOnBt0C,KAAKiB,SAAW,IAAI0P,IAKpB3Q,KAAKmP,QAAU,CAAC,EAMhBnP,KAAKu0C,iBAAkB,EACvBv0C,KAAKsoC,oBAAqB,EAO1BtoC,KAAKyyC,eAAgB,EAKrBzyC,KAAKw0C,mBAAoB,EAKzBx0C,KAAKy0C,yBAA0B,EAK/Bz0C,KAAK00C,kBAAmB,EAIxB10C,KAAK20C,uBAAwB,EAC7B30C,KAAK40C,uBAAwB,EAK7B50C,KAAKwyC,YAAa,EAIlBxyC,KAAK60C,OAAQ,EAKb70C,KAAK80C,YAAa,EAIlB90C,KAAK+0C,sBAAuB,EAO5B/0C,KAAK6zC,2BAA4B,EASjC7zC,KAAK4sC,UAAY,CAAE99B,EAAG,EAAGC,EAAG,GAI5B/O,KAAKg1C,cAAgB,IAAI7wC,IACzBnE,KAAKi1C,iBAAkB,EAEvBj1C,KAAKk1C,iBAAkB,EACvBl1C,KAAKm1C,eAAiB,IAAMn1C,KAAKsV,SACjCtV,KAAKo1C,2BAA4B,EACjCp1C,KAAKq1C,kBAAoB,KACjBr1C,KAAKwyC,aACLxyC,KAAKwyC,YAAa,EAClBxyC,KAAKs1C,oBACT,EAOJt1C,KAAKu1C,iBAAmB,KACpBv1C,KAAKo1C,2BAA4B,EAK7BjC,KACAJ,GAAQC,WACJD,GAAQE,qBACJF,GAAQG,uBACJ,GAEhBlzC,KAAKw1C,MAAM3xC,QAAQ4xC,IACnBz1C,KAAKw1C,MAAM3xC,QAAQ6xC,IACnB11C,KAAKw1C,MAAM3xC,QAAQ8xC,IACnB31C,KAAKw1C,MAAM3xC,QAAQ+xC,IACfzC,IACA/pC,OAAOgqC,YAAYyC,OAAO9C,GAC9B,EAKJ/yC,KAAK81C,yBAA2B,EAChC91C,KAAK+1C,cAAe,EACpB/1C,KAAKg2C,WAAY,EACjBh2C,KAAKi2C,kBAAoB,EAKzBj2C,KAAKk2C,YAAc,IAAI/xC,IACvBnE,KAAKk8B,aAAeA,EACpBl8B,KAAKwP,KAAOa,EAASA,EAAOb,MAAQa,EAASrQ,KAC7CA,KAAKm2C,KAAO9lC,EAAS,IAAIA,EAAO8lC,KAAM9lC,GAAU,GAChDrQ,KAAKqQ,OAASA,EACdrQ,KAAK0pB,MAAQrZ,EAASA,EAAOqZ,MAAQ,EAAI,EACzC,IAAK,IAAI9jB,EAAI,EAAGA,EAAI5F,KAAKm2C,KAAKtwC,OAAQD,IAClC5F,KAAKm2C,KAAKvwC,GAAGmvC,sBAAuB,EAEpC/0C,KAAKwP,OAASxP,OACdA,KAAKw1C,MAAQ,IAAIrG,GACzB,CACA78B,gBAAAA,CAAiB0O,EAAMnK,GAInB,OAHK7W,KAAKg1C,cAAcvuC,IAAIua,IACxBhhB,KAAKg1C,cAAc5xC,IAAI4d,EAAM,IAAIpK,IAE9B5W,KAAKg1C,cAAcjvC,IAAIib,GAAMrP,IAAIkF,EAC5C,CACAu/B,eAAAA,CAAgBp1B,GACZ,MAAMq1B,EAAsBr2C,KAAKg1C,cAAcjvC,IAAIib,GAAM,QAAA6N,EAAAhoB,UAAAhB,OADpCywC,EAAI,IAAAzuC,MAAAgnB,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJunB,EAAIvnB,EAAA,GAAAloB,UAAAkoB,GAEzBsnB,GAAuBA,EAAoBv/B,UAAUw/B,EACzD,CACAC,YAAAA,CAAav1B,GACT,OAAOhhB,KAAKg1C,cAAcvuC,IAAIua,EAClC,CAIA+f,KAAAA,CAAM6F,GAAqD,IAA3C6L,EAAa5rC,UAAAhB,OAAA,QAAAU,IAAAM,UAAA,GAAAA,UAAA,GAAG7G,KAAKwP,KAAKylC,gBACtC,GAAIj1C,KAAK4mC,SACL,OCnPhB,IAAsB7mC,EDoPVC,KAAK60C,OCpPK90C,EDoPgB6mC,aCnPR4P,YAAkC,QAApBz2C,EAAQwS,QDoPxCvS,KAAK4mC,SAAWA,EAChB,MAAM,SAAE+G,EAAQ,OAAElJ,EAAM,cAAEp8B,GAAkBrI,KAAKmP,QASjD,GARI9G,IAAkBA,EAAclI,SAChCkI,EAAc04B,MAAM6F,GAExB5mC,KAAKwP,KAAKgmC,MAAM7jC,IAAI3R,MACpBA,KAAKqQ,QAAUrQ,KAAKqQ,OAAOpP,SAAS0Q,IAAI3R,MACpCyyC,IAAkBhO,GAAUkJ,KAC5B3tC,KAAKyyC,eAAgB,GAErBwB,EAAsB,CACtB,IAAIwC,EACJ,MAAMC,EAAsBA,IAAO12C,KAAKwP,KAAKolC,uBAAwB,EACrEX,EAAqBrN,GAAU,KAC3B5mC,KAAKwP,KAAKolC,uBAAwB,EAClC6B,GAAeA,IACfA,EAAcjqB,GAAMkqB,EAAqB,KACrCtK,GAAsBC,yBACtBD,GAAsBC,wBAAyB,EAC/CrsC,KAAKw1C,MAAM3xC,QAAQ8yC,IACvB,GAER,CACIhJ,GACA3tC,KAAKwP,KAAKonC,mBAAmBjJ,EAAU3tC,OAGd,IAAzBA,KAAKmP,QAAQtC,SACbxE,IACCslC,GAAYlJ,IACbzkC,KAAKsS,iBAAiB,aAAagU,IAA+E,IAA9E,MAAEtS,EAAK,iBAAEi4B,EAAgB,yBAAE4K,EAA0BpS,OAAQqS,GAAYxwB,EACzG,GAAItmB,KAAK+2C,yBAGL,OAFA/2C,KAAK+Q,YAASxK,OACdvG,KAAKg3C,oBAAiBzwC,GAI1B,MAAM0wC,EAAmBj3C,KAAKmP,QAAQxD,YAClCtD,EAAcsyB,wBACduc,IACE,uBAAEC,EAAsB,0BAAEC,GAA+B/uC,EAAcQ,WAKvEwuC,GAAiBr3C,KAAKs3C,eACvB9F,GAAiBxxC,KAAKs3C,aAAcR,IACrCD,EAMEU,GAAgCtL,GAAoB4K,EAC1D,GAAI72C,KAAKmP,QAAQqoC,YACZx3C,KAAKoyC,YAAcpyC,KAAKoyC,WAAWxL,UACpC2Q,GACCtL,IACIoL,IAAkBr3C,KAAKwuC,kBAAoB,CAC5CxuC,KAAKoyC,aACLpyC,KAAK6yC,aAAe7yC,KAAKoyC,WACzBpyC,KAAK6yC,aAAaA,kBAAetsC,GAErCvG,KAAKy3C,mBAAmBzjC,EAAOujC,GAC/B,MAAMG,GAAgB7nC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACfnE,EAAmBurC,EAAkB,WAAS,IACjDhe,OAAQke,EACR/uB,WAAYgvB,KAEZ/uC,EAAci0B,oBACdt8B,KAAKmP,QAAQqoC,cACbE,EAAiBlrB,MAAQ,EACzBkrB,EAAiBxrC,MAAO,GAE5BlM,KAAKqZ,eAAeq+B,EACxB,MAOSzL,GACD0K,GAAgB32C,MAEhBA,KAAKyuC,UAAYzuC,KAAKmP,QAAQzM,gBAC9B1C,KAAKmP,QAAQzM,iBAGrB1C,KAAKs3C,aAAeR,CAAS,GAGzC,CACA7V,OAAAA,GACIjhC,KAAKmP,QAAQw+B,UAAY3tC,KAAKkuC,aAC9BluC,KAAKwP,KAAKgmC,MAAM3G,OAAO7uC,MACvB,MAAMquC,EAAQruC,KAAKsuC,WACnBD,GAASA,EAAMQ,OAAO7uC,MACtBA,KAAKqQ,QAAUrQ,KAAKqQ,OAAOpP,SAASyC,OAAO1D,MAC3CA,KAAK4mC,cAAWrgC,EAChByP,GAAYhW,KAAKu1C,iBACrB,CAEAoC,WAAAA,GACI33C,KAAK20C,uBAAwB,CACjC,CACAiD,aAAAA,GACI53C,KAAK20C,uBAAwB,CACjC,CACAkD,eAAAA,GACI,OAAO73C,KAAK20C,uBAAyB30C,KAAK40C,qBAC9C,CACAmC,sBAAAA,GACI,OAAQ/2C,KAAKsoC,oBACRtoC,KAAKqQ,QAAUrQ,KAAKqQ,OAAO0mC,2BAC5B,CACR,CAEAe,WAAAA,GACQ93C,KAAK63C,oBAET73C,KAAKwyC,YAAa,EAClBxyC,KAAKw1C,OAASx1C,KAAKw1C,MAAM3xC,QAAQk0C,IACjC/3C,KAAKs0C,cACT,CACA0D,oBAAAA,GACI,MAAM,cAAE3vC,GAAkBrI,KAAKmP,QAC/B,OAAO9G,GAAiBA,EAAcQ,WAAW0iC,iBACrD,CACA2C,UAAAA,GAAyC,IAA9B+J,IAAqBpxC,UAAAhB,OAAA,QAAAU,IAAAM,UAAA,KAAAA,UAAA,GAE5B,GADA7G,KAAKwP,KAAKylC,iBAAkB,EACxBj1C,KAAKwP,KAAKqoC,kBAEV,YADA73C,KAAKmP,QAAQzM,gBAAkB1C,KAAKmP,QAAQzM,kBAoBhD,GALI0G,OAAO2qC,iCACN/zC,KAAK6zC,2BACNF,GAAuC3zC,OAE1CA,KAAKwP,KAAKgjC,YAAcxyC,KAAKwP,KAAKsoC,cAC/B93C,KAAKyyC,cACL,OACJzyC,KAAKyyC,eAAgB,EACrB,IAAK,IAAI7sC,EAAI,EAAGA,EAAI5F,KAAKm2C,KAAKtwC,OAAQD,IAAK,CACvC,MAAM+6B,EAAO3gC,KAAKm2C,KAAKvwC,GACvB+6B,EAAKoU,sBAAuB,EAC5BpU,EAAK6K,aAAa,YACd7K,EAAKxxB,QAAQqoC,YACb7W,EAAKuN,YAAW,EAExB,CACA,MAAM,SAAEP,EAAQ,OAAElJ,GAAWzkC,KAAKmP,QAClC,QAAiB5I,IAAbonC,IAA2BlJ,EAC3B,OACJ,MAAM8G,EAAoBvrC,KAAKg4C,uBAC/Bh4C,KAAKk4C,2BAA6B3M,EAC5BA,EAAkBvrC,KAAKk8B,aAAc,SACrC31B,EACNvG,KAAKm4C,iBACLF,GAAyBj4C,KAAKo2C,gBAAgB,aAClD,CACA9gC,MAAAA,GACItV,KAAKk1C,iBAAkB,EAKvB,GAJyBl1C,KAAK63C,kBAQ1B,OAHA73C,KAAK43C,gBACL53C,KAAKs1C,yBACLt1C,KAAKw1C,MAAM3xC,QAAQu0C,IAGlBp4C,KAAKwyC,YACNxyC,KAAKw1C,MAAM3xC,QAAQw0C,IAEvBr4C,KAAKwyC,YAAa,EAIlBxyC,KAAKw1C,MAAM3xC,QAAQy0C,IAKnBt4C,KAAKw1C,MAAM3xC,QAAQ4nC,IAKnBzrC,KAAKw1C,MAAM3xC,QAAQ00C,IACnBv4C,KAAKs1C,oBAML,MAAM3/B,EAAMjL,GAAKiL,MACjBV,GAAUjB,MAAQuI,GAAM,EAAG,IAAO,GAAI5G,EAAMV,GAAUhB,WACtDgB,GAAUhB,UAAY0B,EACtBV,GAAUf,cAAe,EACzB+B,GAAWX,OAAON,QAAQC,IAC1BgB,GAAWV,UAAUP,QAAQC,IAC7BgB,GAAWjV,OAAOgU,QAAQC,IAC1BA,GAAUf,cAAe,CAC7B,CACA65B,SAAAA,GACS/tC,KAAKk1C,kBACNl1C,KAAKk1C,iBAAkB,EACvB9H,GAAUh4B,KAAKpV,KAAKm1C,gBAE5B,CACAG,iBAAAA,GACIt1C,KAAKw1C,MAAM3xC,QAAQ20C,IACnBx4C,KAAKk2C,YAAYryC,QAAQ40C,GAC7B,CACAC,wBAAAA,GACS14C,KAAKo1C,4BACNp1C,KAAKo1C,2BAA4B,EACjCr/B,GAAMR,UAAUvV,KAAKu1C,kBAAkB,GAAO,GAEtD,CACA3G,yBAAAA,GAMI74B,GAAMP,YAAW,KACTxV,KAAKyyC,cACLzyC,KAAKwP,KAAKu+B,YAGV/tC,KAAKwP,KAAK6lC,mBACd,GAER,CAIA8C,cAAAA,IACQn4C,KAAKsyC,UAAatyC,KAAK4mC,WAE3B5mC,KAAKsyC,SAAWtyC,KAAKwpC,UACzB,CACAiC,YAAAA,GACI,IAAKzrC,KAAK4mC,SACN,OAGJ,GADA5mC,KAAKwrC,iBACCxrC,KAAKmP,QAAQwpC,sBAAuB34C,KAAKyuC,YAC1CzuC,KAAKyyC,cACN,OASJ,GAAIzyC,KAAKoyC,aAAepyC,KAAKoyC,WAAWxL,SACpC,IAAK,IAAIhhC,EAAI,EAAGA,EAAI5F,KAAKm2C,KAAKtwC,OAAQD,IAAK,CAC1B5F,KAAKm2C,KAAKvwC,GAClB4lC,cACT,CAEJ,MAAMoN,EAAa54C,KAAKykC,OACxBzkC,KAAKykC,OAASzkC,KAAKwpC,SAAQ,GAC3BxpC,KAAK64C,gB1BngBC,CACd/pC,EAFe,CAAS8G,IAAK,EAAG9K,IAAK,GAGrCiE,EAHe,CAAS6G,IAAK,EAAG9K,IAAK,I0BqgB7B9K,KAAKyyC,eAAgB,EACrBzyC,KAAK6sC,qBAAkBtmC,EACvBvG,KAAKo2C,gBAAgB,UAAWp2C,KAAKykC,OAAOgE,WAC5C,MAAM,cAAEpgC,GAAkBrI,KAAKmP,QAC/B9G,GACIA,EAAcyO,OAAO,gBAAiB9W,KAAKykC,OAAOgE,UAAWmQ,EAAaA,EAAWnQ,eAAYliC,EACzG,CACAilC,YAAAA,GAAgC,IAAnBsN,EAAKjyC,UAAAhB,OAAA,QAAAU,IAAAM,UAAA,GAAAA,UAAA,GAAG,UACbygB,EAAmB1d,QAAQ5J,KAAKmP,QAAQ4pC,cAAgB/4C,KAAK4mC,UAMjE,GALI5mC,KAAKoqC,QACLpqC,KAAKoqC,OAAOkK,cAAgBt0C,KAAKwP,KAAK8kC,aACtCt0C,KAAKoqC,OAAO0O,QAAUA,IACtBxxB,GAAmB,GAEnBA,EAAkB,CAClB,MAAM0xB,EAAS5E,EAAkBp0C,KAAK4mC,UACtC5mC,KAAKoqC,OAAS,CACVkK,YAAat0C,KAAKwP,KAAK8kC,YACvBwE,QACAE,SACA/iB,OAAQke,EAAcn0C,KAAK4mC,UAC3BqS,QAASj5C,KAAKoqC,OAASpqC,KAAKoqC,OAAO4O,OAASA,EAEpD,CACJ,CACA3E,cAAAA,GACI,IAAKA,EACD,OACJ,MAAM6E,EAAmBl5C,KAAKyyC,eAC1BzyC,KAAK+0C,sBACL/0C,KAAKmP,QAAQwpC,oBACXQ,EAAgBn5C,KAAK6sC,kBAAoBwE,GAAYrxC,KAAK6sC,iBAC1DtB,EAAoBvrC,KAAKg4C,uBACzBoB,EAAyB7N,EACzBA,EAAkBvrC,KAAKk8B,aAAc,SACrC31B,EACA8yC,EAA8BD,IAA2Bp5C,KAAKk4C,2BAChEgB,IACCC,GACGxT,GAAa3lC,KAAKk8B,eAClBmd,KACJhF,EAAer0C,KAAK4mC,SAAUwS,GAC9Bp5C,KAAK+0C,sBAAuB,EAC5B/0C,KAAK4xC,iBAEb,CACApI,OAAAA,GAAgC,IAAxB8P,IAAezyC,UAAAhB,OAAA,QAAAU,IAAAM,UAAA,KAAAA,UAAA,GACnB,MAAM0yC,EAAUv5C,KAAKqqC,iBACrB,IAAI5B,EAAYzoC,KAAKw5C,oBAAoBD,GAi+BrD,IAAkBpT,EAv9BN,OAJImT,IACA7Q,EAAYzoC,KAAKs5C,gBAAgB7Q,IA29B7CgR,IADctT,EAx9BGsC,GAy9BH35B,GACd2qC,GAAUtT,EAAIp3B,GAz9BC,CACHulC,YAAat0C,KAAKwP,KAAK8kC,YACvBoF,YAAaH,EACb9Q,YACAvM,aAAc,CAAC,EACf7b,OAAQrgB,KAAKoB,GAErB,CACAipC,cAAAA,GACI,IAAI19B,EACJ,MAAM,cAAEtE,GAAkBrI,KAAKmP,QAC/B,IAAK9G,EACD,M1B1kBE,CACdyG,EAFe,CAAS8G,IAAK,EAAG9K,IAAK,GAGrCiE,EAHe,CAAS6G,IAAK,EAAG9K,IAAK,I0B4kB7B,MAAMq7B,EAAM99B,EAAc+iB,qBAE1B,MADgD,QAAtBze,EAAK3M,KAAKoqC,cAA2B,IAAPz9B,OAAgB,EAASA,EAAGssC,UAAYj5C,KAAKm2C,KAAK/jB,KAAKunB,KACzF,CAElB,MAAM,OAAEvP,GAAWpqC,KAAKwP,KACpB46B,IACA9D,GAAcH,EAAIr3B,EAAGs7B,EAAOnU,OAAOnnB,GACnCw3B,GAAcH,EAAIp3B,EAAGq7B,EAAOnU,OAAOlnB,GAE3C,CACA,OAAOo3B,CACX,CACAqT,mBAAAA,CAAoBrT,GAChB,IAAIx5B,EACJ,MAAMitC,E1BzlBA,CACd9qC,EAFe,CAAS8G,IAAK,EAAG9K,IAAK,GAGrCiE,EAHe,CAAS6G,IAAK,EAAG9K,IAAK,I0B4lB7B,GADAulC,GAAYuJ,EAAkBzT,GACH,QAAtBx5B,EAAK3M,KAAKoqC,cAA2B,IAAPz9B,OAAgB,EAASA,EAAGssC,QAC3D,OAAOW,EAMX,IAAK,IAAIh0C,EAAI,EAAGA,EAAI5F,KAAKm2C,KAAKtwC,OAAQD,IAAK,CACvC,MAAM+6B,EAAO3gC,KAAKm2C,KAAKvwC,IACjB,OAAEwkC,EAAM,QAAEj7B,GAAYwxB,EACxBA,IAAS3gC,KAAKwP,MAAQ46B,GAAUj7B,EAAQ4pC,eAKpC3O,EAAO6O,SACP5I,GAAYuJ,EAAkBzT,GAElCG,GAAcsT,EAAiB9qC,EAAGs7B,EAAOnU,OAAOnnB,GAChDw3B,GAAcsT,EAAiB7qC,EAAGq7B,EAAOnU,OAAOlnB,GAExD,CACA,OAAO6qC,CACX,CACAC,cAAAA,CAAe1T,GAA4B,IAAvB2T,EAAajzC,UAAAhB,OAAA,QAAAU,IAAAM,UAAA,IAAAA,UAAA,GAC7B,MAAMkzC,E1BpnBA,CACdjrC,EAFe,CAAS8G,IAAK,EAAG9K,IAAK,GAGrCiE,EAHe,CAAS6G,IAAK,EAAG9K,IAAK,I0BsnB7BulC,GAAY0J,EAAgB5T,GAC5B,IAAK,IAAIvgC,EAAI,EAAGA,EAAI5F,KAAKm2C,KAAKtwC,OAAQD,IAAK,CACvC,MAAM+6B,EAAO3gC,KAAKm2C,KAAKvwC,IAClBk0C,GACDnZ,EAAKxxB,QAAQ4pC,cACbpY,EAAKyJ,QACLzJ,IAASA,EAAKnxB,MACdm3B,GAAaoT,EAAgB,CACzBjrC,GAAI6xB,EAAKyJ,OAAOnU,OAAOnnB,EACvBC,GAAI4xB,EAAKyJ,OAAOnU,OAAOlnB,IAG1B42B,GAAahF,EAAKzE,eAEvByK,GAAaoT,EAAgBpZ,EAAKzE,aACtC,CAIA,OAHIyJ,GAAa3lC,KAAKk8B,eAClByK,GAAaoT,EAAgB/5C,KAAKk8B,cAE/B6d,CACX,CACAT,eAAAA,CAAgBnT,GACZ,MAAM6T,E1B3oBA,CACdlrC,EAFe,CAAS8G,IAAK,EAAG9K,IAAK,GAGrCiE,EAHe,CAAS6G,IAAK,EAAG9K,IAAK,I0B6oB7BulC,GAAY2J,EAAqB7T,GACjC,IAAK,IAAIvgC,EAAI,EAAGA,EAAI5F,KAAKm2C,KAAKtwC,OAAQD,IAAK,CACvC,MAAM+6B,EAAO3gC,KAAKm2C,KAAKvwC,GACvB,IAAK+6B,EAAKiG,SACN,SACJ,IAAKjB,GAAahF,EAAKzE,cACnB,SACJwJ,GAAS/E,EAAKzE,eAAiByE,EAAKwX,iBACpC,MAAMhH,E1BppBJ,CACdriC,EAFe,CAAS8G,IAAK,EAAG9K,IAAK,GAGrCiE,EAHe,CAAS6G,IAAK,EAAG9K,IAAK,I0BupBzBulC,GAAYc,EADIxQ,EAAK0J,kBAErB6G,GAAoB8I,EAAqBrZ,EAAKzE,aAAcyE,EAAK2R,SAAW3R,EAAK2R,SAAS7J,eAAYliC,EAAW4qC,EACrH,CAIA,OAHIxL,GAAa3lC,KAAKk8B,eAClBgV,GAAoB8I,EAAqBh6C,KAAKk8B,cAE3C8d,CACX,CACAC,cAAAA,CAAejmC,GACXhU,KAAKk6C,YAAclmC,EACnBhU,KAAKwP,KAAKkpC,2BACV14C,KAAKw0C,mBAAoB,CAC7B,CACAxG,UAAAA,CAAW7+B,GACPnP,KAAKmP,SAAOU,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACL7P,KAAKmP,SACLA,GAAO,IACVujC,eAAiCnsC,IAAtB4I,EAAQujC,WAA0BvjC,EAAQujC,WAE7D,CACA0F,iBAAAA,GACIp4C,KAAKoqC,YAAS7jC,EACdvG,KAAKykC,YAASl+B,EACdvG,KAAKsyC,cAAW/rC,EAChBvG,KAAKk4C,gCAA6B3xC,EAClCvG,KAAKk6C,iBAAc3zC,EACnBvG,KAAK+Q,YAASxK,EACdvG,KAAKyyC,eAAgB,CACzB,CACA0H,kCAAAA,GACSn6C,KAAKo6C,gBAQNp6C,KAAKo6C,eAAetE,2BACpB7gC,GAAUhB,WACVjU,KAAKo6C,eAAe1E,oBAAmB,EAE/C,CACAA,kBAAAA,GAA+C,IAA5B2E,EAAkBxzC,UAAAhB,OAAA,QAAAU,IAAAM,UAAA,IAAAA,UAAA,GACjC,IAAI8F,EAMJ,MAAMmlC,EAAO9xC,KAAKs6C,UAClBt6C,KAAKw0C,oBAAsBx0C,KAAKw0C,kBAAoB1C,EAAK0C,mBACzDx0C,KAAK00C,mBAAqB10C,KAAK00C,iBAAmB5C,EAAK4C,kBACvD10C,KAAKy0C,0BAA4Bz0C,KAAKy0C,wBAA0B3C,EAAK2C,yBACrE,MAAM8F,EAAW3wC,QAAQ5J,KAAK6yC,eAAiB7yC,OAAS8xC,EAWxD,KANkBuI,GACbE,GAAYv6C,KAAKy0C,yBAClBz0C,KAAKw0C,oBACmB,QAAtB7nC,EAAK3M,KAAKqQ,cAA2B,IAAP1D,OAAgB,EAASA,EAAG6nC,oBAC5Dx0C,KAAKw6C,gCACLx6C,KAAKwP,KAAKolC,uBAEV,OACJ,MAAM,OAAEnQ,EAAM,SAAEkJ,GAAa3tC,KAAKmP,QAIlC,GAAKnP,KAAKykC,SAAYA,GAAUkJ,GAAhC,CAQA,GANA3tC,KAAK81C,yBAA2B7gC,GAAUhB,WAMrCjU,KAAKk6C,cAAgBl6C,KAAKg3C,eAAgB,CAC3C,MAAMoD,EAAiBp6C,KAAKy6C,6BACxBL,GACAA,EAAe3V,QACY,IAA3BzkC,KAAKi2C,mBACLj2C,KAAKo6C,eAAiBA,EACtBp6C,KAAKm6C,qCACLn6C,KAAKg3C,e1B5uBP,CACdloC,EAFe,CAAS8G,IAAK,EAAG9K,IAAK,GAGrCiE,EAHe,CAAS6G,IAAK,EAAG9K,IAAK,I0B8uBrB9K,KAAK06C,qB1B7uBP,CACd5rC,EAFe,CAAS8G,IAAK,EAAG9K,IAAK,GAGrCiE,EAHe,CAAS6G,IAAK,EAAG9K,IAAK,I0B+uBrB45B,GAAqB1kC,KAAK06C,qBAAsB16C,KAAKykC,OAAOgE,UAAW2R,EAAe3V,OAAOgE,WAC7F4H,GAAYrwC,KAAKg3C,eAAgBh3C,KAAK06C,uBAGtC16C,KAAKo6C,eAAiBp6C,KAAKg3C,oBAAiBzwC,CAEpD,CAKA,GAAKvG,KAAKg3C,gBAAmBh3C,KAAKk6C,YAAlC,C5B9tBZ,IAAyBnpC,EAAQwzB,EAAUl0B,E4BuwB/B,GApCKrQ,KAAK+Q,SACN/Q,KAAK+Q,O1B/vBH,CACdjC,EAFe,CAAS8G,IAAK,EAAG9K,IAAK,GAGrCiE,EAHe,CAAS6G,IAAK,EAAG9K,IAAK,I0BiwBzB9K,KAAK26C,qB1BhwBH,CACd7rC,EAFe,CAAS8G,IAAK,EAAG9K,IAAK,GAGrCiE,EAHe,CAAS6G,IAAK,EAAG9K,IAAK,K0BswBzB9K,KAAKg3C,gBACLh3C,KAAK06C,sBACL16C,KAAKo6C,gBACLp6C,KAAKo6C,eAAerpC,QACpB/Q,KAAKm6C,qC5B9uBIppC,E4B+uBO/Q,KAAK+Q,O5B/uBJwzB,E4B+uBYvkC,KAAKg3C,e5B/uBP3mC,E4B+uBuBrQ,KAAKo6C,eAAerpC,O5B9uBlFuzB,GAAiBvzB,EAAOjC,EAAGy1B,EAASz1B,EAAGuB,EAAOvB,GAC9Cw1B,GAAiBvzB,EAAOhC,EAAGw1B,EAASx1B,EAAGsB,EAAOtB,I4BkvB7B/O,KAAKk6C,aACNtwC,QAAQ5J,KAAK6yC,cAEb7yC,KAAK+Q,OAAS/Q,KAAK65C,eAAe75C,KAAKykC,OAAOgE,WAG9C4H,GAAYrwC,KAAK+Q,OAAQ/Q,KAAKykC,OAAOgE,WAEzCvC,GAAclmC,KAAK+Q,OAAQ/Q,KAAKk6C,cAMhC7J,GAAYrwC,KAAK+Q,OAAQ/Q,KAAKykC,OAAOgE,WAKrCzoC,KAAKw6C,+BAAgC,CACrCx6C,KAAKw6C,gCAAiC,EACtC,MAAMJ,EAAiBp6C,KAAKy6C,6BACxBL,GACAxwC,QAAQwwC,EAAevH,gBACnBjpC,QAAQ5J,KAAK6yC,gBAChBuH,EAAejrC,QAAQ4pC,cACxBqB,EAAerpC,QACY,IAA3B/Q,KAAKi2C,mBACLj2C,KAAKo6C,eAAiBA,EACtBp6C,KAAKm6C,qCACLn6C,KAAKg3C,e1B7yBP,CACdloC,EAFe,CAAS8G,IAAK,EAAG9K,IAAK,GAGrCiE,EAHe,CAAS6G,IAAK,EAAG9K,IAAK,I0B+yBrB9K,KAAK06C,qB1B9yBP,CACd5rC,EAFe,CAAS8G,IAAK,EAAG9K,IAAK,GAGrCiE,EAHe,CAAS6G,IAAK,EAAG9K,IAAK,I0BgzBrB45B,GAAqB1kC,KAAK06C,qBAAsB16C,KAAK+Q,OAAQqpC,EAAerpC,QAC5Es/B,GAAYrwC,KAAKg3C,eAAgBh3C,KAAK06C,uBAGtC16C,KAAKo6C,eAAiBp6C,KAAKg3C,oBAAiBzwC,CAEpD,CAII4sC,IACAJ,GAAQE,sBAhEF,CA5BA,CA8Fd,CACAwH,0BAAAA,GACI,GAAKz6C,KAAKqQ,SACNq1B,GAAS1lC,KAAKqQ,OAAO6rB,gBACrB0J,GAAe5lC,KAAKqQ,OAAO6rB,cAG/B,OAAIl8B,KAAKqQ,OAAOuqC,eACL56C,KAAKqQ,OAGLrQ,KAAKqQ,OAAOoqC,4BAE3B,CACAG,YAAAA,GACI,OAAOhxC,SAAS5J,KAAKg3C,gBACjBh3C,KAAKk6C,aACLl6C,KAAKmP,QAAQqoC,aACbx3C,KAAKykC,OACb,CACAkR,cAAAA,GACI,IAAIhpC,EACJ,MAAMmlC,EAAO9xC,KAAKs6C,UACZC,EAAW3wC,QAAQ5J,KAAK6yC,eAAiB7yC,OAAS8xC,EACxD,IAAI+I,GAAU,EAuBd,IAlBI76C,KAAKw0C,oBAA6C,QAAtB7nC,EAAK3M,KAAKqQ,cAA2B,IAAP1D,OAAgB,EAASA,EAAG6nC,sBACtFqG,GAAU,GAMVN,IACCv6C,KAAKy0C,yBAA2Bz0C,KAAK00C,oBACtCmG,GAAU,GAMV76C,KAAK81C,2BAA6B7gC,GAAUhB,YAC5C4mC,GAAU,GAEVA,EACA,OACJ,MAAM,OAAEpW,EAAM,SAAEkJ,GAAa3tC,KAAKmP,QAWlC,GANAnP,KAAKu0C,gBAAkB3qC,QAAS5J,KAAKqQ,QAAUrQ,KAAKqQ,OAAOkkC,iBACvDv0C,KAAKwuC,kBACLxuC,KAAK86C,kBACJ96C,KAAKu0C,kBACNv0C,KAAKk6C,YAAcl6C,KAAKg3C,oBAAiBzwC,IAExCvG,KAAKykC,SAAYA,IAAUkJ,EAC5B,OAKJ0C,GAAYrwC,KAAK64C,gBAAiB74C,KAAKykC,OAAOgE,WAI9C,MAAMsS,EAAiB/6C,KAAK4sC,UAAU99B,EAChCksC,EAAiBh7C,KAAK4sC,UAAU79B,GtBp2BlD,SAAyBo3B,EAAKyG,EAAWqO,GAAsC,IAA5BC,EAAkBr0C,UAAAhB,OAAA,QAAAU,IAAAM,UAAA,IAAAA,UAAA,GACjE,MAAMs0C,EAAaF,EAASp1C,OAC5B,IAAKs1C,EACD,OAGJ,IAAIxa,EACA3sB,EAFJ44B,EAAU99B,EAAI89B,EAAU79B,EAAI,EAG5B,IAAK,IAAInJ,EAAI,EAAGA,EAAIu1C,EAAYv1C,IAAK,CACjC+6B,EAAOsa,EAASr1C,GAChBoO,EAAQ2sB,EAAKkM,gBAKb,MAAM,cAAExkC,GAAkBs4B,EAAKxxB,QAC3B9G,GACAA,EAAcpI,MAAM6B,OACkB,aAAtCuG,EAAcpI,MAAM6B,MAAMs5C,UAG1BF,GACAva,EAAKxxB,QAAQ4pC,cACbpY,EAAKyJ,QACLzJ,IAASA,EAAKnxB,MACdm3B,GAAaR,EAAK,CACdr3B,GAAI6xB,EAAKyJ,OAAOnU,OAAOnnB,EACvBC,GAAI4xB,EAAKyJ,OAAOnU,OAAOlnB,IAG3BiF,IAEA44B,EAAU99B,GAAKkF,EAAMlF,EAAE8N,MACvBgwB,EAAU79B,GAAKiF,EAAMjF,EAAE6N,MAEvBspB,GAAcC,EAAKnyB,IAEnBknC,GAAsBvV,GAAahF,EAAKzE,eACxCyK,GAAaR,EAAKxF,EAAKzE,cAE/B,CAKI0Q,EAAU99B,EAAIu3B,IACduG,EAAU99B,EAAIs3B,KACdwG,EAAU99B,EAAI,GAEd89B,EAAU79B,EAAIs3B,IACduG,EAAU79B,EAAIq3B,KACdwG,EAAU79B,EAAI,EAEtB,CsBozBYssC,CAAgBr7C,KAAK64C,gBAAiB74C,KAAK4sC,UAAW5sC,KAAKm2C,KAAMoE,IAK7DzI,EAAKrN,QACJqN,EAAK/gC,QACgB,IAArB/Q,KAAK4sC,UAAU99B,GAAgC,IAArB9O,KAAK4sC,UAAU79B,IAC1C+iC,EAAK/gC,OAAS+gC,EAAKrN,OAAOgE,UAC1BqJ,EAAK6I,qB1Bj5BH,CACd7rC,EAFe,CAAS8G,IAAK,EAAG9K,IAAK,GAGrCiE,EAHe,CAAS6G,IAAK,EAAG9K,IAAK,K0Bo5B7B,MAAM,OAAEiG,GAAW+gC,EACd/gC,GAYA/Q,KAAK6sC,iBAAoB7sC,KAAKs7C,qBAI/B/K,GAAkBvwC,KAAKs7C,oBAAoBxsC,EAAG9O,KAAK6sC,gBAAgB/9B,GACnEyhC,GAAkBvwC,KAAKs7C,oBAAoBvsC,EAAG/O,KAAK6sC,gBAAgB99B,IAJnE/O,KAAKu7C,yBAeTlX,GAAarkC,KAAK6sC,gBAAiB7sC,KAAK64C,gBAAiB9nC,EAAQ/Q,KAAKk8B,cAClEl8B,KAAK4sC,UAAU99B,IAAMisC,GACrB/6C,KAAK4sC,UAAU79B,IAAMisC,GACpBtJ,GAAgB1xC,KAAK6sC,gBAAgB/9B,EAAG9O,KAAKs7C,oBAAoBxsC,IACjE4iC,GAAgB1xC,KAAK6sC,gBAAgB99B,EAAG/O,KAAKs7C,oBAAoBvsC,KAClE/O,KAAK+1C,cAAe,EACpB/1C,KAAK4xC,iBACL5xC,KAAKo2C,gBAAgB,mBAAoBrlC,IAKzCoiC,IACAJ,GAAQG,0BAnCJlzC,KAAKs7C,sBACLt7C,KAAKu7C,yBACLv7C,KAAK4xC,iBAmCjB,CACAe,IAAAA,GACI3yC,KAAKg2C,WAAY,CAErB,CACA7D,IAAAA,GACInyC,KAAKg2C,WAAY,CAErB,CACApE,cAAAA,GAAiC,IAAlB4J,IAAS30C,UAAAhB,OAAA,QAAAU,IAAAM,UAAA,KAAAA,UAAA,GACpB,IAAI8F,EAEJ,GADsC,QAArCA,EAAK3M,KAAKmP,QAAQ9G,qBAAkC,IAAPsE,GAAyBA,EAAGilC,iBACtE4J,EAAW,CACX,MAAMnN,EAAQruC,KAAKsuC,WACnBD,GAASA,EAAMuD,gBACnB,CACI5xC,KAAK6yC,eAAiB7yC,KAAK6yC,aAAajM,WACxC5mC,KAAK6yC,kBAAetsC,EAE5B,CACAg1C,sBAAAA,GACIv7C,KAAKs7C,oB1Bz9BG,CAChBxsC,EAPoB,CACpBs1B,UAAW,EACXxnB,MAAO,EACP+N,OAAQ,EACRwZ,YAAa,GAIbp1B,EARoB,CACpBq1B,UAAW,EACXxnB,MAAO,EACP+N,OAAQ,EACRwZ,YAAa,I0B49BLnkC,KAAK6sC,gB1B19BG,CAChB/9B,EAPoB,CACpBs1B,UAAW,EACXxnB,MAAO,EACP+N,OAAQ,EACRwZ,YAAa,GAIbp1B,EARoB,CACpBq1B,UAAW,EACXxnB,MAAO,EACP+N,OAAQ,EACRwZ,YAAa,I0B69BLnkC,KAAKy7C,6B1B39BG,CAChB3sC,EAPoB,CACpBs1B,UAAW,EACXxnB,MAAO,EACP+N,OAAQ,EACRwZ,YAAa,GAIbp1B,EARoB,CACpBq1B,UAAW,EACXxnB,MAAO,EACP+N,OAAQ,EACRwZ,YAAa,G0B89BT,CACAsT,kBAAAA,CAAmBzjC,GAA6C,IAAtCujC,EAA4B1wC,UAAAhB,OAAA,QAAAU,IAAAM,UAAA,IAAAA,UAAA,GAClD,MAAMyrC,EAAWtyC,KAAKsyC,SAChBoJ,EAAuBpJ,EACvBA,EAASpW,aACT,CAAC,EACDyf,GAAW9rC,EAAAA,EAAAA,GAAA,GAAQ7P,KAAKk8B,cACxBge,E1Bn+BE,CAChBprC,EAPoB,CACpBs1B,UAAW,EACXxnB,MAAO,EACP+N,OAAQ,EACRwZ,YAAa,GAIbp1B,EARoB,CACpBq1B,UAAW,EACXxnB,MAAO,EACP+N,OAAQ,EACRwZ,YAAa,I0Bs+BAnkC,KAAKo6C,gBACLp6C,KAAKo6C,eAAejrC,QAAQqoC,aAC7Bx3C,KAAKg3C,eAAiBh3C,KAAK06C,0BAAuBn0C,GAEtDvG,KAAKw6C,gCAAkCjD,EACvC,MAAMqE,E1Bp+BA,CACd9sC,EAFe,CAAS8G,IAAK,EAAG9K,IAAK,GAGrCiE,EAHe,CAAS6G,IAAK,EAAG9K,IAAK,I0Bw+BvB+wC,GAFiBvJ,EAAWA,EAASjyB,YAAS9Z,MAC/BvG,KAAKykC,OAASzkC,KAAKykC,OAAOpkB,YAAS9Z,GAElD8nC,EAAQruC,KAAKsuC,WACbwN,GAAgBzN,GAASA,EAAME,QAAQ1oC,QAAU,EACjDk2C,EAAyBnyC,QAAQiyC,IAClCC,IAC0B,IAA3B97C,KAAKmP,QAAQujC,YACZ1yC,KAAKm2C,KAAK/jB,KAAK4pB,KAEpB,IAAIC,EADJj8C,KAAKi2C,kBAAoB,EAEzBj2C,KAAKk8C,eAAkB3nB,IACnB,MAAMvnB,EAAWunB,EAAS,IFj/B1C,IAAmBzmB,EAAGC,EE0/CNwS,EAAQtT,EAAMC,EAAIjG,EAxgBlBk1C,GAAajC,EAAYprC,EAAGkF,EAAMlF,EAAG9B,GACrCmvC,GAAajC,EAAYnrC,EAAGiF,EAAMjF,EAAG/B,GACrChN,KAAKi6C,eAAeC,GAChBl6C,KAAKg3C,gBACLh3C,KAAK06C,sBACL16C,KAAKykC,QACLzkC,KAAKo6C,gBACLp6C,KAAKo6C,eAAe3V,SACpBC,GAAqBkX,EAAgB57C,KAAKykC,OAAOgE,UAAWzoC,KAAKo6C,eAAe3V,OAAOgE,WAggB3FloB,EA/fWvgB,KAAKg3C,eA+fR/pC,EA/fwBjN,KAAK06C,qBA+fvBxtC,EA/f6C0uC,EA+fzC30C,EA/fyD+F,EAggBvFovC,GAAQ77B,EAAOzR,EAAG7B,EAAK6B,EAAG5B,EAAG4B,EAAG7H,GAChCm1C,GAAQ77B,EAAOxR,EAAG9B,EAAK8B,EAAG7B,EAAG6B,EAAG9H,GA5fZg1C,IFhgCLnuC,EEigCe9N,KAAKg3C,eFjgCjBjpC,EEigCiCkuC,EFhgC5C3K,GAAWxjC,EAAEgB,EAAGf,EAAEe,IAAMwiC,GAAWxjC,EAAEiB,EAAGhB,EAAEgB,MEigC7B/O,KAAKw0C,mBAAoB,GAExByH,IACDA,E1BrgCN,CACdntC,EAFe,CAAS8G,IAAK,EAAG9K,IAAK,GAGrCiE,EAHe,CAAS6G,IAAK,EAAG9K,IAAK,K0BugCrBulC,GAAY4L,EAAoBj8C,KAAKg3C,iBAErC6E,IACA77C,KAAKuyC,gBAAkBoJ,EL3gC3C,SAAmB5qC,EAAQsrC,EAAQvK,EAAM9kC,EAAU+uC,EAAwBD,GACnEC,GACAhrC,EAAOjE,QAAU6gB,GAAU,OAEVpnB,IAAjBurC,EAAKhlC,QAAwBglC,EAAKhlC,QAAU,EAAGkjC,GAAgBhjC,IAC/D+D,EAAOurC,YAAc3uB,QAA6BpnB,IAAnB81C,EAAOvvC,QAAwBuvC,EAAOvvC,QAAU,EAAG,EAAGojC,GAAiBljC,KAEjG8uC,IACL/qC,EAAOjE,QAAU6gB,QAA6BpnB,IAAnB81C,EAAOvvC,QAAwBuvC,EAAOvvC,QAAU,OAAoBvG,IAAjBurC,EAAKhlC,QAAwBglC,EAAKhlC,QAAU,EAAGE,IAKjI,IAAK,IAAIpH,EAAI,EAAGA,EAAI+pC,GAAY/pC,IAAK,CACjC,MAAM22C,EAAc,SAAHl6C,OAAYqtC,GAAQ9pC,GAAE,UACvC,IAAI42C,EAAe1M,GAAUuM,EAAQE,GACjCE,EAAa3M,GAAUgC,EAAMyK,QACZh2C,IAAjBi2C,QAA6Cj2C,IAAfk2C,IAElCD,IAAiBA,EAAe,GAChCC,IAAeA,EAAa,GACI,IAAjBD,GACI,IAAfC,GACA5M,GAAK2M,KAAkB3M,GAAK4M,IAE5B1rC,EAAOwrC,GAAe54C,KAAKmH,IAAI6iB,GAAUiiB,GAAS4M,GAAe5M,GAAS6M,GAAazvC,GAAW,IAC9F8R,GAAQxC,KAAKmgC,IAAe39B,GAAQxC,KAAKkgC,MACzCzrC,EAAOwrC,IAAgB,MAI3BxrC,EAAOwrC,GAAeE,EAE9B,EAIIJ,EAAOn5B,QAAU4uB,EAAK5uB,UACtBnS,EAAOmS,OAASyK,GAAU0uB,EAAOn5B,QAAU,EAAG4uB,EAAK5uB,QAAU,EAAGlW,GAExE,CKo+BoB0vC,CAAUf,EAAaD,EAAsB17C,KAAKk8B,aAAclvB,EAAU+uC,EAAwBD,IAEtG97C,KAAKwP,KAAKkpC,2BACV14C,KAAK4xC,iBACL5xC,KAAKi2C,kBAAoBjpC,CAAQ,EAErChN,KAAKk8C,eAAel8C,KAAKmP,QAAQqoC,WAAa,IAAO,EACzD,CACAn+B,cAAAA,CAAelK,GACXnP,KAAKo2C,gBAAgB,kBACrBp2C,KAAKwuC,kBAAoBxuC,KAAKwuC,iBAAiB/kC,OAC3CzJ,KAAK6yC,cAAgB7yC,KAAK6yC,aAAarE,kBACvCxuC,KAAK6yC,aAAarE,iBAAiB/kC,OAEnCzJ,KAAK86C,mBACL9kC,GAAYhW,KAAK86C,kBACjB96C,KAAK86C,sBAAmBv0C,GAO5BvG,KAAK86C,iBAAmB/kC,GAAMT,QAAO,KACjC82B,GAAsBC,wBAAyB,EAC/CrsC,KAAKwuC,iBE1iCrB,SAA4BtqC,EAAOynB,EAAWxc,GAC1C,MAAMwtC,EAAgBziC,GAAchW,GAASA,EAAQ2V,GAAY3V,GAEjE,OADAy4C,EAAch1C,MAAMkzB,GAAmB,GAAI8hB,EAAehxB,EAAWxc,IAC9DwtC,EAAc3yC,SACzB,CFsiCwC4yC,CAAmB,EArgCnC,KAqgCqD/sC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACtDV,GAAO,IACVie,SAAWmH,IACPv0B,KAAKk8C,eAAe3nB,GACpBplB,EAAQie,UAAYje,EAAQie,SAASmH,EAAO,EAEhDnM,WAAYA,KACRjZ,EAAQiZ,YAAcjZ,EAAQiZ,aAC9BpoB,KAAK68C,mBAAmB,KAG5B78C,KAAK6yC,eACL7yC,KAAK6yC,aAAarE,iBAAmBxuC,KAAKwuC,kBAE9CxuC,KAAK86C,sBAAmBv0C,CAAS,GAEzC,CACAs2C,iBAAAA,GACQ78C,KAAK6yC,eACL7yC,KAAK6yC,aAAarE,sBAAmBjoC,EACrCvG,KAAK6yC,aAAaR,qBAAkB9rC,GAExC,MAAM8nC,EAAQruC,KAAKsuC,WACnBD,GAASA,EAAMuE,wBACf5yC,KAAK6yC,aACD7yC,KAAKwuC,iBACDxuC,KAAKuyC,qBACDhsC,EACZvG,KAAKo2C,gBAAgB,oBACzB,CACAO,eAAAA,GACQ32C,KAAKwuC,mBACLxuC,KAAKk8C,gBAAkBl8C,KAAKk8C,eAriCpB,KAsiCRl8C,KAAKwuC,iBAAiB/kC,QAE1BzJ,KAAK68C,mBACT,CACAC,uBAAAA,GACI,MAAMhL,EAAO9xC,KAAKs6C,UAClB,IAAI,qBAAEK,EAAoB,OAAE5pC,EAAM,OAAE0zB,EAAM,aAAEvI,GAAiB4V,EAC7D,GAAK6I,GAAyB5pC,GAAW0zB,EAAzC,CAOA,GAAIzkC,OAAS8xC,GACT9xC,KAAKykC,QACLA,GACAsY,GAA0B/8C,KAAKmP,QAAQ6tC,cAAeh9C,KAAKykC,OAAOgE,UAAWhE,EAAOgE,WAAY,CAChG13B,EAAS/Q,KAAK+Q,Q1BtlCZ,CACdjC,EAFe,CAAS8G,IAAK,EAAG9K,IAAK,GAGrCiE,EAHe,CAAS6G,IAAK,EAAG9K,IAAK,I0BwlCzB,MAAMmyC,EAAUjZ,GAAWhkC,KAAKykC,OAAOgE,UAAU35B,GACjDiC,EAAOjC,EAAE8G,IAAMk8B,EAAK/gC,OAAOjC,EAAE8G,IAC7B7E,EAAOjC,EAAEhE,IAAMiG,EAAOjC,EAAE8G,IAAMqnC,EAC9B,MAAMC,EAAUlZ,GAAWhkC,KAAKykC,OAAOgE,UAAU15B,GACjDgC,EAAOhC,EAAE6G,IAAMk8B,EAAK/gC,OAAOhC,EAAE6G,IAC7B7E,EAAOhC,EAAEjE,IAAMiG,EAAOhC,EAAE6G,IAAMsnC,CAClC,CACA7M,GAAYsK,EAAsB5pC,GAMlC41B,GAAagU,EAAsBze,GAOnCmI,GAAarkC,KAAKy7C,6BAA8Bz7C,KAAK64C,gBAAiB8B,EAAsBze,EA/BlF,CAgCd,CACA0a,kBAAAA,CAAmBjJ,EAAUhN,GACpB3gC,KAAKk2C,YAAYzvC,IAAIknC,IACtB3tC,KAAKk2C,YAAY9yC,IAAIuqC,EAAU,IAAIgE,IAEzB3xC,KAAKk2C,YAAYnwC,IAAI4nC,GAC7Bh8B,IAAIgvB,GACV,MAAMwc,EAASxc,EAAKxxB,QAAQiuC,uBAC5Bzc,EAAKwN,QAAQ,CACTxiC,WAAYwxC,EAASA,EAAOxxC,gBAAapF,EACzC2rC,sBAAuBiL,GAAUA,EAAOE,4BAClCF,EAAOE,4BAA4B1c,QACnCp6B,GAEd,CACAkoC,MAAAA,GACI,MAAMJ,EAAQruC,KAAKsuC,WACnB,OAAOD,GAAQA,EAAMyD,OAAS9xC,IAClC,CACAs6C,OAAAA,GACI,IAAI3tC,EACJ,MAAM,SAAEghC,GAAa3tC,KAAKmP,QAC1B,OAAOw+B,IAAuC,QAA1BhhC,EAAK3M,KAAKsuC,kBAA+B,IAAP3hC,OAAgB,EAASA,EAAGmlC,OAAgB9xC,IACtG,CACAs9C,WAAAA,GACI,IAAI3wC,EACJ,MAAM,SAAEghC,GAAa3tC,KAAKmP,QAC1B,OAAOw+B,EAAsC,QAA1BhhC,EAAK3M,KAAKsuC,kBAA+B,IAAP3hC,OAAgB,EAASA,EAAGklC,cAAWtrC,CAChG,CACA+nC,QAAAA,GACI,MAAM,SAAEX,GAAa3tC,KAAKmP,QAC1B,GAAIw+B,EACA,OAAO3tC,KAAKwP,KAAK0mC,YAAYnwC,IAAI4nC,EACzC,CACAQ,OAAAA,GAAiE,IAAzD,WAAE2G,EAAU,WAAEnpC,EAAU,sBAAEumC,GAAwBrrC,UAAAhB,OAAA,QAAAU,IAAAM,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC1D,MAAMwnC,EAAQruC,KAAKsuC,WACfD,GACAA,EAAMF,QAAQnuC,KAAMkyC,GACpB4C,IACA90C,KAAK6sC,qBAAkBtmC,EACvBvG,KAAK80C,YAAa,GAElBnpC,GACA3L,KAAKguC,WAAW,CAAEriC,cAC1B,CACAyiC,QAAAA,GACI,MAAMC,EAAQruC,KAAKsuC,WACnB,QAAID,GACOA,EAAMD,SAASpuC,KAK9B,CACA+3C,oBAAAA,GACI,MAAM,cAAE1vC,GAAkBrI,KAAKmP,QAC/B,IAAK9G,EACD,OAEJ,IAAIk1C,GAAyB,EAK7B,MAAM,aAAErhB,GAAiB7zB,EAWzB,IAVI6zB,EAAalY,GACbkY,EAAahZ,QACbgZ,EAAa/Y,SACb+Y,EAAa9Y,SACb8Y,EAAa7Y,SACb6Y,EAAaxY,OACbwY,EAAavY,SACb45B,GAAyB,IAGxBA,EACD,OACJ,MAAMC,EAAc,CAAC,EACjBthB,EAAalY,GACbwvB,GAAyB,IAAKnrC,EAAem1C,EAAax9C,KAAKuyC,iBAGnE,IAAK,IAAI3sC,EAAI,EAAGA,EAAIytC,GAAcxtC,OAAQD,IACtC4tC,GAAyB,SAADnxC,OAAUgxC,GAAcztC,IAAMyC,EAAem1C,EAAax9C,KAAKuyC,iBACvFiB,GAAyB,OAADnxC,OAAQgxC,GAAcztC,IAAMyC,EAAem1C,EAAax9C,KAAKuyC,iBAIzFlqC,EAAcrH,SAEd,IAAK,MAAM+C,KAAOy5C,EACdn1C,EAAcqrC,eAAe3vC,EAAKy5C,EAAYz5C,IAC1C/D,KAAKuyC,kBACLvyC,KAAKuyC,gBAAgBxuC,GAAOy5C,EAAYz5C,IAKhDsE,EAAcupC,gBAClB,CACA6L,mBAAAA,CAAoBC,GAChB,IAAI/wC,EAAI+T,EACR,IAAK1gB,KAAK4mC,UAAY5mC,KAAK60C,MACvB,OACJ,IAAK70C,KAAKg2C,UACN,OAAO1C,GAEX,MAAMqK,EAAS,CACXpK,WAAY,IAEVhI,EAAoBvrC,KAAKg4C,uBAC/B,GAAIh4C,KAAK80C,WAQL,OAPA90C,KAAK80C,YAAa,EAClB6I,EAAO7wC,QAAU,GACjB6wC,EAAOC,cACHrO,GAAiC,OAAdmO,QAAoC,IAAdA,OAAuB,EAASA,EAAUE,gBAAkB,GACzGD,EAAOjhC,UAAY6uB,EACbA,EAAkBvrC,KAAKk8B,aAAc,IACrC,OACCyhB,EAEX,MAAM7L,EAAO9xC,KAAKs6C,UAClB,IAAKt6C,KAAK6sC,kBAAoB7sC,KAAKykC,SAAWqN,EAAK/gC,OAAQ,CACvD,MAAM8sC,EAAc,CAAC,EAerB,OAdI79C,KAAKmP,QAAQw+B,WACbkQ,EAAY/wC,aACsBvG,IAA9BvG,KAAKk8B,aAAapvB,QACZ9M,KAAKk8B,aAAapvB,QAClB,EACV+wC,EAAYD,cACRrO,GAAiC,OAAdmO,QAAoC,IAAdA,OAAuB,EAASA,EAAUE,gBAAkB,IAEzG59C,KAAK+1C,eAAiBpQ,GAAa3lC,KAAKk8B,gBACxC2hB,EAAYnhC,UAAY6uB,EAClBA,EAAkB,CAAC,EAAG,IACtB,OACNvrC,KAAK+1C,cAAe,GAEjB8H,CACX,CACA,MAAMC,EAAiBhM,EAAKS,iBAAmBT,EAAK5V,aACpDl8B,KAAK88C,0BACLa,EAAOjhC,UGrwCnB,SAAkC1I,EAAO44B,EAAWmR,GAChD,IAAIrhC,EAAY,GAOhB,MAAMshC,EAAahqC,EAAMlF,EAAEs1B,UAAYwI,EAAU99B,EAC3CmvC,EAAajqC,EAAMjF,EAAEq1B,UAAYwI,EAAU79B,EAC3CmvC,GAAkC,OAApBH,QAAgD,IAApBA,OAA6B,EAASA,EAAgB/5B,IAAM,EAW5G,IAVIg6B,GAAcC,GAAcC,KAC5BxhC,EAAY,eAAHra,OAAkB27C,EAAU,QAAA37C,OAAO47C,EAAU,QAAA57C,OAAO67C,EAAU,SAMvD,IAAhBtR,EAAU99B,GAA2B,IAAhB89B,EAAU79B,IAC/B2N,GAAa,SAAJra,OAAa,EAAIuqC,EAAU99B,EAAC,MAAAzM,OAAK,EAAIuqC,EAAU79B,EAAC,OAEzDgvC,EAAiB,CACjB,MAAM,qBAAE75B,EAAoB,OAAEhB,EAAM,QAAEC,EAAO,QAAEC,EAAO,MAAEM,EAAK,MAAEC,GAAUo6B,EACrE75B,IACAxH,EAAY,eAAHra,OAAkB6hB,EAAoB,QAAA7hB,OAAOqa,IACtDwG,IACAxG,GAAa,UAAJra,OAAc6gB,EAAM,UAC7BC,IACAzG,GAAa,WAAJra,OAAe8gB,EAAO,UAC/BC,IACA1G,GAAa,WAAJra,OAAe+gB,EAAO,UAC/BM,IACAhH,GAAa,SAAJra,OAAaqhB,EAAK,UAC3BC,IACAjH,GAAa,SAAJra,OAAashB,EAAK,SACnC,CAKA,MAAMw6B,EAAgBnqC,EAAMlF,EAAE8N,MAAQgwB,EAAU99B,EAC1CsvC,EAAgBpqC,EAAMjF,EAAE6N,MAAQgwB,EAAU79B,EAIhD,OAHsB,IAAlBovC,GAAyC,IAAlBC,IACvB1hC,GAAa,SAAJra,OAAa87C,EAAa,MAAA97C,OAAK+7C,EAAa,MAElD1hC,GAAa,MACxB,CHutC+B2hC,CAAyBr+C,KAAKy7C,6BAA8Bz7C,KAAK4sC,UAAWkR,GAC3FvS,IACAoS,EAAOjhC,UAAY6uB,EAAkBuS,EAAgBH,EAAOjhC,YAEhE,MAAM,EAAE5N,EAAC,EAAEC,GAAM/O,KAAK6sC,gBACtB8Q,EAAOW,gBAAkB,GAAHj8C,OAAiB,IAAXyM,EAAE6b,OAAY,MAAAtoB,OAAgB,IAAX0M,EAAE4b,OAAY,OACzDmnB,EAAKS,gBAKLoL,EAAO7wC,QACHglC,IAAS9xC,KACiG,QAAnG0gB,EAAuC,QAAjC/T,EAAKmxC,EAAehxC,eAA4B,IAAPH,EAAgBA,EAAK3M,KAAKk8B,aAAapvB,eAA4B,IAAP4T,EAAgBA,EAAK,EACjI1gB,KAAKqyC,gBACDryC,KAAKk8B,aAAapvB,QAClBgxC,EAAexB,YAO7BqB,EAAO7wC,QACHglC,IAAS9xC,UACwBuG,IAA3Bu3C,EAAehxC,QACXgxC,EAAehxC,QACf,QAC2BvG,IAA/Bu3C,EAAexB,YACXwB,EAAexB,YACf,EAKlB,IAAK,MAAMv4C,KAAOopC,GAAiB,CAC/B,QAA4B5mC,IAAxBu3C,EAAe/5C,GACf,SACJ,MAAM,QAAE2oC,EAAO,QAAEsC,GAAY7B,GAAgBppC,GAOvCw6C,EAAiC,SAArBZ,EAAOjhC,UACnBohC,EAAe/5C,GACf2oC,EAAQoR,EAAe/5C,GAAM+tC,GACnC,GAAI9C,EAAS,CACT,MAAMwP,EAAMxP,EAAQnpC,OACpB,IAAK,IAAID,EAAI,EAAGA,EAAI44C,EAAK54C,IACrB+3C,EAAO3O,EAAQppC,IAAM24C,CAE7B,MAEIZ,EAAO55C,GAAOw6C,CAEtB,CAYA,OANIv+C,KAAKmP,QAAQw+B,WACbgQ,EAAOC,cACH9L,IAAS9xC,KACHuvC,GAAiC,OAAdmO,QAAoC,IAAdA,OAAuB,EAASA,EAAUE,gBAAkB,GACrG,QAEPD,CACX,CACAnF,aAAAA,GACIx4C,KAAKoyC,WAAapyC,KAAKsyC,cAAW/rC,CACtC,CAEAk4C,SAAAA,GACIz+C,KAAKwP,KAAKgmC,MAAM3xC,SAAS88B,IAAW,IAAIh0B,EAAI,OAAwC,QAAhCA,EAAKg0B,EAAK6N,wBAAqC,IAAP7hC,OAAgB,EAASA,EAAGlD,MAAM,IAC9HzJ,KAAKwP,KAAKgmC,MAAM3xC,QAAQu0C,IACxBp4C,KAAKwP,KAAK0mC,YAAYhhC,OAC1B,EAER,CACA,SAASu2B,GAAa9K,GAClBA,EAAK8K,cACT,CACA,SAAS8M,GAAmB5X,GACxB,IAAIh0B,EACJ,MAAM2lC,GAAuC,QAA1B3lC,EAAKg0B,EAAKyR,kBAA+B,IAAPzlC,OAAgB,EAASA,EAAG2lC,WAAa3R,EAAK2R,SACnG,GAAI3R,EAAK8N,UACL9N,EAAK8D,QACL6N,GACA3R,EAAK4V,aAAa,aAAc,CAChC,MAAQ9N,UAAWhE,EAAQiV,YAAagF,GAAmB/d,EAAK8D,QAC1D,cAAEuY,GAAkBrc,EAAKxxB,QACzBorC,EAAWjI,EAASjyB,SAAWsgB,EAAK8D,OAAOpkB,OAG3B,SAAlB28B,EACAzX,IAAUtB,IACN,MAAM0a,EAAepE,EACfjI,EAASoH,YAAYzV,GACrBqO,EAAS7J,UAAUxE,GACnBp+B,EAASm+B,GAAW2a,GAC1BA,EAAa/oC,IAAM6uB,EAAOR,GAAMruB,IAChC+oC,EAAa7zC,IAAM6zC,EAAa/oC,IAAM/P,CAAM,IAG3Ck3C,GAA0BC,EAAe1K,EAAS7J,UAAWhE,IAClEc,IAAUtB,IACN,MAAM0a,EAAepE,EACfjI,EAASoH,YAAYzV,GACrBqO,EAAS7J,UAAUxE,GACnBp+B,EAASm+B,GAAWS,EAAOR,IACjC0a,EAAa7zC,IAAM6zC,EAAa/oC,IAAM/P,EAIlC86B,EAAKqW,iBAAmBrW,EAAK6N,mBAC7B7N,EAAK6T,mBAAoB,EACzB7T,EAAKqW,eAAe/S,GAAMn5B,IACtB61B,EAAKqW,eAAe/S,GAAMruB,IAAM/P,EACxC,IAGR,MAAM+4C,E1B33CM,CAChB9vC,EAPoB,CACpBs1B,UAAW,EACXxnB,MAAO,EACP+N,OAAQ,EACRwZ,YAAa,GAIbp1B,EARoB,CACpBq1B,UAAW,EACXxnB,MAAO,EACP+N,OAAQ,EACRwZ,YAAa,I0B83CTE,GAAaua,EAAana,EAAQ6N,EAAS7J,WAC3C,MAAMoW,E1B73CM,CAChB/vC,EAPoB,CACpBs1B,UAAW,EACXxnB,MAAO,EACP+N,OAAQ,EACRwZ,YAAa,GAIbp1B,EARoB,CACpBq1B,UAAW,EACXxnB,MAAO,EACP+N,OAAQ,EACRwZ,YAAa,I0Bg4CLoW,EACAlW,GAAawa,EAAale,EAAKkZ,eAAe6E,GAAgB,GAAOpM,EAASoH,aAG9ErV,GAAawa,EAAapa,EAAQ6N,EAAS7J,WAE/C,MAAMwD,GAAoBoF,GAAYuN,GACtC,IAAI/H,GAA2B,EAC/B,IAAKlW,EAAKyR,WAAY,CAClB,MAAMgI,EAAiBzZ,EAAK8Z,6BAK5B,GAAIL,IAAmBA,EAAehI,WAAY,CAC9C,MAAQE,SAAUwM,EAAgBra,OAAQsa,GAAiB3E,EAC3D,GAAI0E,GAAkBC,EAAc,CAChC,MAAMC,E1B14CR,CACdlwC,EAFe,CAAS8G,IAAK,EAAG9K,IAAK,GAGrCiE,EAHe,CAAS6G,IAAK,EAAG9K,IAAK,I0B44CrB45B,GAAqBsa,EAAkB1M,EAAS7J,UAAWqW,EAAerW,WAC1E,MAAMmT,E1B54CR,CACd9sC,EAFe,CAAS8G,IAAK,EAAG9K,IAAK,GAGrCiE,EAHe,CAAS6G,IAAK,EAAG9K,IAAK,I0B84CrB45B,GAAqBkX,EAAgBnX,EAAQsa,EAAatW,WACrD+I,GAAiBwN,EAAkBpD,KACpC/E,GAA2B,GAE3BuD,EAAejrC,QAAQqoC,aACvB7W,EAAKqW,eAAiB4E,EACtBjb,EAAK+Z,qBAAuBsE,EAC5Bre,EAAKyZ,eAAiBA,EAE9B,CACJ,CACJ,CACAzZ,EAAKyV,gBAAgB,YAAa,CAC9B3R,SACA6N,WACAt+B,MAAO6qC,EACPD,cACA3S,mBACA4K,4BAER,MACK,GAAIlW,EAAK8N,SAAU,CACpB,MAAM,eAAE/rC,GAAmBi+B,EAAKxxB,QAChCzM,GAAkBA,GACtB,CAMAi+B,EAAKxxB,QAAQxD,gBAAapF,CAC9B,CACA,SAASkvC,GAAoB9U,GAIrBwS,IACAJ,GAAQC,aAEPrS,EAAKtwB,SAQLswB,EAAKia,iBACNja,EAAK6T,kBAAoB7T,EAAKtwB,OAAOmkC,mBAOzC7T,EAAK8T,0BAA4B9T,EAAK8T,wBAA0B7qC,QAAQ+2B,EAAK6T,mBACzE7T,EAAKtwB,OAAOmkC,mBACZ7T,EAAKtwB,OAAOokC,0BAChB9T,EAAK+T,mBAAqB/T,EAAK+T,iBAAmB/T,EAAKtwB,OAAOqkC,kBAClE,CACA,SAASkB,GAAgBjV,GACrBA,EAAK6T,kBACD7T,EAAK8T,wBACD9T,EAAK+T,kBACD,CAChB,CACA,SAAS8D,GAAc7X,GACnBA,EAAK6X,eACT,CACA,SAASJ,GAAkBzX,GACvBA,EAAKyX,mBACT,CACA,SAASC,GAAmB1X,GACxBA,EAAK8R,eAAgB,CACzB,CACA,SAAS6F,GAAoB3X,GACzB,MAAM,cAAEt4B,GAAkBs4B,EAAKxxB,QAC3B9G,GAAiBA,EAAcQ,WAAWo2C,uBAC1C52C,EAAcyO,OAAO,uBAEzB6pB,EAAK0T,gBACT,CACA,SAASsC,GAAgBhW,GACrBA,EAAKgW,kBACLhW,EAAKuZ,YAAcvZ,EAAKqW,eAAiBrW,EAAK5vB,YAASxK,EACvDo6B,EAAK6T,mBAAoB,CAC7B,CACA,SAASkB,GAAmB/U,GACxBA,EAAK+U,oBACT,CACA,SAASC,GAAehV,GACpBA,EAAKgV,gBACT,CACA,SAASoC,GAAqBpX,GAC1BA,EAAKoX,sBACT,CACA,SAASU,GAAoBpK,GACzBA,EAAMyE,oBACV,CACA,SAASqJ,GAAa57B,EAAQvM,EAAO/M,GACjCsZ,EAAO6jB,UAAYzW,GAAU3Z,EAAMowB,UAAW,EAAGn9B,GACjDsZ,EAAO3D,MAAQ+Q,GAAU3Z,EAAM4I,MAAO,EAAG3V,GACzCsZ,EAAOoK,OAAS3W,EAAM2W,OACtBpK,EAAO4jB,YAAcnwB,EAAMmwB,WAC/B,CACA,SAASiY,GAAQ77B,EAAQtT,EAAMC,EAAIjG,GAC/BsZ,EAAO3K,IAAM+X,GAAU1gB,EAAK2I,IAAK1I,EAAG0I,IAAK3O,GACzCsZ,EAAOzV,IAAM6iB,GAAU1gB,EAAKnC,IAAKoC,EAAGpC,IAAK7D,EAC7C,CAKA,SAAS+0C,GAAoBrb,GACzB,OAAQA,EAAK4R,sBAAwDhsC,IAArCo6B,EAAK4R,gBAAgB+J,WACzD,CACA,MAAMpF,GAA0B,CAC5BrsC,SAAU,IACVsD,KAAM,CAAC,GAAK,EAAG,GAAK,IAElB+wC,GAAqBC,GAAgC,qBAAdC,WACzCA,UAAUC,WACVD,UAAUC,UAAU7kC,cAAc1U,SAASq5C,GAMzCG,GAAaJ,GAAkB,kBAAoBA,GAAkB,WACrEv7C,KAAK6J,MACL4F,EACN,SAASqmC,GAAUxV,GAEfA,EAAKruB,IAAM0pC,GAAWrb,EAAKruB,KAC3BquB,EAAKn5B,IAAMw0C,GAAWrb,EAAKn5B,IAC/B,CAKA,SAASiyC,GAA0BC,EAAe1K,EAAU7N,GACxD,MAA0B,aAAlBuY,GACe,oBAAlBA,I5B3hDO94C,E4B4hDIutC,GAAYa,G5B5hDTvhC,E4B4hDoB0gC,GAAYhN,G5B5hDxB8a,E4B4hDiC,K5B3hDrD57C,KAAKgY,IAAIzX,EAAQ6M,IAAWwuC,IADvC,IAAgBr7C,EAAO6M,EAAQwuC,C4B6hD/B,CACA,SAAS5F,GAAuBhZ,GAC5B,IAAIh0B,EACJ,OAAOg0B,IAASA,EAAKnxB,OAAgC,QAAtB7C,EAAKg0B,EAAKyJ,cAA2B,IAAPz9B,OAAgB,EAASA,EAAGssC,QAC7F,CIziDA,MAAMuG,GAAyBxL,GAAqB,CAChDC,qBAAsBA,CAAC3yC,EAAKwV,IAAWuqB,GAAY//B,EAAK,SAAUwV,GAClEq9B,cAAeA,KAAA,CACXrlC,EAAG/M,SAAS09C,gBAAgBC,YAAc39C,SAAS49C,KAAKD,WACxD3wC,EAAGhN,SAAS09C,gBAAgBG,WAAa79C,SAAS49C,KAAKC,YAE3DxL,kBAAmBA,KAAM,ICNvBlK,GAAqB,CACvB/pC,aAASoG,GAEPs5C,GAAqB7L,GAAqB,CAC5CG,cAAgBvN,IAAQ,CACpB93B,EAAG83B,EAAS8Y,WACZ3wC,EAAG63B,EAASgZ,YAEhB1L,cAAeA,KACX,IAAKhK,GAAmB/pC,QAAS,CAC7B,MAAM2/C,EAAe,IAAIN,GAAuB,CAAC,GACjDM,EAAa/e,MAAM33B,QACnB02C,EAAa9R,WAAW,CAAE+K,cAAc,IACxC7O,GAAmB/pC,QAAU2/C,CACjC,CACA,OAAO5V,GAAmB/pC,OAAO,EAErCk0C,eAAgBA,CAACzN,EAAU1iC,KACvB0iC,EAAS9kC,MAAM4a,eAAsBnW,IAAVrC,EAAsBA,EAAQ,MAAM,EAEnEkwC,kBAAoBxN,GAAah9B,QAAuD,UAA/CR,OAAO4gB,iBAAiB4c,GAAUmZ,YClBzE9X,GAAO,CACT+X,IAAK,CACDtf,QvBKR,cAAyBA,GACrBn3B,WAAAA,GACIihB,SAAS3jB,WACT7G,KAAKigD,0BAA4B7sC,CACrC,CACA8sC,aAAAA,CAAcC,GACVngD,KAAKogD,QAAU,IAAIxe,GAAWue,EAAkBngD,KAAKqgD,oBAAqB,CACtEr5C,mBAAoBhH,KAAK2gC,KAAKsI,wBAC9BnH,cAAemF,GAAiBjnC,KAAK2gC,OAE7C,CACA0f,iBAAAA,GACI,MAAM,kBAAEC,EAAiB,WAAEC,EAAU,MAAEC,EAAK,SAAEC,GAAazgD,KAAK2gC,KAAK93B,WACrE,MAAO,CACHy6B,eAAgB4I,GAAaoU,GAC7B3d,QAASuJ,GAAaqU,GACtB3d,OAAQ4d,EACRvd,MAAOA,CAAC/yB,EAAOiyB,YACJniC,KAAKogD,QACRK,GACA1qC,GAAMP,YAAW,IAAMirC,EAASvwC,EAAOiyB,IAC3C,EAGZ,CACApB,KAAAA,GACI/gC,KAAKigD,0BAA4Bve,GAAgB1hC,KAAK2gC,KAAKxgC,QAAS,eAAgB+P,GAAUlQ,KAAKkgD,cAAchwC,IACrH,CACAoF,MAAAA,GACItV,KAAKogD,SAAWpgD,KAAKogD,QAAQ5c,eAAexjC,KAAKqgD,oBACrD,CACApf,OAAAA,GACIjhC,KAAKigD,4BACLjgD,KAAKogD,SAAWpgD,KAAKogD,QAAQpd,KACjC,IuBrCAiF,KAAM,CACFvH,QCNR,cAA0BA,GACtBn3B,WAAAA,CAAYo3B,GACRnW,MAAMmW,GACN3gC,KAAK0gD,oBAAsBttC,EAC3BpT,KAAKujC,gBAAkBnwB,EACvBpT,KAAKgL,SAAW,IAAIs8B,GAA0B3G,EAClD,CACAI,KAAAA,GAGI,MAAM,aAAE4f,GAAiB3gD,KAAK2gC,KAAK93B,WAC/B83C,IACA3gD,KAAK0gD,oBAAsBC,EAAa/5C,UAAU5G,KAAKgL,WAE3DhL,KAAKujC,gBAAkBvjC,KAAKgL,SAAS0gC,gBAAkBt4B,CAC3D,CACA6tB,OAAAA,GACIjhC,KAAK0gD,sBACL1gD,KAAKujC,iBACT,GDZIqd,eAAgBf,GAChB9Q,cAAaA,KEPrB,SAAS8R,GAAiBlgB,EAAMzwB,EAAO4wC,GACnC,MAAM,MAAE7gD,GAAU0gC,EACdA,EAAK3E,gBAAkB/7B,EAAMogC,YAC7BM,EAAK3E,eAAe+D,UAAU,aAA4B,UAAd+gB,GAEhD,MACM73C,EAAWhJ,EADE,UAAY6gD,GAE3B73C,GACA8M,GAAMP,YAAW,IAAMvM,EAASiH,EAAOoxB,GAAiBpxB,KAEhE,CCVA,SAAS6wC,GAAiBpgB,EAAMzwB,EAAO4wC,GACnC,MAAM,MAAE7gD,GAAU0gC,EACdA,EAAK3E,gBAAkB/7B,EAAMqgC,UAC7BK,EAAK3E,eAAe+D,UAAU,WAA0B,UAAd+gB,GAE9C,MACM73C,EAAWhJ,EADE,SAAyB,QAAd6gD,EAAsB,GAAKA,IAErD73C,GACA8M,GAAMP,YAAW,IAAMvM,EAASiH,EAAOoxB,GAAiBpxB,KAEhE,C,kBCVM8wC,GAAoB,IAAI3Z,QAMxB4Z,GAAY,IAAI5Z,QAChB6Z,GAAwBC,IAC1B,MAAMl4C,EAAW+3C,GAAkBj7C,IAAIo7C,EAAMpwC,QAC7C9H,GAAYA,EAASk4C,EAAM,EAEzBC,GAA4BC,IAC9BA,EAAQx9C,QAAQq9C,GAAqB,EAqBzC,SAASI,GAAoBvhD,EAASoP,EAASlG,GAC3C,MAAMs4C,EApBV,SAAiCpgD,GAAuB,IAAtB,KAAEqO,GAAkBrO,EAATgO,GAAOud,EAAAA,EAAAA,GAAAvrB,EAAAwrB,IAChD,MAAM60B,EAAahyC,GAAQzN,SAItBk/C,GAAUx6C,IAAI+6C,IACfP,GAAU79C,IAAIo+C,EAAY,CAAC,GAE/B,MAAMC,EAAgBR,GAAUl7C,IAAIy7C,GAC9Bz9C,EAAM29C,KAAKC,UAAUxyC,GAQ3B,OAHKsyC,EAAc19C,KACf09C,EAAc19C,GAAO,IAAI69C,qBAAqBR,IAAwBvxC,EAAAA,EAAAA,GAAA,CAAIL,QAASL,KAEhFsyC,EAAc19C,EACzB,CAEsC89C,CAAyB1yC,GAG3D,OAFA6xC,GAAkB59C,IAAIrD,EAASkJ,GAC/Bs4C,EAA0BO,QAAQ/hD,GAC3B,KACHihD,GAAkBt9C,OAAO3D,GACzBwhD,EAA0BQ,UAAUhiD,EAAQ,CAEpD,CC3CA,MAAMiiD,GAAiB,CACnB5vB,KAAM,EACNroB,IAAK,GCAT,MAAMk4C,GAAoB,CACtBC,OAAQ,CACJxhB,QDAR,cAA4BA,GACxBn3B,WAAAA,GACIihB,SAAS3jB,WACT7G,KAAKmiD,gBAAiB,EACtBniD,KAAKoiD,UAAW,CACpB,CACAC,aAAAA,GACIriD,KAAKihC,UACL,MAAM,SAAEqhB,EAAW,CAAC,GAAMtiD,KAAK2gC,KAAK93B,YAC9B,KAAE2G,EAAMkT,OAAQ6/B,EAAU,OAAEC,EAAS,OAAM,KAAEC,GAASH,EACtDnzC,EAAU,CACZK,KAAMA,EAAOA,EAAKrP,aAAUoG,EAC5Bg8C,aACAG,UAA6B,kBAAXF,EAAsBA,EAASR,GAAeQ,IA+BpE,OAAOlB,GAAoBthD,KAAK2gC,KAAKxgC,QAASgP,GA7BhBgyC,IAC1B,MAAM,eAAEwB,GAAmBxB,EAI3B,GAAInhD,KAAKoiD,WAAaO,EAClB,OAMJ,GALA3iD,KAAKoiD,SAAWO,EAKZF,IAASE,GAAkB3iD,KAAKmiD,eAChC,OAEKQ,IACL3iD,KAAKmiD,gBAAiB,GAEtBniD,KAAK2gC,KAAK3E,gBACVh8B,KAAK2gC,KAAK3E,eAAe+D,UAAU,cAAe4iB,GAMtD,MAAM,gBAAEC,EAAe,gBAAEC,GAAoB7iD,KAAK2gC,KAAK93B,WACjDI,EAAW05C,EAAiBC,EAAkBC,EACpD55C,GAAYA,EAASk4C,EAAM,GAGnC,CACApgB,KAAAA,GACI/gC,KAAKqiD,eACT,CACA/sC,MAAAA,GACI,GAAoC,qBAAzBssC,qBACP,OACJ,MAAM,MAAE3hD,EAAK,UAAEH,GAAcE,KAAK2gC,KAC5BmiB,EAAoB,CAAC,SAAU,SAAU,QAAQ1wB,KAO/D,SAAiCjxB,GAA0D,IAAzD,SAAEmhD,EAAW,CAAC,GAAGnhD,GAAImhD,SAAUS,EAAe,CAAC,GAAGl8C,UAAAhB,OAAA,QAAAU,IAAAM,UAAA,GAAAA,UAAA,GAAG,CAAC,EACpF,OAAQma,GAASshC,EAASthC,KAAU+hC,EAAa/hC,EACrD,CAToEgiC,CAAyB/iD,EAAOH,IACxFgjD,GACA9iD,KAAKqiD,eAEb,CACAphB,OAAAA,GAAY,ICxDZgiB,IAAK,CACDviB,QHMR,cAA2BA,GACvBK,KAAAA,GACI,MAAM,QAAE5gC,GAAYH,KAAK2gC,KACpBxgC,IAELH,KAAKihC,QAAU7vB,EAAMjR,GAAUsR,IAC3BsvC,GAAiB/gD,KAAK2gC,KAAMlvB,EAAY,SACjC,CAACK,EAAQ3Q,KAAA,IAAE,QAAE4Q,GAAS5Q,EAAA,OAAK4/C,GAAiB/gD,KAAK2gC,KAAM7uB,EAAUC,EAAU,MAAQ,SAAS,IACpG,CAAEK,gBAAiBpS,KAAK2gC,KAAK1gC,MAAMijD,kBAC1C,CACAjiB,OAAAA,GAAY,IGdZkiB,MAAO,CACHziB,QCTR,cAA2BA,GACvBn3B,WAAAA,GACIihB,SAAS3jB,WACT7G,KAAK2+B,UAAW,CACpB,CACAykB,OAAAA,GACI,IAAIC,GAAiB,EAOrB,IACIA,EAAiBrjD,KAAK2gC,KAAKxgC,QAAQmjD,QAAQ,iBAC/C,CACA,MAAOv2C,GACHs2C,GAAiB,CACrB,CACKA,GAAmBrjD,KAAK2gC,KAAK3E,iBAElCh8B,KAAK2gC,KAAK3E,eAAe+D,UAAU,cAAc,GACjD//B,KAAK2+B,UAAW,EACpB,CACA4kB,MAAAA,GACSvjD,KAAK2+B,UAAa3+B,KAAK2gC,KAAK3E,iBAEjCh8B,KAAK2gC,KAAK3E,eAAe+D,UAAU,cAAc,GACjD//B,KAAK2+B,UAAW,EACpB,CACAoC,KAAAA,GACI/gC,KAAKihC,QAAUrS,GAAKyS,GAAYrhC,KAAK2gC,KAAKxgC,QAAS,SAAS,IAAMH,KAAKojD,YAAY/hB,GAAYrhC,KAAK2gC,KAAKxgC,QAAS,QAAQ,IAAMH,KAAKujD,WACzI,CACAtiB,OAAAA,GAAY,IDtBZuiB,MAAO,CACH9iB,QJAR,cAA2BA,GACvBK,KAAAA,GACI,MAAM,QAAE5gC,GAAYH,KAAK2gC,KACpBxgC,IAELH,KAAKihC,Q1JAb,SAAe/xB,EAAmBu0C,GAA4B,IAAdt0C,EAAOtI,UAAAhB,OAAA,QAAAU,IAAAM,UAAA,GAAAA,UAAA,GAAG,CAAC,EACvD,MAAOuI,EAAUkC,EAAc7G,GAAUwE,EAAaC,EAAmBC,GACnEu0C,EAAiBzzC,GAAc0zC,IACjC,MAAM,OAAE5yC,GAAW4yC,EACbC,EAAaH,EAAaE,GAChC,GAA0B,oBAAfC,IAA8B7yC,EACrC,OACJ,MAAM8yC,EAAiB5zC,GAAc6zC,IACjCF,EAAWE,GACX/yC,EAAOiB,oBAAoB,eAAgB6xC,EAAe,IAE9D9yC,EAAOuB,iBAAiB,eAAgBuxC,EAAgBvyC,EAAa,IAKzE,OAHAlC,EAASvL,SAAS9D,IACdA,EAAQuS,iBAAiB,eAAgBoxC,EAAgBpyC,EAAa,IAEnE7G,CACX,C0JjBuB+4C,CAAMrjD,GAAUsR,IAC3BovC,GAAiB7gD,KAAK2gC,KAAMlvB,EAAY,SAChCK,GAAa+uC,GAAiB7gD,KAAK2gC,KAAM7uB,EAAU,UAEnE,CACAmvB,OAAAA,GAAY,KMvBVwD,GAAS,CACXA,OAAQ,CACJmc,eAAgBf,GAChB9Q,cAAaA,KCHfgV,IAAch9C,EAAAA,GAAAA,eAAc,CAAEi9C,QAAQ,I,eCA5C,MAAMC,IAAgBl9C,EAAAA,GAAAA,eAAc,CAAC,GCCrC,SAAS02B,GAAsBx9B,GAC3B,OAAQwH,EAAoBxH,EAAM4M,UAC9B9D,EAAaqpB,MAAMpR,GAAS7Y,EAAelI,EAAM+gB,KACzD,CACA,SAASkjC,GAAcjkD,GACnB,OAAO2J,QAAQ6zB,GAAsBx9B,IAAUA,EAAM0I,SACzD,CCNA,SAASw7C,GAAuBlkD,GAC5B,MAAM,QAAEwC,EAAO,QAAEoK,GCFrB,SAAgC5M,EAAOsD,GACnC,GAAIk6B,GAAsBx9B,GAAQ,CAC9B,MAAM,QAAEwC,EAAO,QAAEoK,GAAY5M,EAC7B,MAAO,CACHwC,SAAqB,IAAZA,GAAqB0F,EAAe1F,GACvCA,OACA8D,EACNsG,QAAS1E,EAAe0E,GAAWA,OAAUtG,EAErD,CACA,OAAyB,IAAlBtG,EAAMmkD,QAAoB7gD,EAAU,CAAC,CAChD,CDTiC8gD,CAAuBpkD,GAAOwB,EAAAA,GAAAA,YAAWwiD,KACtE,OAAOzgD,EAAAA,GAAAA,UAAQ,KAAM,CAAGf,UAASoK,aAAY,CAACy3C,GAA0B7hD,GAAU6hD,GAA0Bz3C,IAChH,CACA,SAASy3C,GAA0B5mB,GAC/B,OAAO71B,MAAMC,QAAQ41B,GAAQA,EAAK13B,KAAK,KAAO03B,CAClD,C,eEVA,MAAM6mB,GAAe,CACjBv6C,UAAW,CACP,UACA,WACA,aACA,WACA,OACA,cACA,aACA,aAEJy2B,KAAM,CAAC,QACPwH,KAAM,CAAC,OAAQ,gBACfkb,MAAO,CAAC,cACRK,MAAO,CAAC,aAAc,eAAgB,cACtCP,IAAK,CAAC,WAAY,QAAS,aAAc,eACzCjD,IAAK,CAAC,QAAS,aAAc,oBAAqB,YAClDkC,OAAQ,CAAC,cAAe,kBAAmB,mBAC3Czd,OAAQ,CAAC,SAAU,aAEjB+f,GAAqB,CAAC,EAC5B,IAAK,MAAMzgD,MAAOwgD,GACdC,GAAmBzgD,IAAO,CACtB0gD,UAAYxkD,GAAUskD,GAAaxgD,IAAKquB,MAAMpR,KAAW/gB,EAAM+gB,MCvBvE,MAAM0jC,GAAwBC,OAAOC,IAAI,yBCOzC,SAASC,GAAaC,EAAaz8C,EAAe08C,GAC9C,OAAO7hD,EAAAA,GAAAA,cAAa0jC,IACZA,GACAke,EAAYE,SAAWF,EAAYE,QAAQpe,GAE3Cv+B,IACIu+B,EACAv+B,EAAc04B,MAAM6F,GAGpBv+B,EAAc44B,WAGlB8jB,IAC2B,oBAAhBA,EACPA,EAAYne,GAEP7C,GAAYghB,KACjBA,EAAY5kD,QAAUymC,GAE9B,GAOJ,CAACv+B,GACL,C,yBCxBA,SAAS48C,GAAiB1X,EAAWuX,EAAa7kD,EAAOilD,EAAqBC,GAC1E,IAAIx4C,EAAI+T,EACR,MAAQrY,cAAegI,IAAW5O,EAAAA,GAAAA,YAAWwiD,IACvCmB,GAAc3jD,EAAAA,GAAAA,YAAWsiD,IACzBrnB,GAAkBj7B,EAAAA,GAAAA,YAAWuC,GAAAA,GAC7BqhD,GAAsB5jD,EAAAA,GAAAA,YAAWC,GAAAA,GAAqByF,cACtDm+C,GAAmB/jD,EAAAA,GAAAA,QAAO,MAIhC2jD,EAAsBA,GAAuBE,EAAYG,UACpDD,EAAiBnlD,SAAW+kD,IAC7BI,EAAiBnlD,QAAU+kD,EAAoB3X,EAAW,CACtDuX,cACAz0C,SACApQ,QACAy8B,kBACAgD,wBAAuBhD,IACW,IAA5BA,EAAgBj6B,QAEtB4iD,yBAGR,MAAMh9C,EAAgBi9C,EAAiBnlD,QAKjCqlD,GAA2B/jD,EAAAA,GAAAA,YAAW0qC,KACxC9jC,GACCA,EAAcggC,aACf8c,GACwB,SAAvB98C,EAAc6D,MAA0C,QAAvB7D,EAAc6D,MA2DxD,SAA8B7D,EAAepI,EAAOklD,EAA2B/H,GAC3E,MAAM,SAAEzP,EAAQ,OAAElJ,EAAM,KAAEwD,EAAI,gBAAEsB,EAAe,aAAEwP,EAAY,WAAEvB,GAAgBv3C,EAC/EoI,EAAcggC,WAAa,IAAI8c,EAA0B98C,EAAc6zB,aAAcj8B,EAAM,8BACrFsG,EACAk/C,GAAyBp9C,EAAcgI,SAC7ChI,EAAcggC,WAAW2F,WAAW,CAChCL,WACAlJ,SACAkU,oBAAqB/uC,QAAQq+B,IAAUsB,GAAmBxF,GAAYwF,GACtElhC,gBAQA20C,cAAiC,kBAAXvY,EAAsBA,EAAS,OACrD2Y,yBACArE,eACAvB,cAER,CAhFQxD,CAAqBsR,EAAiBnlD,QAASF,EAAOklD,EAA2BK,GAErF,MAAM5kB,GAAYr/B,EAAAA,GAAAA,SAAO,IACzBI,EAAAA,GAAAA,qBAAmB,KAKX0G,GAAiBu4B,EAAUzgC,SAC3BkI,EAAciN,OAAOrV,EAAOy8B,EAChC,IAMJ,MAAMgpB,EAAoBzlD,EAAMwa,IAC1BkrC,GAAepkD,EAAAA,GAAAA,QAAOqI,QAAQ87C,MACY,QAAzC/4C,EAAKvD,OAAOw8C,+BAA4C,IAAPj5C,OAAgB,EAASA,EAAG6Q,KAAKpU,OAAQs8C,MAC9C,QAA7ChlC,EAAKtX,OAAO0qC,mCAAgD,IAAPpzB,OAAgB,EAASA,EAAGlD,KAAKpU,OAAQs8C,KAqCpG,OApCA//C,EAAAA,GAAAA,IAA0B,KACjB0C,IAELu4B,EAAUzgC,SAAU,EACpBiJ,OAAOy8C,iBAAkB,EACzBx9C,EAAcy9C,iBACd1Y,GAAUpsC,OAAOqH,EAAcrH,QAW3B2kD,EAAaxlD,SAAWkI,EAAc2zB,gBACtC3zB,EAAc2zB,eAAemC,iBACjC,KAEJr3B,EAAAA,GAAAA,YAAU,KACDuB,KAEAs9C,EAAaxlD,SAAWkI,EAAc2zB,gBACvC3zB,EAAc2zB,eAAemC,iBAE7BwnB,EAAaxlD,UAEbkW,gBAAe,KACX,IAAI1J,EAC0C,QAA7CA,EAAKvD,OAAO28C,mCAAgD,IAAPp5C,GAAyBA,EAAG6Q,KAAKpU,OAAQs8C,EAAkB,IAErHC,EAAaxlD,SAAU,GAC3B,IAEGkI,CACX,CAwBA,SAASo9C,GAAyBp9C,GAC9B,GAAKA,EAEL,OAAiD,IAA1CA,EAAc8G,QAAQ62C,gBACvB39C,EAAcggC,WACdod,GAAyBp9C,EAAcgI,OACjD,CC1GA,SAAS41C,GAA6B9kD,GAAoF,IAAnF,kBAAE+kD,EAAiB,oBAAEhB,EAAmB,UAAEiB,EAAS,eAAEC,EAAc,UAAE7Y,GAAYpsC,EACpH,IAAIwL,EAAI+T,EAER,SAAS2lC,EAAgBpmD,EAAO8kD,GAK5B,IAAIhW,EACJ,MAAMuX,GAAcz2C,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,IACbpO,EAAAA,GAAAA,YAAWC,GAAAA,IACXzB,GAAK,IACR0tC,SAAU4Y,GAAYtmD,MAEpB,SAAEiH,GAAao/C,EACf/iD,EAAU4gD,GAAuBlkD,GACjC6kD,EAAcsB,EAAenmD,EAAOiH,GAC1C,IAAKA,GAAYs/C,GAAAA,EAAW,EA+BpC,YACqB/kD,EAAAA,GAAAA,YAAWsiD,IAAaC,OAKrChvC,CAQR,CA5CYyxC,GACA,MAAMC,EA4ClB,SAAoCzmD,GAChC,MAAM,KAAEgoC,EAAI,OAAExD,GAAW+f,GACzB,IAAKvc,IAASxD,EACV,MAAO,CAAC,EACZ,MAAMkiB,GAAQ92C,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQo4B,GAASxD,GAC/B,MAAO,CACHsK,eAAyB,OAAT9G,QAA0B,IAATA,OAAkB,EAASA,EAAKwc,UAAUxkD,MAAuB,OAAXwkC,QAA8B,IAAXA,OAAoB,EAASA,EAAOggB,UAAUxkD,IAClJ0mD,EAAS5X,mBACTxoC,EACNq6C,eAAgB+F,EAAS/F,eAEjC,CAvDqCgG,CAA2BN,GACpDvX,EAAgB2X,EAAiB3X,cAOjCxrC,EAAQ8E,cAAgB48C,GAAiB1X,EAAWuX,EAAawB,EAAgBpB,EAAqBwB,EAAiB9F,eAC3H,CAKA,OAAQiG,EAAAA,GAAAA,MAAK5C,GAAchgD,SAAU,CAAEC,MAAOX,EAAStC,SAAU,CAAC8tC,GAAiBxrC,EAAQ8E,eAAiB9F,EAAAA,GAAAA,KAAIwsC,GAAal/B,EAAAA,EAAAA,GAAA,CAAIxH,cAAe9E,EAAQ8E,eAAkBi+C,IAAqB,KAAMH,EAAU5Y,EAAWttC,EAAO4kD,GAAaC,EAAavhD,EAAQ8E,cAAe08C,GAAcD,EAAa59C,EAAU3D,EAAQ8E,iBACnU,CAhCA69C,GCzBJ,SAAsBY,GAClB,IAAK,MAAM/iD,KAAO+iD,EACdtC,GAAmBzgD,IAAI8L,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAChB20C,GAAmBzgD,IACnB+iD,EAAS/iD,GAGxB,CDkByBgjD,CAAab,GAiClCG,EAAgBW,YAAc,UAAH3kD,OAAkC,kBAAdkrC,EACzCA,EAAS,UAAAlrC,OACyF,QAAvFqe,EAAsC,QAAhC/T,EAAK4gC,EAAUyZ,mBAAgC,IAAPr6C,EAAgBA,EAAK4gC,EAAUvsB,YAAyB,IAAPN,EAAgBA,EAAK,GAAE,MACvI,MAAMumC,GAA4BC,EAAAA,GAAAA,YAAWb,GAE7C,OADAY,EAA0BvC,IAAyBnX,EAC5C0Z,CACX,CACA,SAASV,GAAWjgC,GAAe,IAAd,SAAEqnB,GAAUrnB,EAC7B,MAAM6gC,GAAgB1lD,EAAAA,GAAAA,YAAW4E,GAAAA,GAAoBjF,GACrD,OAAO+lD,QAA8B5gD,IAAbonC,EAClBwZ,EAAgB,IAAMxZ,EACtBA,CACV,CEpEA,MAAMyZ,GAAuB,CACzB,UACA,SACA,OACA,OACA,UACA,IACA,QACA,OACA,SACA,SACA,OACA,WACA,OACA,UACA,UACA,WACA,OACA,OACA,SACA,SACA,MACA,OACA,QACA,MACA,QC3BJ,SAASC,GAAe9Z,GACpB,MAKqB,kBAAdA,IAIHA,EAAUznC,SAAS,SAOvBshD,GAAqB3wC,QAAQ82B,IAAc,GAIvC,QAASjxB,KAAKixB,GAItB,C,uDCFA,MAAM+Z,GAAsBnK,GAAW,CAACl9C,EAAOiH,KAC3C,MAAM3D,GAAU9B,EAAAA,GAAAA,YAAWwiD,IACrBvnB,GAAkBj7B,EAAAA,GAAAA,YAAWuC,GAAAA,GAC7BujD,EAAOA,IAnBjB,SAAkBpmD,EAAgElB,EAAOsD,EAASm5B,GAAiB,IAAhG,4BAAE8qB,EAA2B,kBAAEC,EAAiB,SAAEr6B,GAAWjsB,EAC5E,MAAMmH,EAAQ,CACV4zB,aAAcwrB,GAAiBznD,EAAOsD,EAASm5B,EAAiB8qB,GAChEG,YAAaF,KAWjB,OATIr6B,IAMA9kB,EAAM08C,QAAWpe,GAAaxZ,GAAQvd,EAAAA,EAAAA,GAAC,CAAE5P,QAAOE,QAASymC,GAAat+B,IACtEA,EAAM8kB,SAAY/kB,GAAkB+kB,EAAS/kB,IAE1CC,CACX,CAIuBs/C,CAAUzK,EAAQl9C,EAAOsD,EAASm5B,GACrD,OAAOx1B,EAAWqgD,KAASxkD,EAAAA,GAAAA,GAAYwkD,EAAK,EAEhD,SAASG,GAAiBznD,EAAOsD,EAASm5B,EAAiBmrB,GACvD,MAAMvkD,EAAS,CAAC,EACVwkD,EAAeD,EAAmB5nD,EAAO,CAAC,GAChD,IAAK,MAAM8D,KAAO+jD,EACdxkD,EAAOS,GAAOwrC,GAAmBuY,EAAa/jD,IAElD,IAAI,QAAEtB,EAAO,QAAEoK,GAAY5M,EAC3B,MAAM8nD,EAA0BtqB,GAAsBx9B,GAChD+nD,EAAkB9D,GAAcjkD,GAClCsD,GACAykD,IACCD,IACiB,IAAlB9nD,EAAMmkD,eACU79C,IAAZ9D,IACAA,EAAUc,EAAQd,cACN8D,IAAZsG,IACAA,EAAUtJ,EAAQsJ,UAE1B,IAAIo7C,IAA4BvrB,IACE,IAA5BA,EAAgBj6B,QAEtBwlD,EAA4BA,IAAyC,IAAZxlD,EACzD,MAAMylD,EAAeD,EAA4Bp7C,EAAUpK,EAC3D,GAAIylD,GACwB,mBAAjBA,IACNzgD,EAAoBygD,GAAe,CACpC,MAAMC,EAAOtgD,MAAMC,QAAQogD,GAAgBA,EAAe,CAACA,GAC3D,IAAK,IAAItiD,EAAI,EAAGA,EAAIuiD,EAAKtiD,OAAQD,IAAK,CAClC,MAAMmkB,EAAWvhB,EAAwBvI,EAAOkoD,EAAKviD,IACrD,GAAImkB,EAAU,CACV,MAAM,cAAE+R,EAAa,WAAEnwB,GAA0Boe,EAAXhZ,GAAM2b,EAAAA,EAAAA,GAAK3C,EAAQ4C,IACzD,IAAK,MAAM5oB,KAAOgN,EAAQ,CACtB,IAAIorB,EAAcprB,EAAOhN,GACzB,GAAI8D,MAAMC,QAAQq0B,GAAc,CAQ5BA,EAAcA,EAHA8rB,EACR9rB,EAAYt2B,OAAS,EACrB,EAEV,CACoB,OAAhBs2B,IACA74B,EAAOS,GAAOo4B,EAEtB,CACA,IAAK,MAAMp4B,KAAO+3B,EACdx4B,EAAOS,GAAO+3B,EAAc/3B,EAEpC,CACJ,CACJ,CACA,OAAOT,CACX,CClFA,MAAM8kD,GAAiBA,CAAClkD,EAAOgI,IACpBA,GAAyB,kBAAVhI,EAChBgI,EAAKwQ,UAAUxY,GACfA,ECFJmkD,GAAiB,CACnBv5C,EAAG,aACHC,EAAG,aACHiV,EAAG,aACHE,qBAAsB,eAEpBokC,GAAgBh1C,EAAmBzN,OCJzC,SAAS0iD,GAAgBjgD,EAAO4zB,EAAcqP,GAC1C,MAAM,MAAEzpC,EAAK,KAAE0mD,EAAI,gBAAElK,GAAoBh2C,EAEzC,IAAIq9B,GAAe,EACf8iB,GAAqB,EAOzB,IAAK,MAAM1kD,KAAOm4B,EAAc,CAC5B,MAAMh4B,EAAQg4B,EAAan4B,GAC3B,GAAIwP,EAAe9M,IAAI1C,GAEnB4hC,GAAe,OAGd,GAAIxc,GAAkBplB,GACvBykD,EAAKzkD,GAAOG,MAGX,CAED,MAAMwkD,EAAcN,GAAelkD,EAAOqgB,GAAiBxgB,IACvDA,EAAIoZ,WAAW,WAEfsrC,GAAqB,EACrBnK,EAAgBv6C,GACZ2kD,GAGJ5mD,EAAMiC,GAAO2kD,CAErB,CACJ,CAiBA,GAhBKxsB,EAAaxf,YACVipB,GAAgB4F,EAChBzpC,EAAM4a,UD3BlB,SAAwBwf,EAAcxf,EAAW6uB,GAE7C,IAAIod,EAAkB,GAClBC,GAAqB,EAKzB,IAAK,IAAIhjD,EAAI,EAAGA,EAAI0iD,GAAe1iD,IAAK,CACpC,MAAM7B,EAAMuP,EAAmB1N,GACzB1B,EAAQg4B,EAAan4B,GAC3B,QAAcwC,IAAVrC,EACA,SACJ,IAAI2kD,GAAiB,EAOrB,GALIA,EADiB,kBAAV3kD,EACUA,KAAWH,EAAIoZ,WAAW,SAAW,EAAI,GAGnB,IAAtB/E,WAAWlU,IAE3B2kD,GAAkBtd,EAAmB,CACtC,MAAMmd,EAAcN,GAAelkD,EAAOqgB,GAAiBxgB,IACtD8kD,IACDD,GAAqB,EAErBD,GAAmB,GAAJtmD,OADOgmD,GAAetkD,IAAQA,EACV,KAAA1B,OAAIqmD,EAAW,OAElDnd,IACA7uB,EAAU3Y,GAAO2kD,EAEzB,CACJ,CAUA,OATAC,EAAkBA,EAAgBp/B,OAG9BgiB,EACAod,EAAkBpd,EAAkB7uB,EAAWksC,EAAqB,GAAKD,GAEpEC,IACLD,EAAkB,QAEfA,CACX,CCf8BG,CAAe5sB,EAAc5zB,EAAMoU,UAAW6uB,GAE3DzpC,EAAM4a,YAKX5a,EAAM4a,UAAY,SAOtB+rC,EAAoB,CACpB,MAAM,QAAEtkC,EAAU,MAAK,QAAEC,EAAU,MAAK,QAAEC,EAAU,GAAOi6B,EAC3Dx8C,EAAMw8C,gBAAkB,GAAHj8C,OAAM8hB,EAAO,KAAA9hB,OAAI+hB,EAAO,KAAA/hB,OAAIgiB,EACrD,CACJ,CC5DA,MAAM0kC,GAAW,CACb9yB,OAAQ,oBACR+yB,MAAO,oBAELC,GAAY,CACdhzB,OAAQ,mBACR+yB,MAAO,mBCNX,SAAS1d,GAAW3gB,EAAQsL,EAAQ51B,GAChC,MAAyB,kBAAXsqB,EACRA,EACA5L,GAAGrC,UAAUuZ,EAAS51B,EAAOsqB,EACvC,C,mGCCA,SAASu+B,GAAc5gD,EAAKnH,EAEfgoD,EAAU5d,GAAmB,IAFZ,MAAE6d,EAAK,MAAEC,EAAK,UAAEC,EAAS,QAAEnlC,EAAO,QAAEC,EAAO,WAAEmlC,EAAU,YAAEC,EAAc,EAAC,WAAEC,EAAa,GAE1GtoD,EAMP,GALAonD,GAAgBjgD,GADXokB,EAAAA,EAAAA,GAAAvrB,EAAAwrB,IAC0B4e,GAK3B4d,EAIA,YAHI7gD,EAAMxG,MAAM4nD,UACZphD,EAAMqhD,MAAMD,QAAUphD,EAAMxG,MAAM4nD,UAI1CphD,EAAMqhD,MAAQrhD,EAAMxG,MACpBwG,EAAMxG,MAAQ,CAAC,EACf,MAAM,MAAE6nD,EAAK,MAAE7nD,EAAK,WAAE8nD,GAAethD,EAKjCqhD,EAAMjtC,YACFktC,IACA9nD,EAAM4a,UAAYitC,EAAMjtC,kBACrBitC,EAAMjtC,WAGbktC,SACarjD,IAAZ4d,QAAqC5d,IAAZ6d,GAAyBtiB,EAAM4a,aACzD5a,EAAMw8C,gBDzBd,SAAgCsL,EAAYzlC,EAASC,GACjD,MAAMylC,EAAYve,GAAWnnB,EAASylC,EAAW96C,EAAG86C,EAAWnpD,OACzDqpD,EAAYxe,GAAWlnB,EAASwlC,EAAW76C,EAAG66C,EAAWrpD,QAC/D,MAAO,GAAP8B,OAAUwnD,EAAS,KAAAxnD,OAAIynD,EAC3B,CCqBgCC,CAAuBH,OAAwBrjD,IAAZ4d,EAAwBA,EAAU,QAAiB5d,IAAZ6d,EAAwBA,EAAU,UAG1H7d,IAAV6iD,IACAO,EAAM76C,EAAIs6C,QACA7iD,IAAV8iD,IACAM,EAAM56C,EAAIs6C,QACI9iD,IAAd+iD,IACAK,EAAM/sC,MAAQ0sC,QAEC/iD,IAAfgjD,GF7BR,SAAsBI,EAAO9jD,GAAqD,IAA7CmkD,EAAOnjD,UAAAhB,OAAA,QAAAU,IAAAM,UAAA,GAAAA,UAAA,GAAG,EAAGovB,EAAMpvB,UAAAhB,OAAA,QAAAU,IAAAM,UAAA,GAAAA,UAAA,GAAG,EAAGojD,IAAWpjD,UAAAhB,OAAA,QAAAU,IAAAM,UAAA,KAAAA,UAAA,GAErE8iD,EAAMJ,WAAa,EAGnB,MAAMp3B,EAAO83B,EAAclB,GAAWE,GAEtCU,EAAMx3B,EAAK8D,QAAUlX,GAAGrC,WAAWuZ,GAEnC,MAAMszB,EAAaxqC,GAAGrC,UAAU7W,GAC1B2jD,EAAczqC,GAAGrC,UAAUstC,GACjCL,EAAMx3B,EAAK62B,OAAS,GAAH3mD,OAAMknD,EAAU,KAAAlnD,OAAImnD,EACzC,CEkBQU,CAAaP,EAAOJ,EAAYC,EAAaC,GAAY,EAEjE,CCjDA,MAAMU,GAAwBA,KAAA,CAC1BroD,MAAO,CAAC,EACR4a,UAAW,CAAC,EACZ4hC,gBAAiB,CAAC,EAClBkK,KAAM,CAAC,ICFL4B,GAAuBA,KAAAv6C,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAD,EDFC,CAC1B/N,MAAO,CAAC,EACR4a,UAAW,CAAC,EACZ4hC,gBAAiB,CAAC,EAClBkK,KAAM,CAAC,ICDmB,IAC1BmB,MAAO,CAAC,ICJNR,GAAYkB,GAAuB,kBAARA,GAA0C,QAAtBA,EAAI7vC,cCAzD,SAAS8vC,GAAWvqD,EAAOoB,EAAmBu8C,EAAWrV,GAAY,IAAxC,MAAEvmC,EAAK,KAAE0mD,GAAMrnD,EACxCkc,OAAOua,OAAO73B,EAAQ+B,MAAOA,EAAOumC,GAAcA,EAAWoV,oBAAoBC,IAEjF,IAAK,MAAM35C,KAAOykD,EACdzoD,EAAQ+B,MAAMyoD,YAAYxmD,EAAKykD,EAAKzkD,GAE5C,CCHA,MAAMymD,GAAsB,IAAI75C,IAAI,CAChC,gBACA,kBACA,eACA,mBACA,aACA,WACA,oBACA,eACA,cACA,aACA,UACA,UACA,eACA,mBACA,mBACA,eACA,cACA,UACA,oBACA,aACA,cACA,aACA,iBCtBJ,SAAS85C,GAAU1qD,EAAS4nD,EAAa+C,EAAYriB,GACjDiiB,GAAWvqD,EAAS4nD,OAAaphD,EAAW8hC,GAC5C,IAAK,MAAMtkC,KAAO4jD,EAAYgC,MAC1B5pD,EAAQ4qD,aAAcH,GAAoB/jD,IAAI1C,GAA0BA,EAAnBsW,GAAYtW,GAAY4jD,EAAYgC,MAAM5lD,GAEvG,CCNA,SAAS6mD,GAAoB7mD,EAAG5C,GAAwB,IAAtB,OAAEsjC,EAAM,SAAEkJ,GAAUxsC,EAClD,OAAQoS,EAAe9M,IAAI1C,IACvBA,EAAIoZ,WAAW,YACbsnB,QAAuBl+B,IAAbonC,OACLR,GAAgBppC,IAAgB,YAARA,EACvC,CCLA,SAASyjD,GAA4BvnD,EAAOH,EAAWuI,GACnD,IAAIsE,EACJ,MAAM,MAAE7K,GAAU7B,EACZ4qD,EAAY,CAAC,EACnB,IAAK,MAAM9mD,KAAOjC,GACVoY,GAAcpY,EAAMiC,KACnBjE,EAAUgC,OACPoY,GAAcpa,EAAUgC,MAAMiC,KAClC6mD,GAAoB7mD,EAAK9D,SACgIsG,KAAnD,QAApGoG,EAAuB,OAAlBtE,QAA4C,IAAlBA,OAA2B,EAASA,EAAc2R,SAASjW,UAAyB,IAAP4I,OAAgB,EAASA,EAAG6yB,cAC1IqrB,EAAU9mD,GAAOjC,EAAMiC,IAG/B,OAAO8mD,CACX,CCbA,SAASrD,GAA4BvnD,EAAOH,EAAWuI,GACnD,MAAMwiD,EAAYC,GAA8B7qD,EAAOH,EAAWuI,GAClE,IAAK,MAAMtE,KAAO9D,EACd,GAAIia,GAAcja,EAAM8D,KACpBmW,GAAcpa,EAAUiE,IAAO,CAI/B8mD,GAHuD,IAArCv3C,EAAmBmD,QAAQ1S,GACvC,OAASA,EAAIgnD,OAAO,GAAG/f,cAAgBjnC,EAAI0J,UAAU,GACrD1J,GACiB9D,EAAM8D,EACjC,CAEJ,OAAO8mD,CACX,CCUA,MAAMG,GAAc,CAAC,IAAK,IAAK,QAAS,SAAU,KAAM,KAAM,KACxDC,GAAkB,CACpB7E,eAAgBkB,GAAmB,CAC/BE,4BAA6BA,GAC7BC,kBAAmB2C,GACnBh9B,SAAUjsB,IAA+D,IAA9D,MAAElB,EAAK,UAAEH,EAAS,QAAEK,EAAO,YAAEwnD,EAAW,aAAEzrB,GAAe/6B,EAChE,IAAKhB,EACD,OACJ,IAAIwlC,IAAiB1lC,EAAMgoC,KAC3B,IAAKtC,EACD,IAAK,MAAM5hC,KAAOm4B,EACd,GAAI3oB,EAAe9M,IAAI1C,GAAM,CACzB4hC,GAAe,EACf,KACJ,CAGR,IAAKA,EACD,OACJ,IAAIulB,GAAgBprD,EACpB,GAAIA,EAKA,IAAK,IAAI8F,EAAI,EAAGA,EAAIolD,GAAYnlD,OAAQD,IAAK,CACzC,MAAM7B,EAAMinD,GAAYplD,GACpB3F,EAAM8D,KACNjE,EAAUiE,KACVmnD,GAAe,EAEvB,CAECA,GAELn1C,GAAMX,MAAK,MApDvB,SAA6BwxB,EAAU+gB,GACnC,IACIA,EAAYiC,WACoB,oBAArBhjB,EAASukB,QACVvkB,EAASukB,UACTvkB,EAASI,uBACvB,CACA,MAAOj6B,GAEH46C,EAAYiC,WAAa,CACrB96C,EAAG,EACHC,EAAG,EACHtO,MAAO,EACPF,OAAQ,EAEhB,CACJ,CAqCgB6qD,CAAoBjrD,EAASwnD,GAC7B5xC,GAAM/U,QAAO,KACTkoD,GAAcvB,EAAazrB,EAAcitB,GAAShpD,EAAQoS,SAAUtS,EAAMsrC,mBAC1Ekf,GAAUtqD,EAASwnD,EAAY,GACjC,GACJ,KC/DR0D,GAAmB,CACrBjF,eAAgBkB,GAAmB,CAC/BE,4BAA2B,GAC3BC,kBAAmB0C,MCD3B,SAASmB,GAAkBv6C,EAAQsP,EAAQpgB,GACvC,IAAK,MAAM8D,KAAOsc,EACTnG,GAAcmG,EAAOtc,KAAU6mD,GAAoB7mD,EAAK9D,KACzD8Q,EAAOhN,GAAOsc,EAAOtc,GAGjC,CAQA,SAASwnD,GAAStrD,EAAO6kD,GACrB,MACMhjD,EAAQ,CAAC,EAMf,OAFAwpD,GAAkBxpD,EALA7B,EAAM6B,OAAS,CAAC,EAKE7B,GACpCod,OAAOua,OAAO91B,EAdlB,SAA+BX,EAAwB2jD,GAAa,IAApC,kBAAEvZ,GAAmBpqC,EACjD,OAAOqC,EAAAA,GAAAA,UAAQ,KACX,MAAM8E,EXfgB,CAC1BxG,MAAO,CAAC,EACR4a,UAAW,CAAC,EACZ4hC,gBAAiB,CAAC,EAClBkK,KAAM,CAAC,GWaH,OADAD,GAAgBjgD,EAAOw8C,EAAavZ,GAC7BluB,OAAOua,OAAO,CAAC,EAAGtvB,EAAMkgD,KAAMlgD,EAAMxG,MAAM,GAClD,CAACgjD,GACR,CAQyB0G,CAAuBvrD,EAAO6kD,IAC5ChjD,CACX,CACA,SAAS2pD,GAAaxrD,EAAO6kD,GAEzB,MAAM4G,EAAY,CAAC,EACb5pD,EAAQypD,GAAStrD,EAAO6kD,GAoB9B,OAnBI7kD,EAAMgoC,OAA+B,IAAvBhoC,EAAM2rC,eAEpB8f,EAAUC,WAAY,EAEtB7pD,EAAM8pD,WACF9pD,EAAM+pD,iBACF/pD,EAAMgqD,mBACF,OAEZhqD,EAAMiqD,aACa,IAAf9rD,EAAMgoC,KACA,OAAM,OAAA5lC,OACgB,MAAfpC,EAAMgoC,KAAe,IAAM,WAEzB1hC,IAAnBtG,EAAMuS,WACLvS,EAAM+rD,OAAS/rD,EAAMgsD,YAAchsD,EAAMqgC,YAC1CorB,EAAUl5C,SAAW,GAEzBk5C,EAAU5pD,MAAQA,EACX4pD,CACX,CChDA,MAAMQ,GAAmB,IAAIv7C,IAAI,CAC7B,UACA,OACA,WACA,UACA,QACA,SACA,WACA,aACA,oBACA,SACA,UACA,wBACA,mBACA,sBACA,WACA,cACA,SACA,YACA,2BACA,kBACA,sBACA,SACA,SACA,eACA,aACA,kBACA,kBACA,kBACA,eACA,aAUJ,SAASw7C,GAAkBpoD,GACvB,OAAQA,EAAIoZ,WAAW,UAClBpZ,EAAIoZ,WAAW,SAAmB,cAARpZ,GAC3BA,EAAIoZ,WAAW,WACfpZ,EAAIoZ,WAAW,UACfpZ,EAAIoZ,WAAW,UACfpZ,EAAIoZ,WAAW,aACf+uC,GAAiBzlD,IAAI1C,EAC7B,CCpDA,IAAIqoD,GAAiBroD,IAASooD,GAAkBpoD,GAoBhD,KAnBiCsoD,GAyBLC,QAAQ,0BAA0BzvC,WArB1DuvC,GAAiBroD,GAAQA,EAAIoZ,WAAW,OAASgvC,GAAkBpoD,GAAOsoD,GAAYtoD,GAsB1F,CACA,MAAO4I,IACH,CA5BJ,IAAiC0/C,GCGjC,SAASE,GAAYtsD,EAAO6kD,EAAa0H,EAAWjf,GAChD,MAAMkf,GAAcjpD,EAAAA,GAAAA,UAAQ,KACxB,MAAM8E,EAAQ8hD,KAEd,OADAlB,GAAc5gD,EAAOw8C,EAAaqE,GAAS5b,GAAYttC,EAAMsrC,oBAC7D17B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACOvH,EAAMqhD,OAAK,IACd7nD,OAAK+N,EAAAA,EAAAA,GAAA,GAAOvH,EAAMxG,QAAO,GAE9B,CAACgjD,IACJ,GAAI7kD,EAAM6B,MAAO,CACb,MAAM4qD,EAAY,CAAC,EACnBpB,GAAkBoB,EAAWzsD,EAAM6B,MAAO7B,GAC1CwsD,EAAY3qD,OAAK+N,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQ68C,GAAcD,EAAY3qD,MACvD,CACA,OAAO2qD,CACX,CCdA,SAASE,KAA4C,IAA5BC,EAAkB/lD,UAAAhB,OAAA,QAAAU,IAAAM,UAAA,IAAAA,UAAA,GAsBvC,MArBkBs/C,CAAC5Y,EAAWttC,EAAOqB,EAAGH,EAAoB+F,KAAa,IAA/B,aAAEg1B,GAAc/6B,EACtD,MAGMsrD,GAHiBpF,GAAe9Z,GAChCgf,GACAd,IAC6BxrD,EAAOi8B,EAAch1B,EAAUqmC,GAC5Dsf,EFoBd,SAAqB5sD,EAAO6sD,EAAOF,GAC/B,MAAMC,EAAgB,CAAC,EACvB,IAAK,MAAM9oD,KAAO9D,EAQF,WAAR8D,GAA4C,kBAAjB9D,EAAMqD,SAEjC8oD,GAAcroD,KACU,IAAvB6oD,GAA+BT,GAAkBpoD,KAChD+oD,IAAUX,GAAkBpoD,IAE7B9D,EAAiB,WACd8D,EAAIoZ,WAAW,aACnB0vC,EAAc9oD,GACV9D,EAAM8D,IAGlB,OAAO8oD,CACX,CE3C8BE,CAAY9sD,EAA4B,kBAAdstC,EAAwBqf,GAClEI,EAAezf,IAAcjnC,GAAAA,UAAQuJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAChCg9C,GAAkBJ,GAAW,IAAEnrD,QACpC,CAAC,GAMD,SAAEL,GAAahB,EACfwF,GAAmBjC,EAAAA,GAAAA,UAAQ,IAAO0W,GAAcjZ,GAAYA,EAAS8E,MAAQ9E,GAAW,CAACA,IAC/F,OAAOe,EAAAA,GAAAA,eAAcurC,GAAS19B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACvBm9C,GAAY,IACf/rD,SAAUwE,IACZ,CAGV,CCxBA,SAASwnD,GAA6B/G,EAAmBhB,GACrD,OAAO,SAA+B3X,GAAmE,IAAxD,mBAAEqf,GAAoB/lD,UAAAhB,OAAA,QAAAU,IAAAM,UAAA,GAAAA,UAAA,GAAG,CAAE+lD,oBAAoB,GAC5F,MAAMM,EAAa7F,GAAe9Z,GAC5B0d,GACAI,GAQN,OAAOpF,IAPKp2C,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACLq9C,GAAU,IACbhH,oBACAC,UAAWwG,GAAgBC,GAC3B1H,sBACA3X,cAGR,CACJ,CCnBA,MAAM4f,GAAuB,CAAEhtD,QAAS,MAClCitD,GAA2B,CAAEjtD,SAAS,GCM5C,MAAMktD,GAAa,IAAIjjC,GAAqB7K,GAAOkB,ICR7C6sC,GAAqB,IAAIjmB,Q,wBCsBzBkmB,GAAoB,CACtB,iBACA,oBACA,SACA,sBACA,gBACA,uBACA,2BAMJ,MAAMC,GAQFhG,2BAAAA,CAA4BiG,EAAQC,EAAYC,GAC5C,MAAO,CAAC,CACZ,CACApkD,WAAAA,CAAWpI,GAA6G,IAA5G,OAAEkP,EAAM,MAAEpQ,EAAK,gBAAEy8B,EAAe,oBAAE2oB,EAAmB,sBAAE3lB,EAAqB,YAAEolB,GAAc3jD,EAAEgO,EAAOtI,UAAAhB,OAAA,QAAAU,IAAAM,UAAA,GAAAA,UAAA,GAAG,CAAC,EAKjH7G,KAAKG,QAAU,KAIfH,KAAKiB,SAAW,IAAI0P,IAIpB3Q,KAAKkkD,eAAgB,EACrBlkD,KAAKy9B,uBAAwB,EAQ7Bz9B,KAAKs8B,mBAAqB,KAM1Bt8B,KAAKsD,OAAS,IAAIa,IAClBnE,KAAKkoB,iBAAmBA,GAIxBloB,KAAK8mD,SAAW,CAAC,EAKjB9mD,KAAK4tD,mBAAqB,IAAIzpD,IAM9BnE,KAAK6tD,iBAAmB,CAAC,EAIzB7tD,KAAKyX,OAAS,CAAC,EAMfzX,KAAK8tD,uBAAyB,CAAC,EAC/B9tD,KAAK+tD,aAAe,IAAM/tD,KAAK8W,OAAO,SAAU9W,KAAKk8B,cACrDl8B,KAAKgB,OAAS,KACLhB,KAAKG,UAEVH,KAAKguD,eACLhuD,KAAKiuD,eAAejuD,KAAKG,QAASH,KAAK2nD,YAAa3nD,KAAKC,MAAM6B,MAAO9B,KAAKqoC,YAAW,EAE1FroC,KAAKkuD,kBAAoB,EACzBluD,KAAK4xC,eAAiB,KAClB,MAAMj8B,EAAMjL,GAAKiL,MACb3V,KAAKkuD,kBAAoBv4C,IACzB3V,KAAKkuD,kBAAoBv4C,EACzBI,GAAM/U,OAAOhB,KAAKgB,QAAQ,GAAO,GACrC,EAEJ,MAAM,aAAEk7B,EAAY,YAAEyrB,EAAW,SAAEv6B,GAAa03B,EAChD9kD,KAAKotB,SAAWA,EAChBptB,KAAKk8B,aAAeA,EACpBl8B,KAAKmuD,YAAUt+C,EAAAA,EAAAA,GAAA,GAAQqsB,GACvBl8B,KAAKouD,cAAgBnuD,EAAMwC,SAAOoN,EAAAA,EAAAA,GAAA,GAAQqsB,GAAiB,CAAC,EAC5Dl8B,KAAK2nD,YAAcA,EACnB3nD,KAAKqQ,OAASA,EACdrQ,KAAKC,MAAQA,EACbD,KAAK08B,gBAAkBA,EACvB18B,KAAK0pB,MAAQrZ,EAASA,EAAOqZ,MAAQ,EAAI,EACzC1pB,KAAKqlD,oBAAsBA,EAC3BrlD,KAAKmP,QAAUA,EACfnP,KAAK0/B,sBAAwB91B,QAAQ81B,GACrC1/B,KAAKy9B,sBAAwBA,GAAsBx9B,GACnDD,KAAKkkD,cAAgBA,GAAcjkD,GAC/BD,KAAKkkD,gBACLlkD,KAAK68B,gBAAkB,IAAIlsB,KAE/B3Q,KAAK6+B,uBAAyBj1B,QAAQyG,GAAUA,EAAOlQ,SAWvD,MAAAkuD,EAA+CruD,KAAKwnD,4BAA4BvnD,EAAO,CAAC,EAAGD,OAArF,WAAEoa,GAAoCi0C,EAArBC,GAAmB5hC,EAAAA,EAAAA,GAAA2hC,EAAA1hC,IAC1C,IAAK,MAAM5oB,KAAOuqD,EAAqB,CACnC,MAAMpqD,EAAQoqD,EAAoBvqD,QACRwC,IAAtB21B,EAAan4B,IAAsBmW,GAAchW,IACjDA,EAAMd,IAAI84B,EAAan4B,IAAM,EAErC,CACJ,CACAg9B,KAAAA,CAAM6F,GACF5mC,KAAKG,QAAUymC,EACf0mB,GAAmBlqD,IAAIwjC,EAAU5mC,MAC7BA,KAAKqoC,aAAeroC,KAAKqoC,WAAWzB,UACpC5mC,KAAKqoC,WAAWtH,MAAM6F,GAEtB5mC,KAAKqQ,QAAUrQ,KAAKkkD,gBAAkBlkD,KAAKy9B,wBAC3Cz9B,KAAKuuD,sBAAwBvuD,KAAKqQ,OAAOm+C,gBAAgBxuD,OAE7DA,KAAKsD,OAAOO,SAAQ,CAACK,EAAOH,IAAQ/D,KAAKyuD,kBAAkB1qD,EAAKG,KAC3DkpD,GAAyBjtD,SChKtC,WAEI,GADAitD,GAAyBjtD,SAAU,EAC9BqmD,GAAAA,EAEL,GAAIp9C,OAAOslD,WAAY,CACnB,MAAMC,EAAmBvlD,OAAOslD,WAAW,4BACrCE,EAA8BA,IAAOzB,GAAqBhtD,QAAUwuD,EAAiBrL,QAC3FqL,EAAiBE,YAAYD,GAC7BA,GACJ,MAEIzB,GAAqBhtD,SAAU,CAEvC,CDoJY2uD,GAEJ9uD,KAAKs8B,mBAC4B,UAA7Bt8B,KAAKqlD,sBAE8B,WAA7BrlD,KAAKqlD,qBAED8H,GAAqBhtD,SAI/BH,KAAKqQ,QACLrQ,KAAKqQ,OAAOpP,SAAS0Q,IAAI3R,MAC7BA,KAAKsV,OAAOtV,KAAKC,MAAOD,KAAK08B,gBACjC,CACAuE,OAAAA,GACIqsB,GAAmB5pD,OAAO1D,KAAKG,SAC/BH,KAAKqoC,YAAcroC,KAAKqoC,WAAWpH,UACnCjrB,GAAYhW,KAAK+tD,cACjB/3C,GAAYhW,KAAKgB,QACjBhB,KAAK4tD,mBAAmB/pD,SAASgrC,GAAWA,MAC5C7uC,KAAK4tD,mBAAmB14C,QACxBlV,KAAKuuD,uBAAyBvuD,KAAKuuD,wBACnCvuD,KAAKqQ,QAAUrQ,KAAKqQ,OAAOpP,SAASyC,OAAO1D,MAC3C,IAAK,MAAM+D,KAAO/D,KAAKyX,OACnBzX,KAAKyX,OAAO1T,GAAKmR,QAErB,IAAK,MAAMnR,KAAO/D,KAAK8mD,SAAU,CAC7B,MAAMiI,EAAU/uD,KAAK8mD,SAAS/iD,GAC1BgrD,IACAA,EAAQ9tB,UACR8tB,EAAQnuB,WAAY,EAE5B,CACA5gC,KAAKG,QAAU,IACnB,CACAsuD,iBAAAA,CAAkB1qD,EAAKG,GACflE,KAAK4tD,mBAAmBnnD,IAAI1C,IAC5B/D,KAAK4tD,mBAAmB7nD,IAAIhC,EAA5B/D,GAEJ,MAAMgvD,EAAmBz7C,EAAe9M,IAAI1C,GACtCkrD,EAAiB/qD,EAAMuU,GAAG,UAAWy2C,IACvClvD,KAAKk8B,aAAan4B,GAAOmrD,EACzBlvD,KAAKC,MAAMmtB,UAAYrX,GAAMR,UAAUvV,KAAK+tD,cACxCiB,GAAoBhvD,KAAKqoC,aACzBroC,KAAKqoC,WAAWqM,kBAAmB,EACvC,IAEEya,EAAwBjrD,EAAMuU,GAAG,gBAAiBzY,KAAK4xC,gBAC7D,IAAIwd,EACAhmD,OAAOimD,wBACPD,EAAkBhmD,OAAOimD,sBAAsBrvD,KAAM+D,EAAKG,IAE9DlE,KAAK4tD,mBAAmBxqD,IAAIW,GAAK,KAC7BkrD,IACAE,IACIC,GACAA,IACAlrD,EAAMgU,OACNhU,EAAMuF,MAAM,GAExB,CACA6zB,gBAAAA,CAAiBgyB,GAIb,OAAKtvD,KAAKG,SACLH,KAAKuvD,0BACNvvD,KAAKkM,OAASojD,EAAMpjD,KAGjBlM,KAAKuvD,yBAAyBvvD,KAAKG,QAASmvD,EAAMnvD,SAF9C,CAGf,CACA2lD,cAAAA,GACI,IAAI/hD,EAAM,YACV,IAAKA,KAAOygD,GAAoB,CAC5B,MAAMgL,EAAoBhL,GAAmBzgD,GAC7C,IAAKyrD,EACD,SACJ,MAAM,UAAE/K,EAAW/jB,QAAS+uB,GAAuBD,EAYnD,IARKxvD,KAAK8mD,SAAS/iD,IACf0rD,GACAhL,EAAUzkD,KAAKC,SACfD,KAAK8mD,SAAS/iD,GAAO,IAAI0rD,EAAmBzvD,OAK5CA,KAAK8mD,SAAS/iD,GAAM,CACpB,MAAMgrD,EAAU/uD,KAAK8mD,SAAS/iD,GAC1BgrD,EAAQnuB,UACRmuB,EAAQz5C,UAGRy5C,EAAQhuB,QACRguB,EAAQnuB,WAAY,EAE5B,CACJ,CACJ,CACAotB,YAAAA,GACIhuD,KAAK0vD,MAAM1vD,KAAK2nD,YAAa3nD,KAAKk8B,aAAcl8B,KAAKC,MACzD,CAMAmrB,kBAAAA,GACI,OAAOprB,KAAKG,QACNH,KAAK2vD,2BAA2B3vD,KAAKG,QAASH,KAAKC,OjF1Q/C,CACd6O,EAFe,CAAS8G,IAAK,EAAG9K,IAAK,GAGrCiE,EAHe,CAAS6G,IAAK,EAAG9K,IAAK,GiF6QrC,CACA8kD,cAAAA,CAAe7rD,GACX,OAAO/D,KAAKk8B,aAAan4B,EAC7B,CACA2vC,cAAAA,CAAe3vC,EAAKG,GAChBlE,KAAKk8B,aAAan4B,GAAOG,CAC7B,CAKAoR,MAAAA,CAAOrV,EAAOy8B,IACNz8B,EAAMsrC,mBAAqBvrC,KAAKC,MAAMsrC,oBACtCvrC,KAAK4xC,iBAET5xC,KAAKF,UAAYE,KAAKC,MACtBD,KAAKC,MAAQA,EACbD,KAAKmhC,oBAAsBnhC,KAAK08B,gBAChC18B,KAAK08B,gBAAkBA,EAIvB,IAAK,IAAI92B,EAAI,EAAGA,EAAI2nD,GAAkB1nD,OAAQD,IAAK,CAC/C,MAAM7B,EAAMwpD,GAAkB3nD,GAC1B5F,KAAK8tD,uBAAuB/pD,KAC5B/D,KAAK8tD,uBAAuB/pD,YACrB/D,KAAK8tD,uBAAuB/pD,IAEvC,MACM8rD,EAAW5vD,EADK,KAAO8D,GAEzB8rD,IACA7vD,KAAK8tD,uBAAuB/pD,GAAO/D,KAAKyY,GAAG1U,EAAK8rD,GAExD,CACA7vD,KAAK6tD,iBErTb,SAAqC9tD,EAASiI,EAAMC,GAChD,IAAK,MAAMlE,KAAOiE,EAAM,CACpB,MAAM8nD,EAAY9nD,EAAKjE,GACjBgsD,EAAY9nD,EAAKlE,GACvB,GAAImW,GAAc41C,GAKd/vD,EAAQka,SAASlW,EAAK+rD,QASrB,GAAI51C,GAAc61C,GAKnBhwD,EAAQka,SAASlW,EAAK8V,GAAYi2C,EAAW,CAAE53C,MAAOnY,UAErD,GAAIgwD,IAAcD,EAMnB,GAAI/vD,EAAQga,SAAShW,GAAM,CACvB,MAAMisD,EAAgBjwD,EAAQia,SAASjW,IACP,IAA5BisD,EAAcxwB,UACdwwB,EAAc92C,KAAK42C,GAEbE,EAAc/3C,aACpB+3C,EAAc5sD,IAAI0sD,EAE1B,KACK,CACD,MAAMZ,EAAcnvD,EAAQ6vD,eAAe7rD,GAC3ChE,EAAQka,SAASlW,EAAK8V,QAA4BtT,IAAhB2oD,EAA4BA,EAAcY,EAAW,CAAE53C,MAAOnY,IACpG,CAER,CAEA,IAAK,MAAMgE,KAAOkE,OACI1B,IAAdyB,EAAKjE,IACLhE,EAAQkwD,YAAYlsD,GAE5B,OAAOiE,CACX,CFiQgCkoD,CAA4BlwD,KAAMA,KAAKwnD,4BAA4BvnD,EAAOD,KAAKF,UAAWE,MAAOA,KAAK6tD,kBAC1H7tD,KAAKmwD,wBACLnwD,KAAKmwD,yBAETnwD,KAAKotB,UAAYptB,KAAKotB,SAASptB,KACnC,CACA6I,QAAAA,GACI,OAAO7I,KAAKC,KAChB,CAIAmwD,UAAAA,CAAWpvC,GACP,OAAOhhB,KAAKC,MAAM0I,SAAW3I,KAAKC,MAAM0I,SAASqY,QAAQza,CAC7D,CAIAo0B,oBAAAA,GACI,OAAO36B,KAAKC,MAAM0L,UACtB,CACAs9B,qBAAAA,GACI,OAAOjpC,KAAKC,MAAM+G,kBACtB,CACAqpD,qBAAAA,GACI,OAAOrwD,KAAKkkD,cACNlkD,KACAA,KAAKqQ,OACDrQ,KAAKqQ,OAAOggD,6BACZ9pD,CACd,CAIAioD,eAAAA,CAAgBnqD,GACZ,MAAMisD,EAAqBtwD,KAAKqwD,wBAChC,GAAIC,EAGA,OAFAA,EAAmBzzB,iBACfyzB,EAAmBzzB,gBAAgBlrB,IAAItN,GACpC,IAAMisD,EAAmBzzB,gBAAgBn5B,OAAOW,EAE/D,CAIA4V,QAAAA,CAASlW,EAAKG,GAEV,MAAM8rD,EAAgBhwD,KAAKsD,OAAOyC,IAAIhC,GAClCG,IAAU8rD,IACNA,GACAhwD,KAAKiwD,YAAYlsD,GACrB/D,KAAKyuD,kBAAkB1qD,EAAKG,GAC5BlE,KAAKsD,OAAOF,IAAIW,EAAKG,GACrBlE,KAAKk8B,aAAan4B,GAAOG,EAAM6B,MAEvC,CAIAkqD,WAAAA,CAAYlsD,GACR/D,KAAKsD,OAAOI,OAAOK,GACnB,MAAM4U,EAAc3Y,KAAK4tD,mBAAmB7nD,IAAIhC,GAC5C4U,IACAA,IACA3Y,KAAK4tD,mBAAmBlqD,OAAOK,WAE5B/D,KAAKk8B,aAAan4B,GACzB/D,KAAKuwD,2BAA2BxsD,EAAK/D,KAAK2nD,YAC9C,CAIA5tC,QAAAA,CAAShW,GACL,OAAO/D,KAAKsD,OAAOmD,IAAI1C,EAC3B,CACAiW,QAAAA,CAASjW,EAAKmd,GACV,GAAIlhB,KAAKC,MAAMqD,QAAUtD,KAAKC,MAAMqD,OAAOS,GACvC,OAAO/D,KAAKC,MAAMqD,OAAOS,GAE7B,IAAIG,EAAQlE,KAAKsD,OAAOyC,IAAIhC,GAK5B,YAJcwC,IAAVrC,QAAwCqC,IAAjB2a,IACvBhd,EAAQ2V,GAA6B,OAAjBqH,OAAwB3a,EAAY2a,EAAc,CAAEhJ,MAAOlY,OAC/EA,KAAKia,SAASlW,EAAKG,IAEhBA,CACX,CAMAwkB,SAAAA,CAAU3kB,EAAKgN,GACX,IAAIpE,EACJ,IAAIzI,OAAmCqC,IAA3BvG,KAAKk8B,aAAan4B,IAAuB/D,KAAKG,QAEI,QAAvDwM,EAAK3M,KAAKwwD,uBAAuBxwD,KAAKC,MAAO8D,UAAyB,IAAP4I,EAAgBA,EAAK3M,KAAKywD,sBAAsBzwD,KAAKG,QAAS4D,EAAK/D,KAAKmP,SADxInP,KAAKk8B,aAAan4B,GF3YT2D,MEwZf,YAXcnB,IAAVrC,GAAiC,OAAVA,IACF,kBAAVA,IACN8kB,GAAkB9kB,IAAUmY,GAAkBnY,IAE/CA,EAAQkU,WAAWlU,IFjZZwD,EEmZaxD,GFnZPmpD,GAAW/iC,KAAKH,GAAcziB,KEmZb+Y,GAAQnE,KAAKvL,KAC3C7M,EAAQyc,GAAkB5c,EAAKgN,KAEnC/Q,KAAK0wD,cAAc3sD,EAAKmW,GAAchW,GAASA,EAAM6B,MAAQ7B,IAE1DgW,GAAchW,GAASA,EAAM6B,MAAQ7B,CAChD,CAKAwsD,aAAAA,CAAc3sD,EAAKG,GACflE,KAAKmuD,WAAWpqD,GAAOG,CAC3B,CAKA27B,aAAAA,CAAc97B,GACV,IAAI4I,EACJ,MAAM,QAAElK,GAAYzC,KAAKC,MACzB,IAAI0wD,EACJ,GAAuB,kBAAZluD,GAA2C,kBAAZA,EAAsB,CAC5D,MAAMg6B,EAAUj0B,EAAwBxI,KAAKC,MAAOwC,EAAyC,QAA/BkK,EAAK3M,KAAK08B,uBAAoC,IAAP/vB,OAAgB,EAASA,EAAGhK,QAC7H85B,IACAk0B,EAAmBl0B,EAAQ14B,GAEnC,CAIA,GAAItB,QAAgC8D,IAArBoqD,EACX,OAAOA,EAMX,MAAM5/C,EAAS/Q,KAAKwwD,uBAAuBxwD,KAAKC,MAAO8D,GACvD,YAAewC,IAAXwK,GAAyBmJ,GAAcnJ,QAMRxK,IAA5BvG,KAAKouD,cAAcrqD,SACDwC,IAArBoqD,OACEpqD,EACAvG,KAAKmuD,WAAWpqD,GARXgN,CASf,CACA0H,EAAAA,CAAGC,EAAWzP,GAIV,OAHKjJ,KAAKyX,OAAOiB,KACb1Y,KAAKyX,OAAOiB,GAAa,IAAI9B,IAE1B5W,KAAKyX,OAAOiB,GAAW/G,IAAI1I,EACtC,CACA6N,MAAAA,CAAO4B,GACH,GAAI1Y,KAAKyX,OAAOiB,GAAY,SAAAmW,EAAAhoB,UAAAhB,OADXywC,EAAI,IAAAzuC,MAAAgnB,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJunB,EAAIvnB,EAAA,GAAAloB,UAAAkoB,GAEjB/uB,KAAKyX,OAAOiB,GAAW5B,UAAUw/B,EACrC,CACJ,EGvdJ,MAAMsa,WAAyBpD,GAC3BjkD,WAAAA,GACIihB,SAAS3jB,WACT7G,KAAKkoB,iBAAmBqC,EAC5B,CACAglC,wBAAAA,CAAyBzhD,EAAGC,GAMxB,OAAsC,EAA/BD,EAAE+iD,wBAAwB9iD,GAAS,GAAK,CACnD,CACAyiD,sBAAAA,CAAuBvwD,EAAO8D,GAC1B,OAAO9D,EAAM6B,MACP7B,EAAM6B,MAAMiC,QACZwC,CACV,CACAgqD,0BAAAA,CAA2BxsD,EAAG5C,GAAmB,IAAjB,KAAEqnD,EAAI,MAAE1mD,GAAOX,SACpCqnD,EAAKzkD,UACLjC,EAAMiC,EACjB,CACAosD,sBAAAA,GACQnwD,KAAK8wD,oBACL9wD,KAAK8wD,2BACE9wD,KAAK8wD,mBAEhB,MAAM,SAAE7vD,GAAajB,KAAKC,MACtBia,GAAcjZ,KACdjB,KAAK8wD,kBAAoB7vD,EAASwX,GAAG,UAAW8b,IACxCv0B,KAAKG,UACLH,KAAKG,QAAQ4wD,YAAc,GAAH1uD,OAAMkyB,GAClC,IAGZ,EC3BJ,MAAMy8B,WAA0BJ,GAC5BrnD,WAAAA,GACIihB,SAAS3jB,WACT7G,KAAKkM,KAAO,OACZlM,KAAKiuD,eAAiB3D,EAC1B,CACAmG,qBAAAA,CAAsB7pB,EAAU7iC,GAC5B,GAAIwP,EAAe9M,IAAI1C,GAAM,CACzB,MAAMktD,EAAc1rC,GAAoBxhB,GACxC,OAAOktD,GAAcA,EAAYp0C,SAAe,CACpD,CACK,CACD,MAAMq0C,GAfQnxD,EAeyB6mC,EAdxCx9B,OAAO4gB,iBAAiBjqB,IAejBmE,GAASilB,GAAkBplB,GAC3BmtD,EAAcjnC,iBAAiBlmB,GAC/BmtD,EAAcntD,KAAS,EAC7B,MAAwB,kBAAVG,EAAqBA,EAAMqlB,OAASrlB,CACtD,CApBR,IAA0BnE,CAqBtB,CACA4vD,0BAAAA,CAA2B/oB,EAAQzlC,GAA0B,IAAxB,mBAAE6F,GAAoB7F,EACvD,OAAOiqB,GAAmBwb,EAAU5/B,EACxC,CACA0oD,KAAAA,CAAM/H,EAAazrB,EAAcj8B,GAC7BsoD,GAAgBZ,EAAazrB,EAAcj8B,EAAMsrC,kBACrD,CACAic,2BAAAA,CAA4BvnD,EAAOH,EAAWuI,GAC1C,OAAOm/C,GAA4BvnD,EAAOH,EAAWuI,EACzD,EC5BJ,MAAM8oD,WAAyBP,GAC3BrnD,WAAAA,GACIihB,SAAS3jB,WACT7G,KAAKkM,KAAO,MACZlM,KAAKmpD,UAAW,EAChBnpD,KAAK2vD,2BAA6BrqB,EACtC,CACAkrB,sBAAAA,CAAuBvwD,EAAO8D,GAC1B,OAAO9D,EAAM8D,EACjB,CACA0sD,qBAAAA,CAAsB7pB,EAAU7iC,GAC5B,GAAIwP,EAAe9M,IAAI1C,GAAM,CACzB,MAAMktD,EAAc1rC,GAAoBxhB,GACxC,OAAOktD,GAAcA,EAAYp0C,SAAe,CACpD,CAEA,OADA9Y,EAAOymD,GAAoB/jD,IAAI1C,GAA0BA,EAAnBsW,GAAYtW,GAC3C6iC,EAASl0B,aAAa3O,EACjC,CACAyjD,2BAAAA,CAA4BvnD,EAAOH,EAAWuI,GAC1C,OAAOm/C,GAA4BvnD,EAAOH,EAAWuI,EACzD,CACAqnD,KAAAA,CAAM/H,EAAazrB,EAAcj8B,GAC7BipD,GAAcvB,EAAazrB,EAAcl8B,KAAKmpD,SAAUlpD,EAAMsrC,kBAClE,CACA0iB,cAAAA,CAAernB,EAAU+gB,EAAajK,EAAWrV,GAC7CoiB,GAAU7jB,EAAU+gB,EAAajK,EAAWrV,EAChD,CACAtH,KAAAA,CAAM6F,GACF5mC,KAAKmpD,SAAWA,GAASviB,EAASr0B,SAClCiY,MAAMuW,MAAM6F,EAChB,ECpCJ,MAAMwqB,GAAyBA,CAAC7jB,EAAWp+B,IAChCk4C,GAAe9Z,GAChB,IAAI4jB,GAAiBhiD,GACrB,IAAI6hD,GAAkB7hD,EAAS,CAC7B62C,gBAAiBzY,IAAcjnC,GAAAA,WCNrC+qD,GAAuBjqD,ECIe6lD,IAA4Bp9C,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACnErG,IACAy4C,IACAha,IACAxD,IACJ2sB,I,kCCZH,MAAM5K,EAA8B,qBAAXp9C,M,gDCSzB,SAASrG,EAAYsU,GACjB,MAAM/V,GAAMC,EAAAA,EAAAA,QAAO,MAInB,OAHoB,OAAhBD,EAAInB,UACJmB,EAAInB,QAAUkX,KAEX/V,EAAInB,OACf,C,+CCZA,MAAMwF,E,QAA4B6gD,EAAY8K,EAAAA,gBAAkBxqD,EAAAA,S","sources":["../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/utils.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/motion-utils/dist/es/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","../node_modules/motion-dom/dist/es/animation/controls/BaseGroup.mjs","../node_modules/motion-dom/dist/es/animation/controls/Group.mjs","../node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/attach-timeline.mjs","../node_modules/motion-dom/dist/es/utils/is-bezier-definition.mjs","../node_modules/motion-dom/dist/es/utils/supports/flags.mjs","../node_modules/motion-dom/dist/es/utils/supports/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","../node_modules/motion-utils/dist/es/progress.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/easing.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","../node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","../node_modules/motion-dom/dist/es/gestures/hover.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","../node_modules/motion-dom/dist/es/gestures/press/index.mjs","../node_modules/motion-utils/dist/es/time-conversion.mjs","../node_modules/motion-utils/dist/es/noop.mjs","../node_modules/framer-motion/dist/es/render/html/utils/keys-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/keys-position.mjs","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs","../node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs","../node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number-browser.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/transform.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../node_modules/motion-utils/dist/es/errors.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/defaults.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/components/create-factory.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../node_modules/framer-motion/dist/es/render/components/motion/create.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs"],"sourcesContent":["\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useRef, useContext, useInsertionEffect } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    const { nonce } = useContext(MotionConfigContext);\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        if (nonce)\n            style.nonce = nonce;\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (jsx(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size, children: React.cloneElement(children, { ref }) }));\n}\n\nexport { PopChild };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useCallback, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const memoizedOnExitComplete = useCallback((childId) => {\n        presenceChildren.set(childId, true);\n        for (const isComplete of presenceChildren.values()) {\n            if (!isComplete)\n                return; // can stop searching when any is incomplete\n        }\n        onExitComplete && onExitComplete();\n    }, [presenceChildren, onExitComplete]);\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: memoizedOnExitComplete,\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout\n        ? [Math.random(), memoizedOnExitComplete]\n        : [isPresent, memoizedOnExitComplete]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = jsx(PopChild, { isPresent: isPresent, children: children });\n    }\n    return (jsx(PresenceContext.Provider, { value: context, children: children }));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import { Children, isValidElement } from 'react';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n\nexport { getChildKey, onlyElements };\n","\"use client\";\nimport { jsx, Fragment } from 'react/jsx-runtime';\nimport { useMemo, useRef, useState, useContext } from 'react';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { usePresence } from './use-presence.mjs';\nimport { onlyElements, getChildKey } from './utils.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, presenceAffectsLayout = true, mode = \"sync\", propagate = false, }) => {\n    const [isParentPresent, safeToRemove] = usePresence(propagate);\n    /**\n     * Filter any children that aren't ReactElements. We can only track components\n     * between renders with a props.key.\n     */\n    const presentChildren = useMemo(() => onlyElements(children), [children]);\n    /**\n     * Track the keys of the currently rendered children. This is used to\n     * determine which children are exiting.\n     */\n    const presentKeys = propagate && !isParentPresent ? [] : presentChildren.map(getChildKey);\n    /**\n     * If `initial={false}` we only want to pass this to components in the first render.\n     */\n    const isInitialRender = useRef(true);\n    /**\n     * A ref containing the currently present children. When all exit animations\n     * are complete, we use this to re-render the component with the latest children\n     * *committed* rather than the latest children *rendered*.\n     */\n    const pendingPresentChildren = useRef(presentChildren);\n    /**\n     * Track which exiting children have finished animating out.\n     */\n    const exitComplete = useConstant(() => new Map());\n    /**\n     * Save children to render as React state. To ensure this component is concurrent-safe,\n     * we check for exiting children via an effect.\n     */\n    const [diffedChildren, setDiffedChildren] = useState(presentChildren);\n    const [renderedChildren, setRenderedChildren] = useState(presentChildren);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        pendingPresentChildren.current = presentChildren;\n        /**\n         * Update complete status of exiting children.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const key = getChildKey(renderedChildren[i]);\n            if (!presentKeys.includes(key)) {\n                if (exitComplete.get(key) !== true) {\n                    exitComplete.set(key, false);\n                }\n            }\n            else {\n                exitComplete.delete(key);\n            }\n        }\n    }, [renderedChildren, presentKeys.length, presentKeys.join(\"-\")]);\n    const exitingChildren = [];\n    if (presentChildren !== diffedChildren) {\n        let nextChildren = [...presentChildren];\n        /**\n         * Loop through all the currently rendered components and decide which\n         * are exiting.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const child = renderedChildren[i];\n            const key = getChildKey(child);\n            if (!presentKeys.includes(key)) {\n                nextChildren.splice(i, 0, child);\n                exitingChildren.push(child);\n            }\n        }\n        /**\n         * If we're in \"wait\" mode, and we have exiting children, we want to\n         * only render these until they've all exited.\n         */\n        if (mode === \"wait\" && exitingChildren.length) {\n            nextChildren = exitingChildren;\n        }\n        setRenderedChildren(onlyElements(nextChildren));\n        setDiffedChildren(presentChildren);\n        /**\n         * Early return to ensure once we've set state with the latest diffed\n         * children, we can immediately re-render.\n         */\n        return;\n    }\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        renderedChildren.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    /**\n     * If we've been provided a forceRender function by the LayoutGroupContext,\n     * we can use it to force a re-render amongst all surrounding components once\n     * all components have finished animating out.\n     */\n    const { forceRender } = useContext(LayoutGroupContext);\n    return (jsx(Fragment, { children: renderedChildren.map((child) => {\n            const key = getChildKey(child);\n            const isPresent = propagate && !isParentPresent\n                ? false\n                : presentChildren === renderedChildren ||\n                    presentKeys.includes(key);\n            const onExit = () => {\n                if (exitComplete.has(key)) {\n                    exitComplete.set(key, true);\n                }\n                else {\n                    return;\n                }\n                let isEveryExitComplete = true;\n                exitComplete.forEach((isExitComplete) => {\n                    if (!isExitComplete)\n                        isEveryExitComplete = false;\n                });\n                if (isEveryExitComplete) {\n                    forceRender === null || forceRender === void 0 ? void 0 : forceRender();\n                    setRenderedChildren(pendingPresentChildren.current);\n                    propagate && (safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove());\n                    onExitComplete && onExitComplete();\n                }\n            };\n            return (jsx(PresenceChild, { isPresent: isPresent, initial: !isInitialRender.current || initial\n                    ? undefined\n                    : false, custom: isPresent ? undefined : custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode, onExitComplete: isPresent ? undefined : onExit, children: child }, key));\n        }) }));\n};\n\nexport { AnimatePresence };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe)\n            register(id);\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","import { warnOnce } from '../../utils/warn-once.mjs';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { supportsScrollTimeline } from '../../utils/supports/scroll-timeline.mjs';\n\nclass BaseGroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    get finished() {\n        // Support for new finished Promise and legacy thennable API\n        return Promise.all(this.animations.map((animation) => \"finished\" in animation ? animation.finished : animation));\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline, fallback) {\n        const subscriptions = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                return animation.attachTimeline(timeline);\n            }\n            else if (typeof fallback === \"function\") {\n                return fallback(animation);\n            }\n        });\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    flatten() {\n        this.runAll(\"flatten\");\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { BaseGroupPlaybackControls };\n","import { BaseGroupPlaybackControls } from './BaseGroup.mjs';\n\n/**\n * TODO: This is a temporary class to support the legacy\n * thennable API\n */\nclass GroupPlaybackControls extends BaseGroupPlaybackControls {\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n}\n\nexport { GroupPlaybackControls };\n","function getValueTransition(transition, key) {\n    return transition\n        ? transition[key] ||\n            transition[\"default\"] ||\n            transition\n        : undefined;\n}\n\nexport { getValueTransition };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","function isGenerator(type) {\n    return typeof type === \"function\";\n}\n\nexport { isGenerator };\n","function attachTimeline(animation, timeline) {\n    animation.timeline = timeline;\n    animation.onfinish = null;\n}\n\nexport { attachTimeline };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {\n    linearEasing: undefined,\n};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => { var _a; return (_a = supportsFlags[supportsFlag]) !== null && _a !== void 0 ? _a : memoized(); };\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { progress } from 'motion-utils';\n\nconst generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(progress(0, numPoints - 1, i)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","import { isBezierDefinition } from '../../../utils/is-bezier-definition.mjs';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from './linear.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean((typeof easing === \"function\" && supportsLinearEasing()) ||\n        !easing ||\n        (typeof easing === \"string\" &&\n            (easing in supportedWaapiEasing || supportsLinearEasing())) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\" && supportsLinearEasing()) {\n        return generateLinearEasing(easing, duration);\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    var _a;\n    if (elementOrSelector instanceof Element) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            // TODO: Refactor to utils package\n            // invariant(\n            //     Boolean(scope.current),\n            //     \"Scope provided, but no element detected.\"\n            // )\n            root = scope.current;\n        }\n        const elements = (_a = selectorCache === null || selectorCache === void 0 ? void 0 : selectorCache[elementOrSelector]) !== null && _a !== void 0 ? _a : root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\n/**\n * Filter out events that are not pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        callback(event);\n    };\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = filterEvents((enterEvent) => {\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = filterEvents((leaveEvent) => {\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        });\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    });\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(elementOrSelector, onPressStart, options = {}) {\n    const [elements, eventOptions, cancelEvents] = setupGesture(elementOrSelector, options);\n    const startPress = (startEvent) => {\n        const element = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent) || isPressing.has(element))\n            return;\n        isPressing.add(element);\n        const onPressEnd = onPressStart(startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (!isValidPressEvent(endEvent) || !isPressing.has(element)) {\n                return;\n            }\n            isPressing.delete(element);\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, options.useGlobalTarget ||\n                isNodeOrChild(element, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    elements.forEach((element) => {\n        if (!isElementKeyboardAccessible(element) &&\n            element.getAttribute(\"tabindex\") === null) {\n            element.tabIndex = 0;\n        }\n        const target = options.useGlobalTarget ? window : element;\n        target.addEventListener(\"pointerdown\", startPress, eventOptions);\n        element.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions), eventOptions);\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.18.1\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","import { noop } from 'motion-utils';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","const createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst browserNumberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n};\n\nexport { browserNumberValueTypes };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../../../value/types/numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { alpha } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { browserNumberValueTypes } from './number-browser.mjs';\nimport { transformValueTypes } from './transform.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    ...browserNumberValueTypes,\n    ...transformValueTypes,\n    zIndex: int,\n    size: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { invariant } from 'motion-utils';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { positionalKeys } from '../html/utils/keys-position.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { isGenerator } from 'motion-dom';\nimport { warning } from 'motion-utils';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    flatten() {\n        this.options.type = \"keyframes\";\n        this.options.ease = \"linear\";\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from 'motion-utils';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from 'motion-utils';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { calcGeneratorDuration, maxGeneratorDuration, generateLinearEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n    };\n    return generator;\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","import { isBezierDefinition } from 'motion-dom';\nimport { invariant, noop } from 'motion-utils';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { invariant, noop, progress } from 'motion-utils';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix/index.mjs';\nimport { pipe } from './pipe.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { isGenerator, calcGeneratorDuration } from 'motion-dom';\nimport { invariant, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    flatten() {\n        super.flatten();\n        // If we've already resolved the animation, re-initialise it\n        if (this._resolved) {\n            Object.assign(this._resolved, this.initPlayback(this._resolved.keyframes));\n        }\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = isGenerator(type)\n            ? type\n            : generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","import { memo } from 'motion-utils';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n\nexport { supportsWaapi };\n","import { supportsLinearEasing, attachTimeline, isGenerator, isWaapiSupportedEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { anticipate } from '../../easing/anticipate.mjs';\nimport { backInOut } from '../../easing/back.mjs';\nimport { circInOut } from '../../easing/circ.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { startWaapiAnimation } from './waapi/index.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (isGenerator(options.type) ||\n        options.type === \"spring\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If the user has provided an easing function name that isn't supported\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\n         * function. This will later get converted to a linear() easing function.\n         */\n        if (typeof ease === \"string\" &&\n            supportsLinearEasing() &&\n            isUnsupportedEase(ease)) {\n            ease = unsupportedEasingFunctions[ease];\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            attachTimeline(animation, this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            attachTimeline(animation, timeline);\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { mapEasingToNativeEasing } from 'motion-dom';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeInOut\", times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { startWaapiAnimation };\n","import { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, GroupPlaybackControls } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition } from 'motion-dom';\nimport { positionalKeys } from '../../render/html/utils/keys-position.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { isPrimaryPointer } from 'motion-dom';\nimport { secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from 'motion-utils';\nimport { setDragLock } from 'motion-dom';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { progress, noop } from 'motion-utils';\nimport { circOut } from '../../easing/circ.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { getValueTransition } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { cancelFrame, frameData, frameSteps, frame } from '../../frameloop/frame.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nconst isDebug = typeof window !== \"undefined\" && window.MotionDebug !== undefined;\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (isDebug) {\n                    metrics.totalNodes =\n                        metrics.resolvedTargetDeltas =\n                            metrics.recalculatedProjection =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (isDebug) {\n                    window.MotionDebug.record(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (isDebug) {\n                metrics.resolvedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (isDebug) {\n                metrics.recalculatedProjection++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (isDebug) {\n        metrics.totalNodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { Feature } from '../motion/features/Feature.mjs';\nimport { hover } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { Feature } from '../motion/features/Feature.mjs';\nimport { press } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    var _a, _b;\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !((_a = window.MotionHandoffIsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId)) &&\n        ((_b = window.MotionHasOptimisedAnimation) === null || _b === void 0 ? void 0 : _b.call(window, optimisedAppearId)));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                var _a;\n                (_a = window.MotionHandoffMarkAsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    var _a, _b;\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    MotionComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${(_b = (_a = Component.displayName) !== null && _a !== void 0 ? _a : Component.name) !== null && _b !== void 0 ? _b : \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onUpdate, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onUpdate) {\n        /**\n         * onMount works without the VisualElement because it could be\n         * called before the VisualElement payload has been hydrated.\n         * (e.g. if someone is using m components <m.circle />)\n         */\n        state.onMount = (instance) => onUpdate({ props, current: instance, ...state });\n        state.onUpdate = (visualElement) => onUpdate(visualElement);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { transformPropOrder } from './keys-transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { buildTransform } from './build-transform.mjs';\nimport { transformProps } from './keys-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { frame } from '../../frameloop/frame.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction updateSVGDimensions(instance, renderState) {\n    try {\n        renderState.dimensions =\n            typeof instance.getBBox === \"function\"\n                ? instance.getBBox()\n                : instance.getBoundingClientRect();\n    }\n    catch (e) {\n        // Most likely trying to measure an unrendered element under Firefox\n        renderState.dimensions = {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0,\n        };\n    }\n}\nconst layoutProps = [\"x\", \"y\", \"width\", \"height\", \"cx\", \"cy\", \"r\"];\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onUpdate: ({ props, prevProps, current, renderState, latestValues, }) => {\n            if (!current)\n                return;\n            let hasTransform = !!props.drag;\n            if (!hasTransform) {\n                for (const key in latestValues) {\n                    if (transformProps.has(key)) {\n                        hasTransform = true;\n                        break;\n                    }\n                }\n            }\n            if (!hasTransform)\n                return;\n            let needsMeasure = !prevProps;\n            if (prevProps) {\n                /**\n                 * Check the layout props for changes, if any are found we need to\n                 * measure the element again.\n                 */\n                for (let i = 0; i < layoutProps.length; i++) {\n                    const key = layoutProps[i];\n                    if (props[key] !==\n                        prevProps[key]) {\n                        needsMeasure = true;\n                    }\n                }\n            }\n            if (!needsMeasure)\n                return;\n            frame.read(() => {\n                updateSVGDimensions(current, renderState);\n                frame.render(() => {\n                    buildSVGAttrs(renderState, latestValues, isSVGTag(current.tagName), props.transformTemplate);\n                    renderSVG(current, renderState);\n                });\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { transformProps } from './html/utils/keys-transform.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState, onUpdate } = visualState;\n        this.onUpdate = onUpdate;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n        this.onUpdate && this.onUpdate(this);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.18.1\", `Attempting to mix Motion versions ${nextValue.version} with 11.18.1 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","import { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { transformProps } from './utils/keys-transform.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n"],"names":["PopChildMeasure","React","getSnapshotBeforeUpdate","prevProps","element","this","props","childRef","current","isPresent","size","sizeRef","height","offsetHeight","width","offsetWidth","top","offsetTop","left","offsetLeft","componentDidUpdate","render","children","PopChild","_ref","id","useId","ref","useRef","nonce","useContext","MotionConfigContext","useInsertionEffect","dataset","motionPopId","style","document","createElement","head","appendChild","sheet","insertRule","concat","removeChild","jsx","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","useConstant","newChildrenMap","memoizedOnExitComplete","useCallback","childId","set","isComplete","values","context","useMemo","register","delete","Math","random","forEach","_","key","PresenceContext","Provider","value","Map","getChildKey","child","onlyElements","filtered","Children","isValidElement","push","AnimatePresence","propagate","isParentPresent","safeToRemove","usePresence","presentChildren","presentKeys","map","isInitialRender","pendingPresentChildren","exitComplete","diffedChildren","setDiffedChildren","useState","renderedChildren","setRenderedChildren","useIsomorphicLayoutEffect","i","length","includes","get","join","exitingChildren","nextChildren","splice","forceRender","LayoutGroupContext","Fragment","undefined","onExit","has","isEveryExitComplete","isExitComplete","subscribe","arguments","useEffect","createContext","transformPagePoint","p","isStatic","reducedMotion","createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","_target","isAnimationControls","v","start","isKeyframesTarget","Array","isArray","shallowCompare","next","prev","prevLength","isVariantLabel","getValueState","visualElement","state","getVelocity","resolveVariantFromProps","definition","velocity","variants","resolveVariant","getProps","variantPriorityOrder","variantProps","memo","callback","result","supportsScrollTimeline","window","ScrollTimeline","BaseGroupPlaybackControls","constructor","animations","stop","runAll","filter","Boolean","finished","Promise","all","animation","getAll","propName","setAll","newValue","attachTimeline","timeline","fallback","subscriptions","cancel","time","speed","startTime","duration","max","methodName","controls","flatten","play","pause","complete","GroupPlaybackControls","then","onResolve","onReject","catch","getValueTransition","transition","maxGeneratorDuration","calcGeneratorDuration","generator","done","Infinity","isGenerator","type","onfinish","isBezierDefinition","easing","supportsFlags","linearEasing","memoSupports","supportsFlag","memoized","_a","supportsLinearEasing","animate","opacity","e","progress","from","to","toFromDifference","generateLinearEasing","resolution","points","numPoints","round","substring","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","a","b","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","segmentEasing","isDragging","x","y","isDragActive","setupGesture","elementOrSelector","options","elements","scope","selectorCache","Element","root","querySelectorAll","resolveElements","gestureAbortController","AbortController","_objectSpread","passive","signal","abort","filterEvents","event","pointerType","isNodeOrChild","parent","parentElement","isPrimaryPointer","button","isPrimary","focusableElements","Set","isPressing","WeakSet","firePointerEvent","target","dispatchEvent","PointerEvent","bubbles","isValidPressEvent","press","onPressStart","eventOptions","cancelEvents","startPress","startEvent","currentTarget","add","onPressEnd","onPointerEnd","endEvent","success","removeEventListener","onPointerUp","onPointerCancel","upEvent","useGlobalTarget","cancelEvent","addEventListener","tagName","tabIndex","isElementKeyboardAccessible","getAttribute","enableKeyboardPress","focusEvent","handleKeydown","handleKeyup","handleBlur","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","noop","any","transformPropOrder","transformProps","positionalKeys","MotionGlobalConfig","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","thisFrame","nextFrame","flushNextFrame","toKeepAlive","latestFrameData","triggerCallback","step","schedule","queue","process","frameData","clear","createRenderStep","read","resolveKeyframes","update","preRender","postRender","processBatch","performance","now","min","keepAlive","immediate","frame","cancelFrame","frameSteps","requestAnimationFrame","clearTime","newTime","queueMicrotask","addUniqueItem","arr","item","indexOf","removeItem","index","SubscriptionManager","handler","notify","numSubscriptions","getSize","velocityPerSecond","frameDuration","collectMotionValues","MotionValue","init","_this","version","canTrackVelocity","events","updateAndNotify","currentTime","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","owner","isNaN","parseFloat","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","setWithVelocity","jump","endAnimation","getPrevious","startAnimation","resolve","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","setMotionValue","hasValue","getValue","addValue","isMotionValue","addValueToWillChange","willChange","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","getOptimisedAppearId","instantAnimationState","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","reverseEasing","backInOut","anticipate","pow","sin","acos","circInOut","isZeroValueString","test","clamp","number","parse","transform","alpha","scale","default","sanitize","floatRegex","singleColorRegex","isColorString","testProp","startsWith","isNullish","Object","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","hsla","hue","saturation","lightness","color","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","parsedValue","parseComplexValue","createTransformer","source","numSections","output","convertNumbersToZero","complex","_b","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","name","slice","defaultValue","functionRegex","functions","browserNumberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","right","bottom","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","transformValueTypes","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","z","perspective","transformPerspective","originX","originY","originZ","int","numberValueTypes","zIndex","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref2","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","resolver","needsMeasurement","elementsToMeasure","transformsToRestore","removedTransforms","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","isAsync","scheduleResolve","currentValue","finalKeyframe","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","warning","invariant","isNumericalString","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","trim","splitCSSVariableRegex","getVariableValue","depth","exec","token1","token2","parseCSSVariable","resolved","getComputedStyle","getPropertyValue","trimmed","testValueType","dimensionValueTypes","findDimensionValueType","find","DOMKeyframesResolver","super","keyframe","resolveNoneKeyframes","origin","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isAnimatable","canAnimate","keyframes","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","isNotNull","getFinalKeyframe","repeat","repeatType","resolvedKeyframes","BaseAnimation","autoplay","delay","repeatDelay","_objectWithoutProperties","_excluded","isStopped","hasAttemptedResolve","createdAt","updateFinishedPromise","calcStartTime","resolvedAt","_resolved","onKeyframesResolved","onUpdate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","reject","currentFinishedPromise","mixNumber","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","sqrt","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","combineFunctions","pipe","_len","transformers","_key","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mix","mixer","calcGeneratorVelocity","resolveValue","prevT","springDefaults","stiffness","damping","mass","bounce","visualDuration","restSpeed","granular","restDelta","minDuration","maxDuration","minDamping","maxDamping","safeMin","findSpring","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","keys","some","spring","optionsOrVisualDuration","isResolvedFromDuration","springOptions","PI","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","easingLookup","easingDefinitionToFunction","x1","y1","x2","y2","interpolate","input","isClamp","inputLength","isZeroDeltaRange","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","offset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","frameloopDriver","passTimestamp","generators","decay","tween","percentToProgress","MainThreadAnimation","holdTime","cancelTime","playbackSpeed","pendingPlayState","teardown","onStop","KeyframeResolver$1","onResolved","assign","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","resolvedDuration","totalDuration","tick","sample","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","acceleratedValues","supportsWaapi","unsupportedEasingFunctions","AcceleratedAnimation","_this$options","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","valueName","keyframeOptions","iterations","direction","startWaapiAnimation","pendingTimeline","playbackRate","playState","_this$options2","_excluded2","sampleTime","supports","HTMLElement","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","animateMotionValue","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","transitionEnd","animationTypeState","animationState","getState","latestValues","valueTarget","MotionHandoffAnimation","appearId","shouldReduceMotion","setTarget","animateVariant","variant","presenceContext","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","numVariantProps","getVariantContext","isControllingVariants","prop","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","buildResolvedTypeValues","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","liveStyle","valueHasChanged","blockInitialAnimation","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","Feature","node","isMounted","updateAnimationControlsSubscription","unmountControls","mount","prevAnimate","unmount","prevIsPresent","prevPresenceContext","exitAnimation","addDomEvent","extractEventInfo","point","pageX","pageY","addPointerEvent","addPointerInfo","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","isRefObject","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","layout","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","hasTransform","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","instance","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","getContextWindow","ownerDocument","defaultView","elementDragControls","WeakMap","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","drag","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","toUpperCase","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","transformTemplate","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","SwitchLayoutGroupContext","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","scaleCorrectors","microtask","cancelMicrotask","MeasureLayoutWithContext","Component","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","correctors","defaultScaleCorrectors","group","didUpdate","setOptions","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","MeasureLayout","applyTo","boxShadow","compareByDepth","FlatTree","isDirty","timeout","checkElapsed","resolveMotionValue","unwrappedValue","toValue","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","sourceAxis","scaleKey","originKey","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","metrics","totalNodes","resolvedTargetDeltas","recalculatedProjection","isDebug","MotionDebug","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionHasOptimisedAnimation","MotionCancelOptimisedAnimation","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","record","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","args","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","getProjectionStyles","styleProp","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","transformOrigin","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","pan","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","handleHoverEvent","lifecycle","handlePressEvent","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","inView","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","tap","globalTapTarget","focus","onFocus","isFocusVisible","matches","onBlur","hover","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","LazyContext","strict","MotionContext","isVariantNode","useCreateMotionContext","inherit","getCurrentTreeVariants","variantLabelsAsDependency","featureProps","featureDefinitions","isEnabled","motionComponentSymbol","Symbol","for","useMotionRef","visualState","externalRef","onMount","useVisualElement","createVisualElement","ProjectionNodeConstructor","lazyContext","reducedMotionConfig","visualElementRef","renderer","initialLayoutGroupConfig","getClosestProjectingNode","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionIsMounted","updateFeatures","MotionHandoffMarkAsComplete","allowProjection","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","MotionComponent","configAndProps","useLayoutId","isBrowser","useStrictMode","layoutProjection","combined","getProjectionFunctionality","jsxs","features","loadFeatures","displayName","ForwardRefMotionComponent","forwardRef","layoutGroupId","lowercaseSVGElements","isSVGComponent","makeUseVisualState","make","scrapeMotionValuesFromProps","createRenderState","makeLatestValues","renderState","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","getValueAsType","translateAlias","numTransforms","buildHTMLStyles","vars","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createHtmlRenderState","createSvgRenderState","tag","renderHTML","setProperty","camelCaseAttributes","renderSVG","_styleProp","setAttribute","isForcedMotionValue","newValues","scrapeMotionValuesFromProps$1","charAt","layoutProps","svgMotionConfig","needsMeasure","getBBox","updateSVGDimensions","htmlMotionConfig","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","onTap","onTapStart","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","createMotionComponentFactory","baseConfig","prefersReducedMotion","hasReducedMotionListener","valueTypes","visualElementStore","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","_this$scrapeMotionVal","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","childSubscription","textContent","HTMLVisualElement","defaultType","computedStyle","SVGVisualElement","createDomVisualElement","motion","useLayoutEffect"],"sourceRoot":""}