{"version":3,"file":"static/js/317.c6ce1e77.chunk.js","mappings":"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","sources":["components/freeServices/panchangReportSection/Choghadiya.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { FaExclamationTriangle, FaSpinner } from 'react-icons/fa'\n\nconst Choghadiya = ({ \n  panchangData, \n  selectedLocation = { latitude: 19.076, longitude: 72.877 }, \n  currentDate = new Date() \n}) => {\n  const [choghadiyaData, setChoghadiyaData] = useState(null)\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState(null)\n\n  useEffect(() => {\n    const fetchChoghadiyaData = async () => {\n      const userId = '636470'\n      const apiKey = 'f18878ae6d3e7627238b03d4d53999548576e4c1'\n      const api = 'chaughadiya_muhurta'\n      const language = 'en'\n\n      const data = {\n        day: currentDate.getDate(),\n        month: currentDate.getMonth() + 1,\n        year: currentDate.getFullYear(),\n        hour: currentDate.getHours(),\n        min: currentDate.getMinutes(),\n        lat: selectedLocation.latitude,\n        lon: selectedLocation.longitude,\n        tzone: 5.5,\n      }\n\n      const auth = `Basic ${btoa(`${userId}:${apiKey}`)}`\n\n      try {\n        const response = await axios.post(\n          `https://json.astrologyapi.com/v1/${api}`,\n          data,\n          {\n            headers: {\n              'Authorization': auth,\n              'Content-Type': 'application/json',\n              'Accept-Language': language\n            },\n            timeout: 15000\n          }\n        )\n\n        if (response.data?.chaughadiya) {\n          setChoghadiyaData(response.data.chaughadiya)\n          setLoading(false)\n        } else {\n          throw new Error('No Choghadiya data received')\n        }\n      } catch (err) {\n        console.error('Choghadiya API Error:', err)\n        setError({\n          message: err.message,\n          details: err.response?.data || 'Unknown error'\n        })\n        setLoading(false)\n      }\n    }\n\n    // Only fetch if panchangData is not available\n    if (!panchangData) {\n      fetchChoghadiyaData()\n    } else {\n      setLoading(false)\n    }\n  }, [panchangData, selectedLocation, currentDate])\n\n  const renderMuhurtaColor = (muhurta) => {\n    const colorMap = {\n      'Labh': '#5DC709',     // Green (Positive)\n      'Amrit': '#2972E0',    // Blue (Neutral)\n      'Shubh': '#5DC709',    // Green (Positive)\n      'Kaal': '#DF5102',     // Red (Negative)\n      'Rog': '#DF5102',      // Red (Negative)\n      'Udveg': '#2972E0',    // Blue (Neutral)\n      'Char': '#2972E0'      // Blue (Neutral)\n    }\n    return colorMap[muhurta] || '#787878'\n  }\n\n  const renderMuhurtaDescription = (muhurta) => {\n    const descriptionMap = {\n      'Labh': 'Profitable Time',\n      'Amrit': 'Auspicious Time',\n      'Shubh': 'Favorable Time',\n      'Kaal': 'Challenging Time',\n      'Rog': 'Potentially Harmful Time',\n      'Udveg': 'Unsettled Time',\n      'Char': 'Changing Time'\n    }\n    return descriptionMap[muhurta] || 'Unknown Time'\n  }\n\n  if (loading) {\n    return (\n      <div className='w-full flex justify-center items-center py-12'>\n        <FaSpinner className='animate-spin text-4xl text-blue-500' />\n        <span className='ml-4 text-gray-600'>Loading Choghadiya data...</span>\n      </div>\n    )\n  }\n\n  if (error) {\n    return (\n      <div className='w-full bg-red-50 border border-red-200 p-6 rounded-lg flex items-center'>\n        <FaExclamationTriangle className='text-4xl text-red-500 mr-4' />\n        <div>\n          <h3 className='text-xl font-bold text-red-700 mb-2'>Error Loading Choghadiya</h3>\n          <p className='text-red-600'>{error.message}</p>\n          {error.details && (\n            <pre className='mt-2 p-2 bg-red-100 rounded text-xs text-red-800'>\n              {JSON.stringify(error.details, null, 2)}\n            </pre>\n          )}\n        </div>\n      </div>\n    )\n  }\n\n  // Use panchangData if available, otherwise use fetched data\n  const dataToRender = panchangData?.chaughadiya || choghadiyaData\n\n  if (!dataToRender) {\n    return (\n      <div className='w-full bg-yellow-50 border border-yellow-200 p-6 rounded-lg text-center'>\n        <FaExclamationTriangle className='text-4xl text-yellow-500 mx-auto mb-4' />\n        <h3 className='text-xl font-bold text-yellow-700'>No Choghadiya Data Available</h3>\n        <p className='text-yellow-600'>Unable to retrieve Choghadiya information at this time.</p>\n      </div>\n    )\n  }\n\n  return (\n    <div className='w-full'>\n      <div className=\"grid grid-cols-3 grid-rows-1 gap-4 w-full lg:w-3/4 mx-auto mb-6\">\n        <div className='flex items-center gap-2 justify-start'>\n          <div className='h-5 lg:h-10 w-5 lg:w-10 rounded-full bg-[#5DC709]'></div>\n          <h3 className='text-[#787878]'>Positive</h3>\n        </div>\n        <div className='flex items-center gap-2 justify-center'>\n          <div className='h-5 lg:h-10 w-5 lg:w-10 rounded-full bg-[#2972E0]'></div>\n          <h3 className='text-[#787878]'>Neutral</h3>\n        </div>\n        <div className='flex items-center gap-2 justify-end'>\n          <div className='h-5 lg:h-10 w-5 lg:w-10 rounded-full bg-[#DF5102]'></div>\n          <h3 className='text-[#787878]'>Negative</h3>\n        </div>\n      </div>\n\n      <div className='my-6'>\n        <h2 className='text-2xl font-bold mb-4 text-center'>Day Choghadiya</h2>\n        <table className=\"table-auto w-full lg:w-3/4 mx-auto border-none bg-white rounded-[10px] shadow-md\">\n          <tbody className=\"text-[#747474]\">\n            {dataToRender.day.map((item, index) => (\n              <tr \n                key={index} \n                className=\"border-b last:border-b-0 hover:bg-gray-50 transition\"\n                style={{ color: renderMuhurtaColor(item.muhurta) }}\n              >\n                <td className=\"py-3 px-10 text-left font-semibold\">{item.time}</td>\n                <td className=\"py-3 px-10 text-right\">\n                  {item.muhurta} - {renderMuhurtaDescription(item.muhurta)}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n\n        <h2 className='text-2xl font-bold my-4 text-center mt-8'>Night Choghadiya</h2>\n        <table className=\"table-auto w-full lg:w-3/4 mx-auto border-none bg-white rounded-[10px] shadow-md\">\n          <tbody className=\"text-[#747474]\">\n            {dataToRender.night.map((item, index) => (\n              <tr \n                key={index} \n                className=\"border-b last:border-b-0 hover:bg-gray-50 transition\"\n                style={{ color: renderMuhurtaColor(item.muhurta) }}\n              >\n                <td className=\"py-3 px-10 text-left font-semibold\">{item.time}</td>\n                <td className=\"py-3 px-10 text-right\">\n                  {item.muhurta} - {renderMuhurtaDescription(item.muhurta)}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  )\n}\n\nexport default Choghadiya"],"names":["_ref","panchangData","selectedLocation","latitude","longitude","currentDate","Date","choghadiyaData","setChoghadiyaData","useState","loading","setLoading","error","setError","useEffect","async","data","day","getDate","month","getMonth","year","getFullYear","hour","getHours","min","getMinutes","lat","lon","tzone","auth","concat","btoa","_response$data","response","axios","post","headers","timeout","chaughadiya","Error","err","_err$response","console","message","details","fetchChoghadiyaData","renderMuhurtaColor","muhurta","renderMuhurtaDescription","_jsxs","className","children","_jsx","FaSpinner","FaExclamationTriangle","JSON","stringify","dataToRender","map","item","index","style","color","time","night"],"sourceRoot":""}